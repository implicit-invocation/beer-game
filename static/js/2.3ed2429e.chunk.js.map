{"version":3,"sources":["../node_modules/box2d.ts/dist/box2d.umd.js","../node_modules/gdxjs/lib/createAnimation.js","../node_modules/gdxjs/lib/createBatch.js","../node_modules/gdxjs/lib/createGameLoop.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/gdxjs/lib/InputHandler.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/gdxjs/lib/loadTexture.js","../node_modules/gdxjs/lib/loadLocalAtlas.js","../node_modules/gdxjs/lib/mathUtils.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gdxjs/lib/orthoCamera.js","../node_modules/gdxjs/lib/resizeCanvas.js","../node_modules/gdxjs/lib/Vector2.js","../node_modules/gdxjs/lib/shapeUtils.js","../node_modules/gdxjs/lib/index.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/klasse/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/kami-texture2/index.js","../node_modules/kami-util/index.js","../node_modules/number-util/index.js","../node_modules/kami-mesh-buffer/index.js","../node_modules/fbemitter/lib/EmitterSubscription.js","../node_modules/fbjs/lib/invariant.js","../node_modules/ndarray/ndarray.js","../node_modules/webpack/buildin/global.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/kami-batch2/index.js","../node_modules/fbemitter/index.js","../node_modules/gl-white-texture/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/kami-util/wrapper.js","../node_modules/kami-shader/index.js","../node_modules/webgl-compile-shader/index.js","../node_modules/webgl-context/index.js","../node_modules/kami-base-batch/index.js","../node_modules/kami-base-batch/mixins.js","../node_modules/fbemitter/lib/BaseEventEmitter.js","../node_modules/fbemitter/lib/EventSubscription.js","../node_modules/fbemitter/lib/EventSubscriptionVendor.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/gl-texture2d/texture.js","../node_modules/iota-array/iota.js","../node_modules/is-buffer/index.js","../node_modules/ndarray-ops/ndarray-ops.js","../node_modules/cwise-compiler/compiler.js","../node_modules/cwise-compiler/lib/thunk.js","../node_modules/cwise-compiler/lib/compile.js","../node_modules/uniq/uniq.js","../node_modules/typedarray-pool/pool.js","../node_modules/bit-twiddle/twiddle.js","../node_modules/dup/dup.js","../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/common.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/mat2.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/mat2d.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/mat3.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/mat4.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/vec3.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/vec4.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/quat.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/quat2.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix/vec2.js","../node_modules/kami-batch2/node_modules/gl-matrix/lib/gl-matrix.js"],"names":["exports","b2Maybe","value","def","undefined","b2_pi","b2_angularSlop","b2Version","major","minor","revision","this","b2_version","b2MakeArray","length","init","a","i","push","b2MakeNumberArray","b2Abs","Math","abs","b2Min","min","b2Max","max","b2Clamp","lo","hi","b2IsValid","isFinite","b2Sq","n","b2InvSqrt","sqrt","b2Sqrt","b2Pow","pow","b2Cos","cos","b2Sin","sin","b2Acos","acos","b2Asin","asin","b2Atan2","atan2","b2Vec2","x","y","other","v","s","Length","inv_length","radians","c","out","b","v_x","v_y","c_x","c_y","ZERO","UNITX","UNITY","s_t0","s_t1","s_t2","s_t3","b2Vec2_zero","b2Vec3","z","a_x","a_y","a_z","b_x","b_y","b_z","b2Mat22","ex","ey","Copy","r1c1","r1c2","r2c1","r2c2","Set","c1","c2","SetZero","d","det","a11","a12","a21","a22","SelfAbs","GetInverse","M","SelfAdd","SelfSub","SetVV","SetSSSS","SetAngle","M_ex","M_ey","A","B","A_ex","A_ey","B_ex","B_ey","A_ex_x","A_ex_y","A_ey_x","A_ey_y","B_ex_x","B_ex_y","B_ey_x","B_ey_y","IDENTITY","b2Mat33","ez","c3","SetXYZ","a31","a32","a13","a23","a33","DotV3V3","CrossV3V3","v_z","b2Rot","angle","q","r","q_c","q_s","r_c","r_s","b2Transform","p","SetIdentity","position","pos","rotation","GetAngle","T","T_q_c","T_q_s","p_x","p_y","MulRR","AddVV","MulRV","MulTRR","MulTRV","SubVV","b2DrawFlags","b2Sweep","localCenter","c0","a0","alpha0","xf","beta","one_minus_beta","alpha","floor","b2Color","rr","gg","bb","aa","g","color","SetRGBA","mixColor","strength","MixColors","MakeStyleString","colorA","colorB","dr","dg","db","da","RED","GREEN","BLUE","b2Draw","m_drawFlags","flags","b2Timer","m_start","Date","now","b2Counter","m_count","m_min_count","m_max_count","count","b2GrowableStack","N","m_stack","index","element","Error","b2DistanceProxy","m_buffer","MakeArray","m_vertices","m_radius","shape","SetupDistanceProxy","vertices","radius","bestIndex","bestValue","DotVV","b2SimplexCache","metric","indexA","indexB","b2DistanceInput","proxyA","proxyB","transformA","transformB","useRadii","Reset","b2DistanceOutput","pointA","pointB","distance","iterations","b2_gjkCalls","b2_gjkIters","b2_gjkMaxIters","b2SimplexVertex","wA","wB","w","b2Simplex","m_v1","m_v2","m_v3","cache","wALocal","GetVertex","wBLocal","MulXV","metric1","metric2","GetMetric","NegV","e12","CrossVV","CrossOneV","CrossVOne","pA","pB","DistanceVV","w1","w2","s_e12","d12_2","d12_1","inv_d12","w3","w1e12","e13","s_e13","w1e13","d13_1","d13_2","e23","s_e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","b2Distance_s_simplex","b2Distance_s_saveA","b2Distance_s_saveB","b2Distance_s_p","b2Distance_s_d","b2Distance_s_normal","b2Distance_s_supportA","b2Distance_s_supportB","b2Distance","output","input","simplex","ReadCache","saveA","saveB","saveCount","iter","Solve2","Solve3","GetSearchDirection","LengthSquared","vertex","GetSupport","duplicate","GetWitnessPoints","WriteCache","rA","rB","normal","Normalize","SelfMulAdd","SelfMulSub","MidVV","b2ContactFeatureType","b2ShapeCast_s_n","b2ShapeCast_s_simplex","b2ShapeCast_s_wA","b2ShapeCast_s_wB","b2ShapeCast_s_v","b2ShapeCast_s_p","b2ShapeCast_s_pointA","b2ShapeCast_s_pointB","b2ManifoldType","b2ContactFeature","_key","_key_invalid","_indexA","_indexB","_typeA","_typeB","b2ContactID","cf","o","key","b2ManifoldPoint","localPoint","normalImpulse","tangentImpulse","id","b2PointState","b2Manifold","points","localNormal","type","e_unknown","pointCount","b2WorldManifold","separations","manifold","xfA","radiusA","xfB","radiusB","e_circles","Initialize_s_pointA","Initialize_s_pointB","DistanceSquaredVV","SelfNormalize","cA","AddVMulSV","Initialize_s_cA","cB","SubVMulSV","Initialize_s_cB","e_faceA","planePoint","Initialize_s_planePoint","clipPoint","Initialize_s_clipPoint","e_faceB","SelfNeg","b2ClipVertex","b2RayCastInput","p1","p2","maxFraction","b2RayCastOutput","fraction","b2AABB","lowerBound","upperBound","m_cache_center","m_cache_extent","d_x","d_y","valid","IsValid","ExtVV","aabb","aabb1","aabb2","result","tmin","tmax","absD_x","absD_y","inv_d","t1","t2","t3","point","d1_x","d1_y","d2_x","d2_y","Combine2","b2TestOverlapAABB","b2ClipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","vIn0","vIn1","distance0","distance1","interp","typeA","e_vertex","typeB","e_face","b2TestOverlapShape_s_input","b2TestOverlapShape_s_simplexCache","b2TestOverlapShape_s_output","b2TestOverlapShape","shapeA","shapeB","SetShape","simplexCache","verify","b2TreeNode","m_id","parent","child1","child2","height","b2DynamicTree","m_root","m_freeList","m_path","m_insertionCount","callback","stack","Push","GetCount","node","Pop","TestOverlap","IsLeaf","TestContain","s_r","s_v","abs_v","AbsV","s_abs_v","segmentAABB","s_segmentAABB","t_x","t_y","GetCenter","h","GetExtents","subInput","s_subInput","userData","s_node_id","AllocateNode","InsertLeaf","proxy","RemoveLeaf","FreeNode","displacement","Contains","r_x","r_y","leaf","leafAABB","area","GetPerimeter","combinedAABB","s_combinedAABB","combinedArea","cost","inheritanceCost","cost1","s_aabb","oldArea","cost2","sibling","oldParent","newParent","index2","Balance","grandParent","C","balance","F","G","D","E","rootArea","GetAreaNode","height1","ComputeHeightNode","height2","ValidateStructure","ValidateMetrics","GetMaxBalanceNode","Validate","newOrigin","ShiftOriginNode","maxBalance","b2Pair","b2BroadPhase","m_tree","m_proxyCount","m_moveCount","m_moveBuffer","m_pairCount","m_pairBuffer","CreateProxy","BufferMove","UnBufferMove","DestroyProxy","MoveProxy","queryProxy","fatAABB","Query","pair","sort","b2PairLessThan","primaryPair","QueryPoint","RayCast","GetHeight","GetMaxBalance","GetAreaRatio","ShiftOrigin","indexOf","pair1","pair2","b2_toiTime","b2_toiMaxTime","b2_toiCalls","b2_toiIters","b2_toiMaxIters","b2_toiRootIters","b2_toiMaxRootIters","b2TOIOutputState","b2TimeOfImpact_s_xfA","b2TimeOfImpact_s_xfB","b2TimeOfImpact_s_pointA","b2TimeOfImpact_s_pointB","b2TimeOfImpact_s_normal","b2TimeOfImpact_s_axisA","b2TimeOfImpact_s_axisB","b2TOIInput","sweepA","sweepB","tMax","b2SeparationFunctionType","b2TOIOutput","state","t","b2SeparationFunction","m_sweepA","m_sweepB","m_type","m_localPoint","m_axis","m_proxyA","m_proxyB","GetTransform","e_points","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","axisA","axisB","b2TimeOfImpact_s_timer","b2TimeOfImpact_s_cache","b2TimeOfImpact_s_distanceInput","b2TimeOfImpact_s_distanceOutput","b2TimeOfImpact_s_fcn","b2TimeOfImpact_s_indexA","b2TimeOfImpact_s_indexB","b2TimeOfImpact_s_sweepA","b2TimeOfImpact_s_sweepB","b2TimeOfImpact","timer","maxVertices","totalRadius","target","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","Initialize","done","pushBackIter","s2","FindMinSeparation","e_separated","s1","Evaluate","e_failed","rootIterCount","a1","a2","time","GetMilliseconds","b2CollideCircles_s_pA","b2CollideCircles_s_pB","b2CollideCircles","circleA","circleB","m_p","distSqr","b2CollidePolygonAndCircle_s_c","b2CollidePolygonAndCircle_s_cLocal","b2CollidePolygonAndCircle_s_faceCenter","b2CollidePolygonAndCircle","polygonA","cLocal","MulTXV","normalIndex","separation","vertexCount","normals","m_normals","vertIndex1","vertIndex2","v1","v2","u1","u2","faceCenter","b2EdgeSeparation_s_normal1World","b2EdgeSeparation_s_normal1","b2EdgeSeparation_s_v1","b2EdgeSeparation_s_v2","b2EdgeSeparation","poly1","xf1","edge1","poly2","xf2","vertices1","normals1","count2","vertices2","normal1World","normal1","minDot","dot","b2FindMaxSeparation_s_d","b2FindMaxSeparation_s_dLocal1","b2FindMaxSeparation","edgeIndex","count1","m_centroid","dLocal1","edge","maxDot","prevEdge","sPrev","nextEdge","sNext","bestEdge","bestSeparation","increment","b2FindIncidentEdge_s_normal1","b2CollidePolygons_s_incidentEdge","b2CollidePolygons_s_clipPoints1","b2CollidePolygons_s_clipPoints2","b2CollidePolygons_s_edgeA","b2CollidePolygons_s_edgeB","b2CollidePolygons_s_localTangent","b2CollidePolygons_s_localNormal","b2CollidePolygons_s_planePoint","b2CollidePolygons_s_normal","b2CollidePolygons_s_tangent","b2CollidePolygons_s_ntangent","b2CollidePolygons_s_v11","b2CollidePolygons_s_v12","b2CollidePolygons","polyA","polyB","edgeA","separationA","edgeB","separationB","flip","incidentEdge","normals2","i1","i2","cf0","cf1","b2FindIncidentEdge","iv1","iv2","local_v11","local_v12","localTangent","tangent","v11","v12","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","cv","cp","b2CollideEdgeAndCircle_s_Q","b2CollideEdgeAndCircle_s_e","b2CollideEdgeAndCircle_s_d","b2CollideEdgeAndCircle_s_e1","b2CollideEdgeAndCircle_s_e2","b2CollideEdgeAndCircle_s_P","b2CollideEdgeAndCircle_s_n","b2CollideEdgeAndCircle_s_id","b2CollideEdgeAndCircle","Q","m_vertex1","m_vertex2","e","u","P","m_hasVertex0","A1","m_vertex0","B1","e1","m_hasVertex3","B2","m_vertex3","A2","e2","den","b2EPAxis","b2TempPolygon","b2EPCollider","m_polygonB","m_xf","m_centroidB","m_v0","m_normal0","m_normal1","m_normal2","m_normal","m_type1","m_type2","m_lowerLimit","m_upperLimit","m_front","polygonB","MulTXX","hasVertex0","hasVertex3","s_edge1","offset1","offset0","offset2","convex1","convex2","edge0","s_edge0","edge2","s_edge2","edgeAxis","ComputeEdgeSeparation","s_edgeAxis","polygonAxis","ComputePolygonSeparation","s_polygonAxis","primaryAxis","ie","s_ie","rf","s_rf","ie0","ie1","sideNormal1","sideNormal2","s_clipPoints1","s_clipPoints2","axis","perp","s_perp","s_n","b2CollideEdgeAndPolygon_s_collider","b2CollideEdgeAndPolygon","Collide","b2ShapeType","b2MassData","mass","center","I","b2Shape","b2CircleShape","e_circleShape","transform","TestPoint_s_center","TestPoint_s_d","childIndex","ComputeDistance_s_center","RayCast_s_position","RayCast_s_s","RayCast_s_r","sigma","ComputeAABB_s_p","massData","density","radius_sq","l","r2","l2","com","log","b2PolygonShape","e_polygonShape","start","SetAsBox","ps","unique","j","i0","x0","hull","m","ih","Set_s_r","Set_s_v","vertexi1","vertexi2","ComputeCentroid","hx","hy","SetPosition","SetRotationAngle","pLocal","TestPoint_s_pLocal","ComputeDistance_s_pLocal","maxDistance","normalForMaxDistance","ComputeDistance_s_normalForMaxDistance","minDistance","ComputeDistance_s_minDistance","minDistance2","ComputeDistance_s_distance","distance2","RayCast_s_p1","RayCast_s_p2","RayCast_s_d","lower","upper","numerator","denominator","ComputeAABB_s_v","MinV","MaxV","SelfSubXY","SelfAddXY","ComputeMass_s_center","ComputeMass_s_s","SelfMul","ComputeMass_s_e1","ComputeMass_s_e2","triangleArea","MulSV","ex1","ey1","ex2","ey2","Validate_s_e","Validate_s_v","normalL","ComputeSubmergedArea_s_normalL","offsetL","depths","diveCount","intoIndex","outoIndex","lastSubmerged","isSubmerged","md","ComputeSubmergedArea_s_md","ComputeMass","p3","intoIndex2","outoIndex2","intoLamdda","outoLamdda","intoVec","ComputeSubmergedArea_s_intoVec","outoVec","ComputeSubmergedArea_s_outoVec","ComputeSubmergedArea_s_center","vs","pRef","ComputeCentroid_s_pRef","ComputeCentroid_s_e1","ComputeCentroid_s_e2","b2EdgeShape","e_edgeShape","ComputeDistance_s_v1","ComputeDistance_s_v2","ComputeDistance_s_d","ComputeDistance_s_s","ds","RayCast_s_e","RayCast_s_q","ComputeAABB_s_v1","ComputeAABB_s_v2","b2ChainShape","e_chainShape","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","prevVertex","nextVertex","CreateChain","ComputeDistance_s_edgeShape","GetChildEdge","ComputeDistance","edgeShape","RayCast_s_edgeShape","b2Filter","categoryBits","maskBits","groupIndex","DEFAULT","b2BodyType","b2FixtureDef","friction","restitution","isSensor","filter","b2FixtureProxy","fixture","b2Fixture","body","m_density","m_next","m_friction","m_restitution","m_proxies","m_filter","m_isSensor","m_userData","m_body","m_shape","Clone","GetType","sensor","SetAwake","Refilter","GetContactList","contact","fixtureA","GetFixtureA","fixtureB","GetFixtureB","FlagForFiltering","next","world","GetWorld","broadPhase","m_contactManager","m_broadPhase","TouchProxy","treeNode","data","TestPoint","bodyIndex","Dump","GetChildCount","m_world","ComputeAABB","proxyCount","transform1","transform2","Synchronize_s_aabb1","Synchronize_s_aabb2","Synchronize_s_displacement","b2LimitState","b2JointType","b2Body","bd","b2_staticBody","m_islandFlag","m_awakeFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_toiFlag","m_islandIndex","m_xf0","m_sweep","m_linearVelocity","m_angularVelocity","m_force","m_torque","m_prev","m_fixtureList","m_fixtureCount","m_jointList","m_contactList","m_mass","m_invMass","m_I","m_invI","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_controllerList","m_controllerCount","bullet","fixedRotation","allowSleep","awake","active","linearVelocity","angularVelocity","linearDamping","angularDamping","gravityScale","b2_dynamicBody","CreateFixtureShapeDensity","CreateFixtureDef","IsLocked","Create","CreateProxies","ResetMassData","m_newFixture","CreateFixtureShapeDensity_s_def","ppF","Destroy","DestroyProxies","SetTransformXY","f","Synchronize","FindNewContacts","SetTransformVec","GetPosition","GetLinearVelocity","GetUserData","force","wake","torque","impulse","oldCenter","SetMassData_s_oldCenter","AddVCrossSV","b2_kinematicBody","ResetMassData_s_localCenter","GetMassData","ResetMassData_s_massData","ResetMassData_s_oldCenter","localVector","worldPoint","worldVector","GetLinearVelocityFromWorldPoint","GetWorldPoint","scale","SynchronizeFixtures","ce","ce0","TouchProxies","flag","IsActive","type_str","SynchronizeFixtures_s_xf1","ShouldCollideConnected","jn","joint","m_collideConnected","Advance","b2Jacobian","linear","angularA","angularB","b2JointEdge","prev","b2JointDef","e_unknownJoint","collideConnected","b2Joint","m_index","m_edgeA","bodyB","m_edgeB","bodyA","m_bodyA","m_bodyB","b2DistanceJointDef","e_distanceJoint","localAnchorA","localAnchorB","frequencyHz","dampingRatio","b1","b2","anchor1","anchor2","GetLocalPoint","b2DistanceJoint","m_frequencyHz","m_dampingRatio","m_bias","m_localAnchorA","m_localAnchorB","m_gamma","m_impulse","m_length","m_indexA","m_indexB","m_u","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_qA","m_qB","m_lalcA","m_lalcB","inv_dt","hz","ratio","positions","aA","vA","velocities","aB","vB","qA","qB","crAu","crBu","invMass","omega","k","step","dt","warmStarting","dtRatio","InitVelocityConstraints_s_P","vpA","SolveVelocityConstraints_s_vpA","vpB","SolveVelocityConstraints_s_vpB","Cdot","SolveVelocityConstraints_s_P","SolvePositionConstraints_s_P","b2AreaJointDef","e_areaJoint","bodies","b2AreaJoint","m_targetArea","m_bodies","m_targetLengths","m_joints","m_deltas","m_delta","djd","body_c","GetWorldCenter","next_c","CreateJoint","SetFrequency","SetDampingRatio","prev_c","delta","body_v","dotMassSum","crossMassSum","GetMass","lambda","perimeter","dist","toExtrude","next_i","norm_sq","b2FrictionJointDef","e_frictionJoint","maxForce","maxTorque","bA","bB","anchor","b2FrictionJoint","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","m_K","mA","mB","iA","iB","K","oldImpulse","maxImpulse","Cdot_v2","SolveVelocityConstraints_s_Cdot_v2","impulseV","MulMV","SolveVelocityConstraints_s_impulseV","oldImpulseV","SolveVelocityConstraints_s_oldImpulseV","b2GearJointDef","e_gearJoint","b2GearJoint","coordinateA","coordinateB","m_typeA","m_typeB","m_localAnchorC","m_localAnchorD","m_localAxisC","m_localAxisD","m_referenceAngleA","m_referenceAngleB","m_constant","m_ratio","m_indexC","m_indexD","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","m_qC","m_qD","m_lalcC","m_lalcD","m_joint1","joint1","m_joint2","joint2","m_bodyC","GetBodyA","GetBodyB","xfC","aC","e_revoluteJoint","revolute","m_referenceAngle","prismatic","m_localXAxisA","pC","m_bodyD","xfD","aD","pD","vC","wC","vD","wD","qC","qD","InitVelocityConstraints_s_u","rC","InitVelocityConstraints_s_rC","InitVelocityConstraints_s_rA","rD","InitVelocityConstraints_s_rD","InitVelocityConstraints_s_rB","JwA","JwB","JwC","JwD","cC","cD","JvAC","JvBD","SolvePositionConstraints_s_u","SolvePositionConstraints_s_rC","SolvePositionConstraints_s_rA","SolvePositionConstraints_s_rD","SolvePositionConstraints_s_rB","linearError","index1","b2MotorJointDef","e_motorJoint","linearOffset","angularOffset","correctionFactor","angleA","angleB","b2MotorJoint","m_linearOffset","m_angularOffset","m_correctionFactor","m_linearError","m_angularError","IsEqualToV","inv_h","CrossSV","impulse_v2","SolveVelocityConstraints_s_impulse_v2","oldImpulse_v2","SolveVelocityConstraints_s_oldImpulse_v2","b2MouseJointDef","e_mouseJoint","b2MouseJoint","m_targetA","m_beta","m_C","IsAwake","SolveVelocityConstraints_s_Cdot","SolveVelocityConstraints_s_impulse","SolveVelocityConstraints_s_oldImpulse","b2PrismaticJointDef","e_prismaticJoint","localAxisA","referenceAngle","enableLimit","lowerTranslation","upperTranslation","enableMotor","maxMotorForce","motorSpeed","GetLocalVector","b2PrismaticJoint","m_localYAxisA","m_motorImpulse","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_motorSpeed","m_enableLimit","m_enableMotor","m_limitState","e_inactiveLimit","m_perp","m_s1","m_s2","m_a1","m_a2","m_K3","m_K2","m_motorMass","InitVelocityConstraints_s_d","jointTranslation","e_equalLimits","e_atLowerLimit","e_atUpperLimit","LA","LB","Cdot1_x","Cdot1_y","Cdot2","f1","SolveVelocityConstraints_s_f1","df3","Solve33","SolveVelocityConstraints_s_df3","f2r","Solve22","SolveVelocityConstraints_s_f2r","df2","SolveVelocityConstraints_s_df2","SolvePositionConstraints_s_d","SolvePositionConstraints_s_impulse","C1_x","C1_y","angularError","C2","translation","k11","k12","k13","k22","k23","k33","K2","impulse1","Solve","SolvePositionConstraints_s_impulse1","GetJointTranslation_s_pA","GetJointTranslation_s_pB","GetJointTranslation_s_d","GetWorldVector","GetJointTranslation_s_axis","speed","b2PulleyJointDef","e_pulleyJoint","groundAnchorA","groundAnchorB","lengthA","lengthB","groundA","groundB","anchorA","anchorB","b2PulleyJoint","m_groundAnchorA","m_groundAnchorB","m_lengthA","m_lengthB","m_uA","m_uB","ruA","ruB","PA","InitVelocityConstraints_s_PA","PB","InitVelocityConstraints_s_PB","SolveVelocityConstraints_s_PA","SolveVelocityConstraints_s_PB","uA","uB","SolvePositionConstraints_s_PA","SolvePositionConstraints_s_PB","GetCurrentLengthA_s_p","GetCurrentLengthB_s_p","b2RevoluteJointDef","lowerAngle","upperAngle","maxMotorTorque","b2RevoluteJoint","m_maxMotorTorque","m_lowerAngle","m_upperAngle","jointAngle","Cdot1","SolveVelocityConstraints_s_Cdot1","impulse_v3","SolveVelocityConstraints_s_impulse_v3","rhs_x","rhs_y","reduced_v2","SolveVelocityConstraints_s_reduced_v2","positionError","limitImpulse","C_v2","SolvePositionConstraints_s_C_v2","b2RopeJointDef","e_ropeJoint","maxLength","b2RopeJoint","m_maxLength","m_state","crA","crB","b2WeldJointDef","e_weldJoint","b2WeldJoint","GetInverse22","invM","GetSymInverse33","impulse2","MulM33XY","SolveVelocityConstraints_s_impulse1","MulM33XYZ","C1","SolvePositionConstraints_s_C1","b2WheelJointDef","e_wheelJoint","b2WheelJoint","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","m_springMass","damp","ay","sAy","sBy","GetPrismaticJointTranslation","GetPrismaticJointSpeed","GetRevoluteJointAngle","GetRevoluteJointSpeed","b2MixFriction","friction1","friction2","b2MixRestitution","restitution1","restitution2","b2ContactEdge","b2Contact","m_touchingFlag","m_enabledFlag","m_filterFlag","m_bulletHitFlag","m_manifold","m_toiCount","m_toi","m_tangentSpeed","m_oldManifold","m_nodeA","m_nodeB","worldManifold","m_fixtureA","GetBody","m_fixtureB","GetShape","listener","tManifold","touching","wasTouching","sensorA","IsSensor","sensorB","mp2","id2","mp1","BeginContact","EndContact","PreSolve","ComputeTOI_s_input","ComputeTOI_s_output","b2CircleContact","allocator","b2PolygonContact","b2PolygonAndCircleContact","b2EdgeAndCircleContact","b2EdgeAndPolygonContact","b2ChainAndCircleContact","chain","Evaluate_s_edge","b2ChainAndPolygonContact","b2ContactRegister","createFcn","destroyFcn","primary","b2ContactFactory","m_allocator","InitializeRegisters","type1","type2","pool","poolCreateFcn","pop","poolDestroyFcn","m_registers","e_shapeTypeCount","AddType","reg","b2DestructionListener","group","system","b2ContactFilter","filter1","GetFilterData","filter2","b2_defaultFilter","b2ContactImpulse","normalImpulses","tangentImpulses","b2ContactListener","oldManifold","b2_defaultListener","b2QueryCallback","b2RayCastCallback","b2ContactManager","m_contactCount","m_contactFilter","m_contactListener","m_contactFactory","fA","fB","GetChildIndexA","GetChildIndexB","ShouldCollide","UpdatePairs","AddPair","IsTouching","cNuke","activeA","activeB","Update","b2Profile","collide","solve","solveInit","solveVelocity","solvePosition","broadphase","solveTOI","b2TimeStep","velocityIterations","positionIterations","particleIterations","b2Position","b2Velocity","b2SolverData","b2VelocityConstraintPoint","normalMass","tangentMass","velocityBias","b2ContactVelocityConstraint","invMassA","invMassB","invIA","invIB","tangentSpeed","contactIndex","b2ContactPositionConstraint","localPoints","localCenterA","localCenterB","b2ContactSolverDef","b2PositionSolverManifold","pc","b2ContactSolver","m_step","m_positionConstraints","m_velocityConstraints","new_length","m_positions","m_velocities","m_contacts","contacts","GetManifold","vc","vcp","InitializeVelocityConstraints_s_xfA","InitializeVelocityConstraints_s_xfB","InitializeVelocityConstraints_s_worldManifold","rnA","rnB","kNormal","rtA","rtB","kTangent","vRel","WarmStart_s_P","dv","SolveVelocityConstraints_s_dv","SolveVelocityConstraints_s_dv1","SolveVelocityConstraints_s_dv2","SolveVelocityConstraints_s_a","SolveVelocityConstraints_s_b","SolveVelocityConstraints_s_x","SolveVelocityConstraints_s_d","SolveVelocityConstraints_s_P1","SolveVelocityConstraints_s_P2","SolveVelocityConstraints_s_P1P2","vt","maxFriction","newImpulse","vn","SolvePositionConstraints_s_xfA","SolvePositionConstraints_s_xfB","psm","SolvePositionConstraints_s_psm","minSeparation","toiIndexA","toiIndexB","SolveTOIPositionConstraints_s_xfA","SolveTOIPositionConstraints_s_xfB","SolveTOIPositionConstraints_s_psm","SolveTOIPositionConstraints_s_rA","SolveTOIPositionConstraints_s_rB","SolveTOIPositionConstraints_s_P","b2ParticleFlag","b2Island","m_bodyCount","m_jointCount","m_bodyCapacity","m_contactCapacity","m_jointCapacity","bodyCapacity","contactCapacity","jointCapacity","m_listener","profile","gravity","s_timer","solverData","s_solverData","contactSolverDef","s_contactSolverDef","contactSolver","s_contactSolver","InitializeVelocityConstraints","WarmStart","InitVelocityConstraints","SolveVelocityConstraints","StoreImpulses","s_translation","b2_maxTranslation","b2_maxRotation","positionSolved","contactsOkay","SolvePositionConstraints","jointsOkay","jointOkay","SynchronizeTransform","Report","minSleepTime","b2_angularSleepTolerance","b2_linearSleepTolerance","subStep","SolveTOIPositionConstraints","constraints","s_impulse","PostSolve","b2ParticleDef","velocity","lifetime","b2CalculateParticleIterations","timeStep","ceil","b2ParticleGroupFlag","b2ParticleHandle","b2ParticleGroupDef","groupFlags","shapeCount","stride","particleCount","b2ParticleGroup","m_firstIndex","m_lastIndex","m_groupFlags","m_strength","m_timestamp","m_inertia","m_center","m_transform","m_system","m_flagsBuffer","b2_particleGroupInternalMask","SetGroupFlags","UpdateStatistics","GetLinearVelocityFromWorldPoint_s_t0","ApplyForce","ApplyLinearImpulse","callDestructionListener","DestroyParticle","m_positionBuffer","m_velocityBuffer","GetParticleMass","inv_mass","b2StackQueue","capacity","m_back","m_capacity","item","concat","b2VoronoiDiagram","generatorCapacity","m_generatorCapacity","m_generatorCount","m_countX","m_countY","m_diagram","m_generatorBuffer","Generator","tag","necessary","margin","inverseRadius","necessary_count","queue","Task","Empty","task","Front","m_x","m_y","m_i","m_generator","ax","bx","by","std_iter_swap","array","tmp","default_compare","std_sort","first","len","cmp","left","pivot","random","right","std_stable_sort","std_remove_if","predicate","std_lower_bound","last","val","it","std_upper_bound","std_rotate","n_first","b2GrowableBuffer","Grow","newCapacity","Reserve","newEnd","newCount","pred","std_unique","b2FixtureParticleQueryCallback","childCount","GetAABB","enumerator","GetInsideBoundsEnumerator","GetNext","ReportFixtureAndParticle","b2ParticleContact","weight","rhs","IsEqual","b2ParticleBodyContact","b2ParticlePair","b2ParticleTriad","indexC","pa","pb","ka","kb","kc","b2ParticleSystemDef","strictContactCheck","maxCount","pressureStrength","dampingStrength","elasticStrength","springStrength","viscousStrength","surfaceTensionPressureStrength","surfaceTensionNormalStrength","repulsiveStrength","powderStrength","ejectionStrength","staticPressureStrength","staticPressureRelaxation","staticPressureIterations","colorMixingStrength","destroyByAge","lifetimeGranularity","b2ParticleSystem","m_paused","m_allParticleFlags","m_needsUpdateAllParticleFlags","m_allGroupFlags","m_needsUpdateAllGroupFlags","m_hasForce","m_iterationIndex","m_inverseDensity","m_particleDiameter","m_inverseDiameter","m_squaredDiameter","m_internalAllocatedCapacity","m_handleIndexBuffer","UserOverridableBuffer","m_forceBuffer","m_weightBuffer","m_staticPressureBuffer","m_accumulationBuffer","m_accumulation2Buffer","m_depthBuffer","m_colorBuffer","m_groupBuffer","m_userDataBuffer","m_stuckThreshold","m_lastBodyContactStepBuffer","m_bodyContactCountBuffer","m_consecutiveContactStepsBuffer","m_stuckParticleBuffer","m_proxyBuffer","Proxy","m_contactBuffer","m_bodyContactBuffer","m_triadBuffer","m_expirationTimeBuffer","m_indexByExpirationTimeBuffer","m_timeElapsed","m_expirationTimeBufferRequiresSorting","m_groupCount","m_groupList","m_def","SetStrictContactCheck","SetDensity","SetGravityScale","SetRadius","SetMaxParticleCount","SetDestructionByAge","DestroyParticleGroup","FreeUserOverridableBuffer","FreeBuffer","ReallocateInternalAllocatedBuffers","DestroyOldestParticle","SolveZombie","IsZero","RequestBuffer","Append","finiteLifetime","SetParticleLifetime","ExpirationTimeToLifetime","GetQuantizedTimeElapsed","RotateBuffer","SetParticleFlags","handle","SetIndex","b2_zombieParticle","b2_destructionListenerParticle","GetParticleCount","oldestFiniteLifetimeParticle","oldestInfiniteLifetimeParticle","DestroyParticlesInShape_s_aabb","DestroyParticlesInShapeCallback","QueryAABB","Destroyed","groupDef","s_transform","CreateParticleGroup_s_transform","SetPositionAngle","firstIndex","CreateParticlesWithShapeForGroup","shapes","CreateParticlesWithShapesForGroup","positionData","CreateParticleForGroup","lastIndex","ConnectionFilter","UpdateContacts","UpdatePairsAndTriads","JoinParticleGroups","groupA","groupB","JoinParticleGroupsFilter","nodeBuffer","ParticleListNode","InitializeParticleLists","MergeParticleListsInContact","survivingList","FindLongestParticleList","MergeZombieParticleListNodes","CreateParticleGroupsFromParticleList","UpdatePairsAndTriadsWithParticleList","paused","damping","newFlags","b2_tensileParticle","b2_colorMixingParticle","buffer","SetUserOverridableBuffer","steps","Data","ComputeCollisionEnergy_s_v","vel_data","sum_v2","enabled","initializeExpirationTimes","quantizedLifetime","newExpirationTime","GetExpirationTimeBuffer","enable","expirationTime","GetParticleLifetime","totalMass","velocityDelta","IsSignificantForce","ForceCanBeApplied","PrepareForceBuffer","distributedForce","endProxy","firstProxy","computeTag","CompareProxyTag","lastProxy","CompareTagProxy","pos_data","ReportParticle","QueryShapeAABB_s_aabb","slop","QueryPointAABB_s_aabb","point1","point2","RayCast_s_aabb","s_p","RayCast_s_p","RayCast_s_v","RayCast_s_n","s_point","RayCast_s_point","pv","determinant","sqrtDeterminant","userSuppliedCapacity","oldBuffer","oldCapacity","newBuffer","slice","deferred","ReallocateBuffer3","ReallocateBuffer5","ReallocateBuffer4","LimitCapacity","ReallocateHandleBuffers","stuck","particleDef","CreateParticle","s_edge","CreateParticlesStrokeShapeForGroup_s_edge","s_d","CreateParticlesStrokeShapeForGroup_s_d","CreateParticlesStrokeShapeForGroup_s_p","GetParticleStride","positionOnEdge","edgeLength","CreateParticlesFillShapeForGroup_s_aabb","CreateParticlesFillShapeForGroup_s_p","identity","CreateParticlesStrokeShapeForGroup","CreateParticlesFillShapeForGroup","compositeShape","CompositeShape","oldIndex","newIndex","m_destructionListener","SayGoodbyeParticleGroup","s_dab","UpdatePairsAndTriads_s_dab","s_dbc","UpdatePairsAndTriads_s_dbc","s_dca","UpdatePairsAndTriads_s_dca","particleFlags","k_pairFlags","af","bf","IsNecessary","ParticleCanBeConnected","ShouldCreatePair","ComparePairIndices","Unique","MatchPairIndices","k_triadFlags","diagram","AddGenerator","Generate","GetNodes","ShouldCreateTriad","dab","dbc","dca","maxDistanceSquared","b2_maxTriadDistance","groupC","triad","midPoint_x","midPoint_y","CompareTriadIndices","MatchTriadIndices","ReactiveFilter","b2_reactiveParticle","bufferIndex","GetBufferIndex","ContainsParticle","listA","list","listB","_tmp","MergeParticleLists","MergeParticleListAndNode","GetGroupFlags","newGroup","CreateParticleGroup","CloneParticle","contactGroups","contactGroupsCount","b2_particleGroupNeedsUpdateDepth","groupsToUpdate","groupsToUpdateCount","iterationCount","updated","ap0","bp0","ap1","bp1","lowerTag","upperTag","InsideBoundsEnumerator","AddContact_s_d","distBtParticlesSq","invD","rightTag","computeRelativeTag","AddContact","bottomLeftTag","bottomRightTag","FindContacts_Reference","proxies","inv_diam","UpdateProxies_Reference","CompareProxyProxy","contactFilter","GetParticleContactFilter","RemoveIf","b2_particleContactFilterParticle","ShouldCollideParticleParticle","particlePairs","GetParticleContactListener","contactListener","BeginContactParticleParticle","exceptZombie","UpdateProxies","SortProxies","b2ParticlePairSet","NotifyContactListenerPreContact","FindContacts","FilterContacts","NotifyContactListenerPostContact","b2ParticleContactIsZombie","fixtureSet","GetFixtureContactListener","BeginContactFixtureParticle","UpdateBodyContacts_s_aabb","FixtureParticleSet","NotifyBodyContactListenerPreContact","SetCount","UpdateBodyContactsCallback","GetFixtureContactFilter","RemoveSpuriousBodyContacts","NotifyBodyContactListenerPostContact","s_subStep","Solve_s_subStep","SolveLifetimes","UpdateAllParticleFlags","UpdateAllGroupFlags","UpdateBodyContacts","ComputeWeight","ComputeDepth","UpdatePairsAndTriadsWithReactiveParticles","SolveForce","b2_viscousParticle","SolveViscous","b2_repulsiveParticle","SolveRepulsive","b2_powderParticle","SolvePowder","SolveTensile","b2_solidParticleGroup","SolveSolid","SolveColorMixing","SolveGravity","b2_staticPressureParticle","SolveStaticPressure","SolvePressure","SolveDamping","k_extraDampingFlags","SolveExtraDamping","b2_elasticParticle","SolveElastic","b2_springParticle","SolveSpring","LimitVelocity","b2_rigidParticleGroup","SolveRigidDamping","b2_barrierParticle","SolveBarrier","SolveCollision","SolveRigid","b2_wallParticle","SolveWall","SolveCollision_s_aabb","p2_x","p2_y","SolveCollisionCallback","criticalVelocitySquared","GetCriticalVelocitySquared","s_gravity","SolveGravity_s_gravity","GetGravity","SolveBarrier_s_aabb","s_va","SolveBarrier_s_va","s_vb","SolveBarrier_s_vb","s_pba","SolveBarrier_s_pba","s_vba","SolveBarrier_s_vba","s_vc","SolveBarrier_s_vc","s_pca","SolveBarrier_s_pca","s_vca","SolveBarrier_s_vca","s_qba","SolveBarrier_s_qba","s_qca","SolveBarrier_s_qca","s_dv","SolveBarrier_s_dv","s_f","SolveBarrier_s_f","k_barrierWallFlags","aGroup","bGroup","va","vb","pba","vba","cGroup","pca","vca","e0","qba","qca","sqrtDet","IsRigidGroup","inertia","GetInertia","ParticleApplyForce","criticalPressure","GetCriticalPressure","pressurePerWeight","maxPressure","relaxation","SolvePressure_s_f","k_noPressureFlags","velocityPerPressure","GetParticleInvMass","SolveDamping_s_v","SolveDamping_s_f","quadraticDamping","GetCriticalVelocity","SolveRigidDamping_s_t0","SolveRigidDamping_s_t1","SolveRigidDamping_s_p","SolveRigidDamping_s_v","invInertiaA","tangentDistanceA","invInertiaB","tangentDistanceB","InitDampingParameterWithRigidGroupOrParticle","InitDampingParameter","GetLocalCenter","ComputeDampingImpulse","ApplyDamping","aRigid","bRigid","SolveExtraDamping_s_v","SolveExtraDamping_s_f","s_position","SolveRigid_s_position","s_rotation","SolveRigid_s_rotation","SolveRigid_s_transform","s_velocityTransform","SolveRigid_s_velocityTransform","SetPositionRotation","MulXX","velocityTransform","s_pa","SolveElastic_s_pa","s_pb","SolveElastic_s_pb","s_pc","SolveElastic_s_pc","SolveElastic_s_r","SolveElastic_s_t0","oa","ob","oc","invR","SolveSpring_s_pa","SolveSpring_s_pb","SolveSpring_s_d","SolveSpring_s_f","r0","r1","s_weightedNormal","SolveTensile_s_weightedNormal","s_s","SolveTensile_s_s","SolveTensile_s_f","weightedNormal","criticalVelocity","normalStrength","maxVelocityVariation","fn","SolveViscous_s_v","SolveViscous_s_f","SolveRepulsive_s_f","SolvePowder_s_f","SolveSolid_s_f","velocityPerForce","colorMixing","newIndices","allParticleFlags","destructionListener","SayGoodbyeParticle","Test","writeOffset","readOffset","modified","b2_particleGroupCanBeEmpty","b2_particleGroupWillBeDestroyed","LifetimeToExpirationTime","quantizedTimeElapsed","expirationTimes","expirationTimeIndices","particleIndexA","particleIndexB","expirationTimeA","expirationTimeB","infiniteExpirationTimeA","particleIndex","mid","end","GetIndex","indexByExpirationTime","inverseStride","b2_fixtureContactFilterParticle","b2_fixtureContactListenerParticle","b2_particleContactListenerParticle","newData","oldFlags","BodyContactCompare","RemoveSpuriousBodyContacts_s_n","s_pos","RemoveSpuriousBodyContacts_s_pos","s_normal","RemoveSpuriousBodyContacts_s_normal","currentContacts","particle","invInertia","tangentDistance","isRigidGroup","normalVelocity","yOffset","yShift","xScale","xOffset","xShift","diffA","diffB","nextB","lhs","xTruncBits","yTruncBits","tagBits","yMask","xMask","m_xLower","m_xUpper","m_yLower","m_yUpper","m_first","m_last","xTag","FixedSetAllocator","itemSize","itemIndex","FixtureParticle","second","bodyContactBuffer","flagsBuffer","ParticlePair","particleA","particleB","contactBuffer","m_callDestructionListener","m_destroyed","particleSystem","threshold","m_threshold","m_shapeCount","m_shapes","s_subaabb","subaabb","Combine1","GetFlagsBuffer","ShouldCollideFixtureParticle","ReportFixtureAndParticle_s_n","s_rp","ReportFixtureAndParticle_s_rp","ap","bp","bm","bI","invBm","invBI","invAm","rp","rpn","DetectStuckParticle","s_p1","ReportFixtureAndParticle_s_p1","s_output","ReportFixtureAndParticle_s_output","s_input","ReportFixtureAndParticle_s_input","ReportFixtureAndParticle_s_p","ReportFixtureAndParticle_s_v","ReportFixtureAndParticle_s_f","av","b2World","m_locked","m_clearForces","m_bodyList","m_particleSystemList","m_gravity","m_allowSleep","m_debugDraw","m_inv_dt0","m_warmStarting","m_continuousPhysics","m_subStepping","m_stepComplete","m_profile","m_island","s_stack","debugDraw","je","je0","SayGoodbyeJoint","DestroyJoint","coe","coe0","nextController","controller","RemoveBody","f0","SayGoodbyeFixture","_Joint_Create","_Joint_Destroy","smallestRadius","GetParticleSystemList","GetRadius","GetSmallestRadius","CalculateReasonableParticleIterations","stepTimer","Step_s_stepTimer","Step_s_step","Step_s_timer","SolveTOI","ClearForces","positionBuffer","GetPositionBuffer","colorBuffer","GetColorBuffer","DrawParticles","GetFlags","DrawDebugData_s_color","SetRGB","e_shapeBit","PushTransform","GetFixtureList","DrawShape","PopTransform","e_particleBit","DrawParticleSystem","e_jointBit","DrawJoint","e_aabbBit","DrawDebugData_s_vs","DrawPolygon","e_centerOfMassBit","DrawDebugData_s_xf","DrawTransform","e_controllerBit","Draw","ReportFixture","ShouldQueryParticleSystem","QueryPointAABB","QueryFixtureShape_s_aabb","fixture_proxy","QueryFixtureShape","QueryFixturePoint","RayCast_s_input","RayCast_s_output","min_fraction","GetProxyCount","GetTreeHeight","GetTreeBalance","GetTreeQuality","x1","x2","GetAnchorA","DrawJoint_s_p1","GetAnchorB","DrawJoint_s_p2","DrawJoint_s_color","DrawSegment","pulley","GetGroundAnchorA","GetGroundAnchorB","DrawJoint_s_c","DrawPoint","circle","DrawSolidCircle","ghostColor","DrawShape_s_ghostColor","vp","DrawCircle","poly","DrawSolidPolygon","Step","island","seed","Clear","stackCount","AddBody","IsEnabled","AddJoint","minContact","minAlpha","collideA","IsBullet","collideB","SolveTOI_s_toi_input","SolveTOI_s_toi_output","backup1","SolveTOI_s_backup1","backup2","SolveTOI_s_backup2","backup","SolveTOI_s_backup","SolveTOI_s_subStep","SetEnabled","b2ControllerEdge","prevBody","nextBody","prevController","b2Controller","b2BuoyancyController","arguments","linearDrag","angularDrag","useDensity","useWorldGravity","areac","massc","sc","sarea","ComputeSubmergedArea","shapeDensity","GetDensity","buoyancyForce","dragForce","ApplyTorque","GetAngularVelocity","b2ConstantAccelController","dtA","Step_s_dtA","SetLinearVelocity","draw","b2ConstantForceController","b2GravityController","invSqr","body1","mass1","body2","mass2","dx","dy","Step_s_f","b2TensorDampingController","maxTimestep","timestep","Step_s_damping","xDamping","yDamping","b2Rope","m_ps","m_p0s","m_vs","m_ims","m_Ls","m_as","m_damping","m_k2","m_k3","masses","count3","d1","d2","k2","k3","exp","SolveC2","SolveC3","L","im1","im2","m1","m2","m3","s_d1","s_d2","L1sqr","L2sqr","Jd1","SelfSkew","s_Jd1","Jd2","s_Jd2","J1","s_J1","J2","s_J2","J3","b2Assert","condition","args","b2_maxFloat","b2_epsilon","b2_epsilon_sq","b2_maxManifoldPoints","b2_maxPolygonVertices","b2_aabbExtension","b2_aabbMultiplier","b2_linearSlop","b2_polygonRadius","b2_maxSubSteps","b2_maxTOIContacts","b2_velocityThreshold","b2_maxLinearCorrection","b2_maxAngularCorrection","b2_maxTranslationSquared","b2_maxRotationSquared","b2_baumgarte","b2_toiBaumgarte","b2_invalidParticleIndex","b2_maxParticleIndex","b2_particleStride","b2_minParticleWeight","b2_maxParticlePressure","b2_maxParticleForce","b2_maxTriadDistanceSquared","b2_minParticleSystemBufferCapacity","b2_barrierCollisionTime","b2_timeToSleep","b2Alloc","size","b2Free","mem","b2Log","message","b2_branch","b2_commit","b2ParseInt","parseInt","b2ParseUInt","b2MakeNullArray","b2_pi_over_180","b2_180_over_pi","b2_two_pi","b2Swap","b2DegToRad","degrees","b2RadToDeg","b2NextPowerOfTwo","b2IsPowerOfTwo","b2Random","b2RandomRange","b2BlockAllocator","b2StackAllocator","b2GetPointStates","state1","state2","manifold1","manifold2","b2_removeState","jct","b2_persistState","b2_nullState","b2_addState","b2ShapeCastInput","translationB","b2ShapeCastOutput","b2_gjk_reset","b2ShapeCast","vr","GetClosestPoint","b2_toi_reset","b2BodyDef","g_blockSolve","b2_minPulleyLength","b2RopeDef","Object","defineProperty","factory","createBatch","update","requestId","lastUpdate","fps","running","loop","requestAnimationFrame","isRunning","stop","cancelAnimationFrame","getFps","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","prototype","InputHandler","canvas","lastX","lastY","touched","emitter","EventEmitter","mouseDownHandler","evt","handleMove","emit","getX","getY","mouseUpHandler","mouseMoveHandler","touchStartHandler","preventDefault","touch","touches","dispatchEvent","MouseEvent","clientX","clientY","touchEndHandler","touchMoveHandler","addEventListener","removeEventListener","event","addListener","rect","getBoundingClientRect","top","_defineProperty","obj","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","gl","url","options","Promise","resolve","image","Image","src","onload","texture","Texture","source","forEach","getOwnPropertyDescriptors","defineProperties","setFilter","Filter","LINEAR","unproject","vec3","invMat4","viewX","viewY","viewWidth","viewHeight","mat4","a00","a01","a02","a03","a10","a20","a30","l_w","project","ARRAY_TYPE","Float32Array","Array","PI","create","glMatrix","clone","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","set","transpose","invert","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","adjoint","multiply","b0","b3","translate","rotate","rad","b12","b20","b21","b22","hypot","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","bz","bw","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","bottom","near","far","rl","tb","nf","perspective","fovy","aspect","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","yScale","ortho","lr","bt","lookAt","eye","up","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","equals","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","mul","sub","width","viewportWidth","viewportHeight","combined","invOrtho","tmp3","origin","scaleVec","negOriginVec","translateVec","setMatrix","unprojectVector2","resize","originX","originY","resizeCanvas","deviceRatio","devicePixelRatio","window","displayWidth","clientWidth","displayHeight","clientHeight","Vector2","scalar","deltaX","deltaY","distanceSqr","len2","newX","newY","rotateRad","tmpV1","tmpV2","drawLine","batch","tex","thickness","subVector","setColor","drawPolygon","verts","prevX","prevY","circleVerts","tmpV3","drawCircle","segments","_slicedToArray","arr","isArray","Symbol","iterator","toString","call","_arr","_n","_d","_e","_s","_i","err","module","getProperty","definition","isClassDescriptor","get","hasGetterOrSetter","hasNonConfigurable","prop","extend","ctor","hasOwnProperty","Class","ignoreFinals","mixin","myClass","mixins","initialize","Extends","base","constructor","Mixins","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","error","then","_asyncToGenerator","self","require","isPowerOfTwo","nextPowerOfTwo","BaseObject","context","managedArgs","TEXTURE_2D","__shape","wrapS","DEFAULT_WRAP","wrapT","minFilter","DEFAULT_FILTER","magFilter","addManagedObject","setup","img","path","crossOrigin","successCB","onLoad","failCB","onError","genMipmaps","USE_DUMMY_1x1_DATA","uploadData","ev","uploadImage","onerror","generateMipmap","onabort","format","dataType","createTexture","bind","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_PREMULTIPLY_ALPHA","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_FLIP_Y","colorspace","UNPACK_COLORSPACE_CONVERSION","BROWSER_DEFAULT_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","setWrap","destroy","deleteTexture","removeManagedObject","ignoreBind","_checkPOT","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","mag","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","RGBA","UNSIGNED_BYTE","texImage2D","domObject","uploadSubImage","FORCE_POT","wrongFilter","NEAREST","wrongWrap","Wrap","CLAMP_TO_EDGE","unit","activeTexture","TEXTURE0","bindTexture","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","MIRRORED_REPEAT","REPEAT","Format","DEPTH_COMPONENT","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","DataType","BYTE","SHORT","INT","FLOAT","UNSIGNED_INT","UNSIGNED_SHORT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","getNumComponents","GLContextWrapper","wrapContext","rawgl","WebGLRenderingContext","int8","Int8Array","int32","Int32Array","float32","NumberUtil","intBitsToFloat","floatToIntBits","intToFloatColor","colorToFloat","Mesh","dirty","verticesDirty","indicesDirty","isStatic","numVerts","numIndices","vertexAttribs","indices","vertexBuffer","indexBuffer","indexUsage","vertexUsage","_vertexAttribs","vertexStride","STATIC_DRAW","DYNAMIC_DRAW","totalNumComponents","offsetCount","Uint16Array","createBuffer","deleteBuffer","_updateBuffers","subDataLength","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","ARRAY_BUFFER","view","subarray","bufferSubData","primitiveType","drawElements","drawArrays","shader","loc","location","getAttributeLocation","name","enableVertexAttribArray","vertexAttribPointer","numComponents","normalize","unbind","disableVertexAttribArray","Attrib","Boolean","EmitterSubscription","_EventSubscription","subscriber","subClass","superClass","setPrototypeOf","__proto__","_inherits","argIndex","replace","framesToPop","iota","isBuffer","hasTypedArrays","Float64Array","compare1st","order","terms","compileConstructor","dtype","dimension","className","join","useGetters","code","Function","procedure","CACHED_CONSTRUCTORS","map","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","idx","arrayDType","ctor_list","_getPrototypeOf","getPrototypeOf","_setPrototypeOf","ShaderProgram","BaseBatch","SpriteBatch","projection","setProjection","getVertexSize","VERTEX_SIZE","_createVertexAttributes","POSITION_ATTRIBUTE","COLOR_ATTRIBUTE","TEXCOORD_ATTRIBUTE","drawing","oldX","oldY","flush","updateMatrices","_createShader","DEFAULT_VERT_SHADER","DEFAULT_FRAG_SHADER","console","warn","setUniformMatrix4","_preRender","begin","setUniformi","depthMask","totalRenderCalls","drawRegion","region","scaleX","scaleY","x3","x4","y3","y4","rotatedX1","rotatedY1","rotatedX2","rotatedY2","rotatedX3","rotatedY3","rotatedX4","rotatedY4","drawVertices","off","fbemitter","ndarray","Number","valueOf","Uint8Array","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","generator","Context","_invoke","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","mark","awrap","async","reverse","skipTempReset","charAt","rootRecord","rval","exception","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","compileShader","vertSource","fragSource","attributeLocations","vertShader","fragShader","program","uniformCache","attributeCache","trim","_compileShaders","fragment","verbose","VERBOSE_COMPILE","_fetchUniforms","_fetchAttributes","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","useProgram","detachShader","deleteShader","deleteProgram","getUniformInfo","getAttributeInfo","hasUniform","hasAttribute","getUniform","getUniformAt","uniform1i","uniform2i","uniform3i","uniform4i","setUniformf","uniform1f","uniform2f","uniform3f","uniform4f","setUniformfv","arrayBuffer","uniform1fv","uniform2fv","uniform3fv","uniform4fv","setUniformiv","uniform1iv","uniform2iv","uniform3iv","uniform4iv","setUniformMatrix3","uniformMatrix3fv","uniformMatrix4fv","NORMAL_ATTRIBUTE","getGL","loadShader","createShader","shaderSource","typeStr","VERTEX_SHADER","logResult","getShaderInfoLog","getShaderParameter","COMPILE_STATUS","addLineNumbers","string","lines","split","opts","attribs","vert","frag","FRAGMENT_SHADER","createProgram","attachShader","bindAttribLocation","linkProgram","getProgramInfoLog","LINK_STATUS","compile","document","createElement","attributes","getContext","BaseMixins","mesh","_createMesh","_blendingEnabled","BLEND","disable","_blendSrc","_blendDst","blendFunc","spriteCount","TRIANGLES","ownsShader","defaultShader","_shader","ONE","ONE_MINUS_SRC_ALPHA","premultiplied","blendingEnabled","old","blendSrc","blendDst","setBlendFunction","wasDrawing","rnum","EventSubscriptionVendor","emptyFunction","invariant","BaseEventEmitter","_subscriber","_currentSubscription","eventType","addSubscription","once","removeCurrentListener","removeAllListeners","removeAllSubscriptions","removeSubscription","listeners","subscriptions","getSubscriptionsForType","thatReturnsTrue","subscription","ii","__emitToSubscription","EventSubscription","remove","_subscriptionsForType","subscriptionsForType","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsNull","thatReturnsThis","thatReturnsArgument","ops","linearTypes","lazyInitLinearTypes","createTextureShape","directData","acceptTextureDOM","raw","createTextureDOM","createTextureArray","filterTypes","wrapTypes","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","ImageData","convertFloatToUint8","inp","muls","reshapeTexture","maxSize","getParameter","MAX_TEXTURE_SIZE","_shape","_mipLevels","Texture2D","_magFilter","_minFilter","_wrapS","_wrapT","_anisoSamples","wrapVector","_wrapVector","shapeVector","_shapeVector","proto","isPacked","initTexture","maxTextureSize","getExtension","packed","buf_store","malloc","buf_array","assign","free","mipSamples","psamples","ext","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","ACTIVE_TEXTURE","dispose","setPixels","x_off","y_off","mip_level","texSubImage2D","cformat","ctype","mipLevels","needsMip","pack_buffer","mallocFloat32","mallocUint8","pack_view","freeFloat32","freeUint8","texSubImageArray","readFloatLE","isSlowBuffer","_isBuffer","EmptyProc","thisVars","localVars","fixup","lvalue","rvalue","makeOp","user_args","funcName","wrapper","pre","post","proc","pcompile","assign_ops","div","mod","band","bor","bxor","lshift","rshift","rrshift","op","unary_ops","not","bnot","neg","recip","binary_ops","and","or","eq","neq","lt","gt","leq","geq","math_unary","math_comm","math_noncomm","any","all","sum","prod","norm2squared","norm2","norminf","norm1","sup","inf","argmin","argmax","assigns","createThunk","Procedure","argTypes","shimArgs","arrayArgs","arrayBlockIndices","scalarArgs","offsetArgs","offsetArgIndex","indexArgs","shapeArgs","debug","proc_args","arg_type","blockIndices","printCode","blockSize","vars","thunkName","typesig","string_typesig","shapeLengthConditions","shapeConditions","thunk","uniq","innerFill","nargs","has_index","pidx","processBlock","block","dtypes","carg","re","RegExp","ptrStr","arrNum","offArgIndex","localStr","arrStr","reStrArr","ptrStrArr","typeSummary","summary","allEqual","digits","match","orders","blockBegin","blockEnd","loopBegin","loopEnd","loopOrders","newOrder","arglist","zeros","off_arg","init_string","matched","countMatches","indexStr","outerFill","loopName","compare","sorted","ptr","unique_pred","unique_eq","bits","dup","Buffer","global","__TYPEDARRAY_POOL","UINT8","UINT16","UINT32","BIGUINT64","INT8","INT16","INT32","BIGINT64","DOUBLE","DATA","UINT8C","BUFFER","hasUint8C","Uint8ClampedArray","hasBigUint64","BigUint64Array","hasBigInt64","BigInt64Array","POOL","freeArrayBuffer","byteLength","log_n","log2","mallocArrayBuffer","nextPow2","ArrayBuffer","mallocUint16","mallocUint32","Uint32Array","mallocInt8","mallocInt16","Int16Array","mallocInt32","mallocFloat","mallocDouble","mallocUint8Clamped","mallocBigUint64","mallocBigInt64","mallocDataView","DataView","mallocBuffer","freeUint16","freeUint32","freeBigUint64","freeInt8","freeInt16","freeInt32","freeBigInt64","freeFloat","freeFloat64","freeDouble","freeUint8Clamped","freeDataView","freeBuffer","mallocFloat64","clearCache","countTrailingZeros","INT_BITS","INT_MAX","INT_MIN","sign","mask","isPow2","shift","log10","popCount","prevPow2","parity","REVERSE_TABLE","tab","interleave2","deinterleave2","interleave3","deinterleave3","nextCombination","dupe_number","dupe_array","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","that","RangeError","encodingOrOffset","allocUnsafe","from","byteOffset","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","write","fromString","checked","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","swap16","swap32","swap64","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","ret","toHex","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","dst","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","_typeof","assertThisInitialized","ReferenceError","superPropBase","_get","property","receiver","Reflect","desc","isNativeReflectConstruct","construct","sham","_construct","Parent","EPSILON","RANDOM","setMatrixArrayType","degree","toRadian","v0","LDU","U","tx","ty","ab","ac","ad","atx","aty","fromMat4","fromMat2d","normalFromMat4","divide","round","scaleAndAdd","squaredDistance","squaredLength","negate","inverse","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","tempA","tempB","cosine","sqrDist","sqrLen","vec","v3","v4","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","calculateW","slerp","cosom","sinom","scale0","scale1","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","dq","fromRotationTranslationValues","outer","quat","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","sinC","cosC","len1"],"mappings":"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","file":"static/js/2.3ed2429e.chunk.js","sourcesContent":["(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n  (factory((global.box2d = {})));\r\n}(this, (function (exports) { 'use strict';\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  function b2Assert(condition, ...args) {\r\n      if (!condition) {\r\n          // debugger;\r\n          throw new Error(...args);\r\n      }\r\n  }\r\n  function b2Maybe(value, def) {\r\n      return value !== undefined ? value : def;\r\n  }\r\n  const b2_maxFloat = 1E+37; // FLT_MAX instead of Number.MAX_VALUE;\r\n  const b2_epsilon = 1E-5; // FLT_EPSILON instead of Number.MIN_VALUE;\r\n  const b2_epsilon_sq = (b2_epsilon * b2_epsilon);\r\n  const b2_pi = 3.14159265359; // Math.PI;\r\n  /// @file\r\n  /// Global tuning constants based on meters-kilograms-seconds (MKS) units.\r\n  ///\r\n  // Collision\r\n  /// The maximum number of contact points between two convex shapes. Do\r\n  /// not change this value.\r\n  const b2_maxManifoldPoints = 2;\r\n  /// The maximum number of vertices on a convex polygon. You cannot increase\r\n  /// this too much because b2BlockAllocator has a maximum object size.\r\n  const b2_maxPolygonVertices = 8;\r\n  /// This is used to fatten AABBs in the dynamic tree. This allows proxies\r\n  /// to move by a small amount without triggering a tree adjustment.\r\n  /// This is in meters.\r\n  const b2_aabbExtension = 0.1;\r\n  /// This is used to fatten AABBs in the dynamic tree. This is used to predict\r\n  /// the future position based on the current displacement.\r\n  /// This is a dimensionless multiplier.\r\n  const b2_aabbMultiplier = 2;\r\n  /// A small length used as a collision and constraint tolerance. Usually it is\r\n  /// chosen to be numerically significant, but visually insignificant.\r\n  const b2_linearSlop = 0.008; // 0.005;\r\n  /// A small angle used as a collision and constraint tolerance. Usually it is\r\n  /// chosen to be numerically significant, but visually insignificant.\r\n  const b2_angularSlop = 2 / 180 * b2_pi;\r\n  /// The radius of the polygon/edge shape skin. This should not be modified. Making\r\n  /// this smaller means polygons will have an insufficient buffer for continuous collision.\r\n  /// Making it larger may create artifacts for vertex collision.\r\n  const b2_polygonRadius = 2 * b2_linearSlop;\r\n  /// Maximum number of sub-steps per contact in continuous physics simulation.\r\n  const b2_maxSubSteps = 8;\r\n  // Dynamics\r\n  /// Maximum number of contacts to be handled to solve a TOI impact.\r\n  const b2_maxTOIContacts = 32;\r\n  /// A velocity threshold for elastic collisions. Any collision with a relative linear\r\n  /// velocity below this threshold will be treated as inelastic.\r\n  const b2_velocityThreshold = 1;\r\n  /// The maximum linear position correction used when solving constraints. This helps to\r\n  /// prevent overshoot.\r\n  const b2_maxLinearCorrection = 0.2;\r\n  /// The maximum angular position correction used when solving constraints. This helps to\r\n  /// prevent overshoot.\r\n  const b2_maxAngularCorrection = 8 / 180 * b2_pi;\r\n  /// The maximum linear velocity of a body. This limit is very large and is used\r\n  /// to prevent numerical problems. You shouldn't need to adjust this.\r\n  const b2_maxTranslation = 2;\r\n  const b2_maxTranslationSquared = b2_maxTranslation * b2_maxTranslation;\r\n  /// The maximum angular velocity of a body. This limit is very large and is used\r\n  /// to prevent numerical problems. You shouldn't need to adjust this.\r\n  const b2_maxRotation = 0.5 * b2_pi;\r\n  const b2_maxRotationSquared = b2_maxRotation * b2_maxRotation;\r\n  /// This scale factor controls how fast overlap is resolved. Ideally this would be 1 so\r\n  /// that overlap is removed in one time step. However using values close to 1 often lead\r\n  /// to overshoot.\r\n  const b2_baumgarte = 0.2;\r\n  const b2_toiBaumgarte = 0.75;\r\n  // #if B2_ENABLE_PARTICLE\r\n  // Particle\r\n  /// A symbolic constant that stands for particle allocation error.\r\n  const b2_invalidParticleIndex = -1;\r\n  const b2_maxParticleIndex = 0x7FFFFFFF;\r\n  /// The default distance between particles, multiplied by the particle diameter.\r\n  const b2_particleStride = 0.75;\r\n  /// The minimum particle weight that produces pressure.\r\n  const b2_minParticleWeight = 1.0;\r\n  /// The upper limit for particle pressure.\r\n  const b2_maxParticlePressure = 0.25;\r\n  /// The upper limit for force between particles.\r\n  const b2_maxParticleForce = 0.5;\r\n  /// The maximum distance between particles in a triad, multiplied by the particle diameter.\r\n  const b2_maxTriadDistance = 2.0;\r\n  const b2_maxTriadDistanceSquared = (b2_maxTriadDistance * b2_maxTriadDistance);\r\n  /// The initial size of particle data buffers.\r\n  const b2_minParticleSystemBufferCapacity = 256;\r\n  /// The time into the future that collisions against barrier particles will be detected.\r\n  const b2_barrierCollisionTime = 2.5;\r\n  // #endif\r\n  // Sleep\r\n  /// The time that a body must be still before it will go to sleep.\r\n  const b2_timeToSleep = 0.5;\r\n  /// A body cannot sleep if its linear velocity is above this tolerance.\r\n  const b2_linearSleepTolerance = 0.01;\r\n  /// A body cannot sleep if its angular velocity is above this tolerance.\r\n  const b2_angularSleepTolerance = 2 / 180 * b2_pi;\r\n  // Memory Allocation\r\n  /// Implement this function to use your own memory allocator.\r\n  function b2Alloc(size) {\r\n      return null;\r\n  }\r\n  /// If you implement b2Alloc, you should also implement this function.\r\n  function b2Free(mem) {\r\n  }\r\n  /// Logging function.\r\n  function b2Log(message, ...args) {\r\n      // console.log(message, ...args);\r\n  }\r\n  /// Version numbering scheme.\r\n  /// See http://en.wikipedia.org/wiki/Software_versioning\r\n  class b2Version {\r\n      constructor(major = 0, minor = 0, revision = 0) {\r\n          this.major = 0; ///< significant changes\r\n          this.minor = 0; ///< incremental changes\r\n          this.revision = 0; ///< bug fixes\r\n          this.major = major;\r\n          this.minor = minor;\r\n          this.revision = revision;\r\n      }\r\n      toString() {\r\n          return this.major + \".\" + this.minor + \".\" + this.revision;\r\n      }\r\n  }\r\n  /// Current version.\r\n  const b2_version = new b2Version(2, 3, 2);\r\n  const b2_branch = \"master\";\r\n  const b2_commit = \"fbf51801d80fc389d43dc46524520e89043b6faf\";\r\n  function b2ParseInt(v) {\r\n      return parseInt(v, 10);\r\n  }\r\n  function b2ParseUInt(v) {\r\n      return Math.abs(parseInt(v, 10));\r\n  }\r\n  function b2MakeArray(length, init) {\r\n      const a = [];\r\n      for (let i = 0; i < length; ++i) {\r\n          a.push(init(i));\r\n      }\r\n      return a;\r\n  }\r\n  function b2MakeNullArray(length) {\r\n      const a = [];\r\n      for (let i = 0; i < length; ++i) {\r\n          a.push(null);\r\n      }\r\n      return a;\r\n  }\r\n  function b2MakeNumberArray(length, init = 0) {\r\n      const a = [];\r\n      for (let i = 0; i < length; ++i) {\r\n          a.push(init);\r\n      }\r\n      return a;\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  const b2_pi_over_180 = b2_pi / 180;\r\n  const b2_180_over_pi = 180 / b2_pi;\r\n  const b2_two_pi = 2 * b2_pi;\r\n  const b2Abs = Math.abs;\r\n  const b2Min = Math.min;\r\n  const b2Max = Math.max;\r\n  function b2Clamp(a, lo, hi) {\r\n      return (a < lo) ? (lo) : ((a > hi) ? (hi) : (a));\r\n  }\r\n  function b2Swap(a, b) {\r\n      // DEBUG: b2Assert(false);\r\n      const tmp = a[0];\r\n      a[0] = b[0];\r\n      b[0] = tmp;\r\n  }\r\n  /// This function is used to ensure that a floating point number is\r\n  /// not a NaN or infinity.\r\n  const b2IsValid = isFinite;\r\n  function b2Sq(n) {\r\n      return n * n;\r\n  }\r\n  /// This is a approximate yet fast inverse square-root.\r\n  function b2InvSqrt(n) {\r\n      return 1 / Math.sqrt(n);\r\n  }\r\n  const b2Sqrt = Math.sqrt;\r\n  const b2Pow = Math.pow;\r\n  function b2DegToRad(degrees) {\r\n      return degrees * b2_pi_over_180;\r\n  }\r\n  function b2RadToDeg(radians) {\r\n      return radians * b2_180_over_pi;\r\n  }\r\n  const b2Cos = Math.cos;\r\n  const b2Sin = Math.sin;\r\n  const b2Acos = Math.acos;\r\n  const b2Asin = Math.asin;\r\n  const b2Atan2 = Math.atan2;\r\n  function b2NextPowerOfTwo(x) {\r\n      x |= (x >> 1) & 0x7FFFFFFF;\r\n      x |= (x >> 2) & 0x3FFFFFFF;\r\n      x |= (x >> 4) & 0x0FFFFFFF;\r\n      x |= (x >> 8) & 0x00FFFFFF;\r\n      x |= (x >> 16) & 0x0000FFFF;\r\n      return x + 1;\r\n  }\r\n  function b2IsPowerOfTwo(x) {\r\n      return x > 0 && (x & (x - 1)) === 0;\r\n  }\r\n  function b2Random() {\r\n      return Math.random() * 2 - 1;\r\n  }\r\n  function b2RandomRange(lo, hi) {\r\n      return (hi - lo) * Math.random() + lo;\r\n  }\r\n  /// A 2D column vector.\r\n  class b2Vec2 {\r\n      constructor(x = 0, y = 0) {\r\n          this.x = x;\r\n          this.y = y;\r\n      }\r\n      Clone() {\r\n          return new b2Vec2(this.x, this.y);\r\n      }\r\n      SetZero() {\r\n          this.x = 0;\r\n          this.y = 0;\r\n          return this;\r\n      }\r\n      Set(x, y) {\r\n          this.x = x;\r\n          this.y = y;\r\n          return this;\r\n      }\r\n      Copy(other) {\r\n          this.x = other.x;\r\n          this.y = other.y;\r\n          return this;\r\n      }\r\n      SelfAdd(v) {\r\n          this.x += v.x;\r\n          this.y += v.y;\r\n          return this;\r\n      }\r\n      SelfAddXY(x, y) {\r\n          this.x += x;\r\n          this.y += y;\r\n          return this;\r\n      }\r\n      SelfSub(v) {\r\n          this.x -= v.x;\r\n          this.y -= v.y;\r\n          return this;\r\n      }\r\n      SelfSubXY(x, y) {\r\n          this.x -= x;\r\n          this.y -= y;\r\n          return this;\r\n      }\r\n      SelfMul(s) {\r\n          this.x *= s;\r\n          this.y *= s;\r\n          return this;\r\n      }\r\n      SelfMulAdd(s, v) {\r\n          this.x += s * v.x;\r\n          this.y += s * v.y;\r\n          return this;\r\n      }\r\n      SelfMulSub(s, v) {\r\n          this.x -= s * v.x;\r\n          this.y -= s * v.y;\r\n          return this;\r\n      }\r\n      Dot(v) {\r\n          return this.x * v.x + this.y * v.y;\r\n      }\r\n      Cross(v) {\r\n          return this.x * v.y - this.y * v.x;\r\n      }\r\n      Length() {\r\n          const x = this.x, y = this.y;\r\n          return Math.sqrt(x * x + y * y);\r\n      }\r\n      LengthSquared() {\r\n          const x = this.x, y = this.y;\r\n          return (x * x + y * y);\r\n      }\r\n      Normalize() {\r\n          const length = this.Length();\r\n          if (length >= b2_epsilon) {\r\n              const inv_length = 1 / length;\r\n              this.x *= inv_length;\r\n              this.y *= inv_length;\r\n          }\r\n          return length;\r\n      }\r\n      SelfNormalize() {\r\n          const length = this.Length();\r\n          if (length >= b2_epsilon) {\r\n              const inv_length = 1 / length;\r\n              this.x *= inv_length;\r\n              this.y *= inv_length;\r\n          }\r\n          return this;\r\n      }\r\n      SelfRotate(radians) {\r\n          const c = Math.cos(radians);\r\n          const s = Math.sin(radians);\r\n          const x = this.x;\r\n          this.x = c * x - s * this.y;\r\n          this.y = s * x + c * this.y;\r\n          return this;\r\n      }\r\n      IsValid() {\r\n          return isFinite(this.x) && isFinite(this.y);\r\n      }\r\n      SelfCrossVS(s) {\r\n          const x = this.x;\r\n          this.x = s * this.y;\r\n          this.y = -s * x;\r\n          return this;\r\n      }\r\n      SelfCrossSV(s) {\r\n          const x = this.x;\r\n          this.x = -s * this.y;\r\n          this.y = s * x;\r\n          return this;\r\n      }\r\n      SelfMinV(v) {\r\n          this.x = b2Min(this.x, v.x);\r\n          this.y = b2Min(this.y, v.y);\r\n          return this;\r\n      }\r\n      SelfMaxV(v) {\r\n          this.x = b2Max(this.x, v.x);\r\n          this.y = b2Max(this.y, v.y);\r\n          return this;\r\n      }\r\n      SelfAbs() {\r\n          this.x = b2Abs(this.x);\r\n          this.y = b2Abs(this.y);\r\n          return this;\r\n      }\r\n      SelfNeg() {\r\n          this.x = (-this.x);\r\n          this.y = (-this.y);\r\n          return this;\r\n      }\r\n      SelfSkew() {\r\n          const x = this.x;\r\n          this.x = -this.y;\r\n          this.y = x;\r\n          return this;\r\n      }\r\n      static MakeArray(length) {\r\n          return b2MakeArray(length, (i) => new b2Vec2());\r\n      }\r\n      static AbsV(v, out) {\r\n          out.x = b2Abs(v.x);\r\n          out.y = b2Abs(v.y);\r\n          return out;\r\n      }\r\n      static MinV(a, b, out) {\r\n          out.x = b2Min(a.x, b.x);\r\n          out.y = b2Min(a.y, b.y);\r\n          return out;\r\n      }\r\n      static MaxV(a, b, out) {\r\n          out.x = b2Max(a.x, b.x);\r\n          out.y = b2Max(a.y, b.y);\r\n          return out;\r\n      }\r\n      static ClampV(v, lo, hi, out) {\r\n          out.x = b2Clamp(v.x, lo.x, hi.x);\r\n          out.y = b2Clamp(v.y, lo.y, hi.y);\r\n          return out;\r\n      }\r\n      static RotateV(v, radians, out) {\r\n          const v_x = v.x, v_y = v.y;\r\n          const c = Math.cos(radians);\r\n          const s = Math.sin(radians);\r\n          out.x = c * v_x - s * v_y;\r\n          out.y = s * v_x + c * v_y;\r\n          return out;\r\n      }\r\n      static DotVV(a, b) {\r\n          return a.x * b.x + a.y * b.y;\r\n      }\r\n      static CrossVV(a, b) {\r\n          return a.x * b.y - a.y * b.x;\r\n      }\r\n      static CrossVS(v, s, out) {\r\n          const v_x = v.x;\r\n          out.x = s * v.y;\r\n          out.y = -s * v_x;\r\n          return out;\r\n      }\r\n      static CrossVOne(v, out) {\r\n          const v_x = v.x;\r\n          out.x = v.y;\r\n          out.y = -v_x;\r\n          return out;\r\n      }\r\n      static CrossSV(s, v, out) {\r\n          const v_x = v.x;\r\n          out.x = -s * v.y;\r\n          out.y = s * v_x;\r\n          return out;\r\n      }\r\n      static CrossOneV(v, out) {\r\n          const v_x = v.x;\r\n          out.x = -v.y;\r\n          out.y = v_x;\r\n          return out;\r\n      }\r\n      static AddVV(a, b, out) { out.x = a.x + b.x; out.y = a.y + b.y; return out; }\r\n      static SubVV(a, b, out) { out.x = a.x - b.x; out.y = a.y - b.y; return out; }\r\n      static MulSV(s, v, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\n      static MulVS(v, s, out) { out.x = v.x * s; out.y = v.y * s; return out; }\r\n      static AddVMulSV(a, s, b, out) { out.x = a.x + (s * b.x); out.y = a.y + (s * b.y); return out; }\r\n      static SubVMulSV(a, s, b, out) { out.x = a.x - (s * b.x); out.y = a.y - (s * b.y); return out; }\r\n      static AddVCrossSV(a, s, v, out) {\r\n          const v_x = v.x;\r\n          out.x = a.x - (s * v.y);\r\n          out.y = a.y + (s * v_x);\r\n          return out;\r\n      }\r\n      static MidVV(a, b, out) { out.x = (a.x + b.x) * 0.5; out.y = (a.y + b.y) * 0.5; return out; }\r\n      static ExtVV(a, b, out) { out.x = (b.x - a.x) * 0.5; out.y = (b.y - a.y) * 0.5; return out; }\r\n      static IsEqualToV(a, b) {\r\n          return a.x === b.x && a.y === b.y;\r\n      }\r\n      static DistanceVV(a, b) {\r\n          const c_x = a.x - b.x;\r\n          const c_y = a.y - b.y;\r\n          return Math.sqrt(c_x * c_x + c_y * c_y);\r\n      }\r\n      static DistanceSquaredVV(a, b) {\r\n          const c_x = a.x - b.x;\r\n          const c_y = a.y - b.y;\r\n          return (c_x * c_x + c_y * c_y);\r\n      }\r\n      static NegV(v, out) { out.x = -v.x; out.y = -v.y; return out; }\r\n  }\r\n  b2Vec2.ZERO = new b2Vec2(0, 0);\r\n  b2Vec2.UNITX = new b2Vec2(1, 0);\r\n  b2Vec2.UNITY = new b2Vec2(0, 1);\r\n  b2Vec2.s_t0 = new b2Vec2();\r\n  b2Vec2.s_t1 = new b2Vec2();\r\n  b2Vec2.s_t2 = new b2Vec2();\r\n  b2Vec2.s_t3 = new b2Vec2();\r\n  const b2Vec2_zero = new b2Vec2(0, 0);\r\n  /// A 2D column vector with 3 elements.\r\n  class b2Vec3 {\r\n      constructor(x = 0, y = 0, z = 0) {\r\n          this.x = x;\r\n          this.y = y;\r\n          this.z = z;\r\n      }\r\n      Clone() {\r\n          return new b2Vec3(this.x, this.y, this.z);\r\n      }\r\n      SetZero() {\r\n          this.x = 0;\r\n          this.y = 0;\r\n          this.z = 0;\r\n          return this;\r\n      }\r\n      SetXYZ(x, y, z) {\r\n          this.x = x;\r\n          this.y = y;\r\n          this.z = z;\r\n          return this;\r\n      }\r\n      Copy(other) {\r\n          this.x = other.x;\r\n          this.y = other.y;\r\n          this.z = other.z;\r\n          return this;\r\n      }\r\n      SelfNeg() {\r\n          this.x = (-this.x);\r\n          this.y = (-this.y);\r\n          this.z = (-this.z);\r\n          return this;\r\n      }\r\n      SelfAdd(v) {\r\n          this.x += v.x;\r\n          this.y += v.y;\r\n          this.z += v.z;\r\n          return this;\r\n      }\r\n      SelfAddXYZ(x, y, z) {\r\n          this.x += x;\r\n          this.y += y;\r\n          this.z += z;\r\n          return this;\r\n      }\r\n      SelfSub(v) {\r\n          this.x -= v.x;\r\n          this.y -= v.y;\r\n          this.z -= v.z;\r\n          return this;\r\n      }\r\n      SelfSubXYZ(x, y, z) {\r\n          this.x -= x;\r\n          this.y -= y;\r\n          this.z -= z;\r\n          return this;\r\n      }\r\n      SelfMul(s) {\r\n          this.x *= s;\r\n          this.y *= s;\r\n          this.z *= s;\r\n          return this;\r\n      }\r\n      static DotV3V3(a, b) {\r\n          return a.x * b.x + a.y * b.y + a.z * b.z;\r\n      }\r\n      static CrossV3V3(a, b, out) {\r\n          const a_x = a.x, a_y = a.y, a_z = a.z;\r\n          const b_x = b.x, b_y = b.y, b_z = b.z;\r\n          out.x = a_y * b_z - a_z * b_y;\r\n          out.y = a_z * b_x - a_x * b_z;\r\n          out.z = a_x * b_y - a_y * b_x;\r\n          return out;\r\n      }\r\n  }\r\n  b2Vec3.ZERO = new b2Vec3(0, 0, 0);\r\n  b2Vec3.s_t0 = new b2Vec3();\r\n  /// A 2-by-2 matrix. Stored in column-major order.\r\n  class b2Mat22 {\r\n      constructor() {\r\n          this.ex = new b2Vec2(1, 0);\r\n          this.ey = new b2Vec2(0, 1);\r\n      }\r\n      Clone() {\r\n          return new b2Mat22().Copy(this);\r\n      }\r\n      static FromVV(c1, c2) {\r\n          return new b2Mat22().SetVV(c1, c2);\r\n      }\r\n      static FromSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n          return new b2Mat22().SetSSSS(r1c1, r1c2, r2c1, r2c2);\r\n      }\r\n      static FromAngle(radians) {\r\n          return new b2Mat22().SetAngle(radians);\r\n      }\r\n      SetSSSS(r1c1, r1c2, r2c1, r2c2) {\r\n          this.ex.Set(r1c1, r2c1);\r\n          this.ey.Set(r1c2, r2c2);\r\n          return this;\r\n      }\r\n      SetVV(c1, c2) {\r\n          this.ex.Copy(c1);\r\n          this.ey.Copy(c2);\r\n          return this;\r\n      }\r\n      SetAngle(radians) {\r\n          const c = Math.cos(radians);\r\n          const s = Math.sin(radians);\r\n          this.ex.Set(c, s);\r\n          this.ey.Set(-s, c);\r\n          return this;\r\n      }\r\n      Copy(other) {\r\n          this.ex.Copy(other.ex);\r\n          this.ey.Copy(other.ey);\r\n          return this;\r\n      }\r\n      SetIdentity() {\r\n          this.ex.Set(1, 0);\r\n          this.ey.Set(0, 1);\r\n          return this;\r\n      }\r\n      SetZero() {\r\n          this.ex.SetZero();\r\n          this.ey.SetZero();\r\n          return this;\r\n      }\r\n      GetAngle() {\r\n          return Math.atan2(this.ex.y, this.ex.x);\r\n      }\r\n      GetInverse(out) {\r\n          const a = this.ex.x;\r\n          const b = this.ey.x;\r\n          const c = this.ex.y;\r\n          const d = this.ey.y;\r\n          let det = a * d - b * c;\r\n          if (det !== 0) {\r\n              det = 1 / det;\r\n          }\r\n          out.ex.x = det * d;\r\n          out.ey.x = (-det * b);\r\n          out.ex.y = (-det * c);\r\n          out.ey.y = det * a;\r\n          return out;\r\n      }\r\n      Solve(b_x, b_y, out) {\r\n          const a11 = this.ex.x, a12 = this.ey.x;\r\n          const a21 = this.ex.y, a22 = this.ey.y;\r\n          let det = a11 * a22 - a12 * a21;\r\n          if (det !== 0) {\r\n              det = 1 / det;\r\n          }\r\n          out.x = det * (a22 * b_x - a12 * b_y);\r\n          out.y = det * (a11 * b_y - a21 * b_x);\r\n          return out;\r\n      }\r\n      SelfAbs() {\r\n          this.ex.SelfAbs();\r\n          this.ey.SelfAbs();\r\n          return this;\r\n      }\r\n      SelfInv() {\r\n          this.GetInverse(this);\r\n          return this;\r\n      }\r\n      SelfAddM(M) {\r\n          this.ex.SelfAdd(M.ex);\r\n          this.ey.SelfAdd(M.ey);\r\n          return this;\r\n      }\r\n      SelfSubM(M) {\r\n          this.ex.SelfSub(M.ex);\r\n          this.ey.SelfSub(M.ey);\r\n          return this;\r\n      }\r\n      static AbsM(M, out) {\r\n          const M_ex = M.ex, M_ey = M.ey;\r\n          out.ex.x = b2Abs(M_ex.x);\r\n          out.ex.y = b2Abs(M_ex.y);\r\n          out.ey.x = b2Abs(M_ey.x);\r\n          out.ey.y = b2Abs(M_ey.y);\r\n          return out;\r\n      }\r\n      static MulMV(M, v, out) {\r\n          const M_ex = M.ex, M_ey = M.ey;\r\n          const v_x = v.x, v_y = v.y;\r\n          out.x = M_ex.x * v_x + M_ey.x * v_y;\r\n          out.y = M_ex.y * v_x + M_ey.y * v_y;\r\n          return out;\r\n      }\r\n      static MulTMV(M, v, out) {\r\n          const M_ex = M.ex, M_ey = M.ey;\r\n          const v_x = v.x, v_y = v.y;\r\n          out.x = M_ex.x * v_x + M_ex.y * v_y;\r\n          out.y = M_ey.x * v_x + M_ey.y * v_y;\r\n          return out;\r\n      }\r\n      static AddMM(A, B, out) {\r\n          const A_ex = A.ex, A_ey = A.ey;\r\n          const B_ex = B.ex, B_ey = B.ey;\r\n          out.ex.x = A_ex.x + B_ex.x;\r\n          out.ex.y = A_ex.y + B_ex.y;\r\n          out.ey.x = A_ey.x + B_ey.x;\r\n          out.ey.y = A_ey.y + B_ey.y;\r\n          return out;\r\n      }\r\n      static MulMM(A, B, out) {\r\n          const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n          const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n          const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n          const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n          out.ex.x = A_ex_x * B_ex_x + A_ey_x * B_ex_y;\r\n          out.ex.y = A_ex_y * B_ex_x + A_ey_y * B_ex_y;\r\n          out.ey.x = A_ex_x * B_ey_x + A_ey_x * B_ey_y;\r\n          out.ey.y = A_ex_y * B_ey_x + A_ey_y * B_ey_y;\r\n          return out;\r\n      }\r\n      static MulTMM(A, B, out) {\r\n          const A_ex_x = A.ex.x, A_ex_y = A.ex.y;\r\n          const A_ey_x = A.ey.x, A_ey_y = A.ey.y;\r\n          const B_ex_x = B.ex.x, B_ex_y = B.ex.y;\r\n          const B_ey_x = B.ey.x, B_ey_y = B.ey.y;\r\n          out.ex.x = A_ex_x * B_ex_x + A_ex_y * B_ex_y;\r\n          out.ex.y = A_ey_x * B_ex_x + A_ey_y * B_ex_y;\r\n          out.ey.x = A_ex_x * B_ey_x + A_ex_y * B_ey_y;\r\n          out.ey.y = A_ey_x * B_ey_x + A_ey_y * B_ey_y;\r\n          return out;\r\n      }\r\n  }\r\n  b2Mat22.IDENTITY = new b2Mat22();\r\n  /// A 3-by-3 matrix. Stored in column-major order.\r\n  class b2Mat33 {\r\n      constructor() {\r\n          this.ex = new b2Vec3(1, 0, 0);\r\n          this.ey = new b2Vec3(0, 1, 0);\r\n          this.ez = new b2Vec3(0, 0, 1);\r\n      }\r\n      Clone() {\r\n          return new b2Mat33().Copy(this);\r\n      }\r\n      SetVVV(c1, c2, c3) {\r\n          this.ex.Copy(c1);\r\n          this.ey.Copy(c2);\r\n          this.ez.Copy(c3);\r\n          return this;\r\n      }\r\n      Copy(other) {\r\n          this.ex.Copy(other.ex);\r\n          this.ey.Copy(other.ey);\r\n          this.ez.Copy(other.ez);\r\n          return this;\r\n      }\r\n      SetIdentity() {\r\n          this.ex.SetXYZ(1, 0, 0);\r\n          this.ey.SetXYZ(0, 1, 0);\r\n          this.ez.SetXYZ(0, 0, 1);\r\n          return this;\r\n      }\r\n      SetZero() {\r\n          this.ex.SetZero();\r\n          this.ey.SetZero();\r\n          this.ez.SetZero();\r\n          return this;\r\n      }\r\n      SelfAddM(M) {\r\n          this.ex.SelfAdd(M.ex);\r\n          this.ey.SelfAdd(M.ey);\r\n          this.ez.SelfAdd(M.ez);\r\n          return this;\r\n      }\r\n      Solve33(b_x, b_y, b_z, out) {\r\n          const a11 = this.ex.x, a21 = this.ex.y, a31 = this.ex.z;\r\n          const a12 = this.ey.x, a22 = this.ey.y, a32 = this.ey.z;\r\n          const a13 = this.ez.x, a23 = this.ez.y, a33 = this.ez.z;\r\n          let det = a11 * (a22 * a33 - a32 * a23) + a21 * (a32 * a13 - a12 * a33) + a31 * (a12 * a23 - a22 * a13);\r\n          if (det !== 0) {\r\n              det = 1 / det;\r\n          }\r\n          out.x = det * (b_x * (a22 * a33 - a32 * a23) + b_y * (a32 * a13 - a12 * a33) + b_z * (a12 * a23 - a22 * a13));\r\n          out.y = det * (a11 * (b_y * a33 - b_z * a23) + a21 * (b_z * a13 - b_x * a33) + a31 * (b_x * a23 - b_y * a13));\r\n          out.z = det * (a11 * (a22 * b_z - a32 * b_y) + a21 * (a32 * b_x - a12 * b_z) + a31 * (a12 * b_y - a22 * b_x));\r\n          return out;\r\n      }\r\n      Solve22(b_x, b_y, out) {\r\n          const a11 = this.ex.x, a12 = this.ey.x;\r\n          const a21 = this.ex.y, a22 = this.ey.y;\r\n          let det = a11 * a22 - a12 * a21;\r\n          if (det !== 0) {\r\n              det = 1 / det;\r\n          }\r\n          out.x = det * (a22 * b_x - a12 * b_y);\r\n          out.y = det * (a11 * b_y - a21 * b_x);\r\n          return out;\r\n      }\r\n      GetInverse22(M) {\r\n          const a = this.ex.x, b = this.ey.x, c = this.ex.y, d = this.ey.y;\r\n          let det = a * d - b * c;\r\n          if (det !== 0) {\r\n              det = 1 / det;\r\n          }\r\n          M.ex.x = det * d;\r\n          M.ey.x = -det * b;\r\n          M.ex.z = 0;\r\n          M.ex.y = -det * c;\r\n          M.ey.y = det * a;\r\n          M.ey.z = 0;\r\n          M.ez.x = 0;\r\n          M.ez.y = 0;\r\n          M.ez.z = 0;\r\n      }\r\n      GetSymInverse33(M) {\r\n          let det = b2Vec3.DotV3V3(this.ex, b2Vec3.CrossV3V3(this.ey, this.ez, b2Vec3.s_t0));\r\n          if (det !== 0) {\r\n              det = 1 / det;\r\n          }\r\n          const a11 = this.ex.x, a12 = this.ey.x, a13 = this.ez.x;\r\n          const a22 = this.ey.y, a23 = this.ez.y;\r\n          const a33 = this.ez.z;\r\n          M.ex.x = det * (a22 * a33 - a23 * a23);\r\n          M.ex.y = det * (a13 * a23 - a12 * a33);\r\n          M.ex.z = det * (a12 * a23 - a13 * a22);\r\n          M.ey.x = M.ex.y;\r\n          M.ey.y = det * (a11 * a33 - a13 * a13);\r\n          M.ey.z = det * (a13 * a12 - a11 * a23);\r\n          M.ez.x = M.ex.z;\r\n          M.ez.y = M.ey.z;\r\n          M.ez.z = det * (a11 * a22 - a12 * a12);\r\n      }\r\n      static MulM33V3(A, v, out) {\r\n          const v_x = v.x, v_y = v.y, v_z = v.z;\r\n          out.x = A.ex.x * v_x + A.ey.x * v_y + A.ez.x * v_z;\r\n          out.y = A.ex.y * v_x + A.ey.y * v_y + A.ez.y * v_z;\r\n          out.z = A.ex.z * v_x + A.ey.z * v_y + A.ez.z * v_z;\r\n          return out;\r\n      }\r\n      static MulM33XYZ(A, x, y, z, out) {\r\n          out.x = A.ex.x * x + A.ey.x * y + A.ez.x * z;\r\n          out.y = A.ex.y * x + A.ey.y * y + A.ez.y * z;\r\n          out.z = A.ex.z * x + A.ey.z * y + A.ez.z * z;\r\n          return out;\r\n      }\r\n      static MulM33V2(A, v, out) {\r\n          const v_x = v.x, v_y = v.y;\r\n          out.x = A.ex.x * v_x + A.ey.x * v_y;\r\n          out.y = A.ex.y * v_x + A.ey.y * v_y;\r\n          return out;\r\n      }\r\n      static MulM33XY(A, x, y, out) {\r\n          out.x = A.ex.x * x + A.ey.x * y;\r\n          out.y = A.ex.y * x + A.ey.y * y;\r\n          return out;\r\n      }\r\n  }\r\n  b2Mat33.IDENTITY = new b2Mat33();\r\n  /// Rotation\r\n  class b2Rot {\r\n      constructor(angle = 0) {\r\n          this.s = 0;\r\n          this.c = 1;\r\n          if (angle) {\r\n              this.s = Math.sin(angle);\r\n              this.c = Math.cos(angle);\r\n          }\r\n      }\r\n      Clone() {\r\n          return new b2Rot().Copy(this);\r\n      }\r\n      Copy(other) {\r\n          this.s = other.s;\r\n          this.c = other.c;\r\n          return this;\r\n      }\r\n      SetAngle(angle) {\r\n          this.s = Math.sin(angle);\r\n          this.c = Math.cos(angle);\r\n          return this;\r\n      }\r\n      SetIdentity() {\r\n          this.s = 0;\r\n          this.c = 1;\r\n          return this;\r\n      }\r\n      GetAngle() {\r\n          return Math.atan2(this.s, this.c);\r\n      }\r\n      GetXAxis(out) {\r\n          out.x = this.c;\r\n          out.y = this.s;\r\n          return out;\r\n      }\r\n      GetYAxis(out) {\r\n          out.x = -this.s;\r\n          out.y = this.c;\r\n          return out;\r\n      }\r\n      static MulRR(q, r, out) {\r\n          // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\r\n          // [qs  qc]   [rs  rc]   [qs*rc+qc*rs -qs*rs+qc*rc]\r\n          // s = qs * rc + qc * rs\r\n          // c = qc * rc - qs * rs\r\n          const q_c = q.c, q_s = q.s;\r\n          const r_c = r.c, r_s = r.s;\r\n          out.s = q_s * r_c + q_c * r_s;\r\n          out.c = q_c * r_c - q_s * r_s;\r\n          return out;\r\n      }\r\n      static MulTRR(q, r, out) {\r\n          // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\r\n          // [-qs qc]   [rs  rc]   [-qs*rc+qc*rs qs*rs+qc*rc]\r\n          // s = qc * rs - qs * rc\r\n          // c = qc * rc + qs * rs\r\n          const q_c = q.c, q_s = q.s;\r\n          const r_c = r.c, r_s = r.s;\r\n          out.s = q_c * r_s - q_s * r_c;\r\n          out.c = q_c * r_c + q_s * r_s;\r\n          return out;\r\n      }\r\n      static MulRV(q, v, out) {\r\n          const q_c = q.c, q_s = q.s;\r\n          const v_x = v.x, v_y = v.y;\r\n          out.x = q_c * v_x - q_s * v_y;\r\n          out.y = q_s * v_x + q_c * v_y;\r\n          return out;\r\n      }\r\n      static MulTRV(q, v, out) {\r\n          const q_c = q.c, q_s = q.s;\r\n          const v_x = v.x, v_y = v.y;\r\n          out.x = q_c * v_x + q_s * v_y;\r\n          out.y = -q_s * v_x + q_c * v_y;\r\n          return out;\r\n      }\r\n  }\r\n  b2Rot.IDENTITY = new b2Rot();\r\n  /// A transform contains translation and rotation. It is used to represent\r\n  /// the position and orientation of rigid frames.\r\n  class b2Transform {\r\n      constructor() {\r\n          this.p = new b2Vec2();\r\n          this.q = new b2Rot();\r\n      }\r\n      Clone() {\r\n          return new b2Transform().Copy(this);\r\n      }\r\n      Copy(other) {\r\n          this.p.Copy(other.p);\r\n          this.q.Copy(other.q);\r\n          return this;\r\n      }\r\n      SetIdentity() {\r\n          this.p.SetZero();\r\n          this.q.SetIdentity();\r\n          return this;\r\n      }\r\n      SetPositionRotation(position, q) {\r\n          this.p.Copy(position);\r\n          this.q.Copy(q);\r\n          return this;\r\n      }\r\n      SetPositionAngle(pos, a) {\r\n          this.p.Copy(pos);\r\n          this.q.SetAngle(a);\r\n          return this;\r\n      }\r\n      SetPosition(position) {\r\n          this.p.Copy(position);\r\n          return this;\r\n      }\r\n      SetPositionXY(x, y) {\r\n          this.p.Set(x, y);\r\n          return this;\r\n      }\r\n      SetRotation(rotation) {\r\n          this.q.Copy(rotation);\r\n          return this;\r\n      }\r\n      SetRotationAngle(radians) {\r\n          this.q.SetAngle(radians);\r\n          return this;\r\n      }\r\n      GetPosition() {\r\n          return this.p;\r\n      }\r\n      GetRotation() {\r\n          return this.q;\r\n      }\r\n      GetRotationAngle() {\r\n          return this.q.GetAngle();\r\n      }\r\n      GetAngle() {\r\n          return this.q.GetAngle();\r\n      }\r\n      static MulXV(T, v, out) {\r\n          // float32 x = (T.q.c * v.x - T.q.s * v.y) + T.p.x;\r\n          // float32 y = (T.q.s * v.x + T.q.c * v.y) + T.p.y;\r\n          // return b2Vec2(x, y);\r\n          const T_q_c = T.q.c, T_q_s = T.q.s;\r\n          const v_x = v.x, v_y = v.y;\r\n          out.x = (T_q_c * v_x - T_q_s * v_y) + T.p.x;\r\n          out.y = (T_q_s * v_x + T_q_c * v_y) + T.p.y;\r\n          return out;\r\n      }\r\n      static MulTXV(T, v, out) {\r\n          // float32 px = v.x - T.p.x;\r\n          // float32 py = v.y - T.p.y;\r\n          // float32 x = (T.q.c * px + T.q.s * py);\r\n          // float32 y = (-T.q.s * px + T.q.c * py);\r\n          // return b2Vec2(x, y);\r\n          const T_q_c = T.q.c, T_q_s = T.q.s;\r\n          const p_x = v.x - T.p.x;\r\n          const p_y = v.y - T.p.y;\r\n          out.x = (T_q_c * p_x + T_q_s * p_y);\r\n          out.y = (-T_q_s * p_x + T_q_c * p_y);\r\n          return out;\r\n      }\r\n      static MulXX(A, B, out) {\r\n          b2Rot.MulRR(A.q, B.q, out.q);\r\n          b2Vec2.AddVV(b2Rot.MulRV(A.q, B.p, out.p), A.p, out.p);\r\n          return out;\r\n      }\r\n      static MulTXX(A, B, out) {\r\n          b2Rot.MulTRR(A.q, B.q, out.q);\r\n          b2Rot.MulTRV(A.q, b2Vec2.SubVV(B.p, A.p, out.p), out.p);\r\n          return out;\r\n      }\r\n  }\r\n  b2Transform.IDENTITY = new b2Transform();\r\n  /// This describes the motion of a body/shape for TOI computation.\r\n  /// Shapes are defined with respect to the body origin, which may\r\n  /// no coincide with the center of mass. However, to support dynamics\r\n  /// we must interpolate the center of mass position.\r\n  class b2Sweep {\r\n      constructor() {\r\n          this.localCenter = new b2Vec2();\r\n          this.c0 = new b2Vec2();\r\n          this.c = new b2Vec2();\r\n          this.a0 = 0;\r\n          this.a = 0;\r\n          this.alpha0 = 0;\r\n      }\r\n      Clone() {\r\n          return new b2Sweep().Copy(this);\r\n      }\r\n      Copy(other) {\r\n          this.localCenter.Copy(other.localCenter);\r\n          this.c0.Copy(other.c0);\r\n          this.c.Copy(other.c);\r\n          this.a0 = other.a0;\r\n          this.a = other.a;\r\n          this.alpha0 = other.alpha0;\r\n          return this;\r\n      }\r\n      GetTransform(xf, beta) {\r\n          const one_minus_beta = (1 - beta);\r\n          xf.p.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n          xf.p.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n          const angle = one_minus_beta * this.a0 + beta * this.a;\r\n          xf.q.SetAngle(angle);\r\n          xf.p.SelfSub(b2Rot.MulRV(xf.q, this.localCenter, b2Vec2.s_t0));\r\n          return xf;\r\n      }\r\n      Advance(alpha) {\r\n          // DEBUG: b2Assert(this.alpha0 < 1);\r\n          const beta = (alpha - this.alpha0) / (1 - this.alpha0);\r\n          const one_minus_beta = (1 - beta);\r\n          this.c0.x = one_minus_beta * this.c0.x + beta * this.c.x;\r\n          this.c0.y = one_minus_beta * this.c0.y + beta * this.c.y;\r\n          this.a0 = one_minus_beta * this.a0 + beta * this.a;\r\n          this.alpha0 = alpha;\r\n      }\r\n      Normalize() {\r\n          const d = b2_two_pi * Math.floor(this.a0 / b2_two_pi);\r\n          this.a0 -= d;\r\n          this.a -= d;\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2011 Erin Catto http://box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Color for debug drawing. Each value has the range [0,1].\r\n  class b2Color {\r\n      constructor(rr = 0.5, gg = 0.5, bb = 0.5, aa = 1.0) {\r\n          this.r = rr;\r\n          this.g = gg;\r\n          this.b = bb;\r\n          this.a = aa;\r\n      }\r\n      Clone() {\r\n          return new b2Color().Copy(this);\r\n      }\r\n      Copy(other) {\r\n          this.r = other.r;\r\n          this.g = other.g;\r\n          this.b = other.b;\r\n          this.a = other.a;\r\n          return this;\r\n      }\r\n      IsEqual(color) {\r\n          return (this.r === color.r) && (this.g === color.g) && (this.b === color.b) && (this.a === color.a);\r\n      }\r\n      IsZero() {\r\n          return (this.r === 0) && (this.g === 0) && (this.b === 0) && (this.a === 0);\r\n      }\r\n      Set(r, g, b, a = this.a) {\r\n          this.SetRGBA(r, g, b, a);\r\n      }\r\n      SetByteRGB(r, g, b) {\r\n          this.r = r / 0xff;\r\n          this.g = g / 0xff;\r\n          this.b = b / 0xff;\r\n          return this;\r\n      }\r\n      SetByteRGBA(r, g, b, a) {\r\n          this.r = r / 0xff;\r\n          this.g = g / 0xff;\r\n          this.b = b / 0xff;\r\n          this.a = a / 0xff;\r\n          return this;\r\n      }\r\n      SetRGB(rr, gg, bb) {\r\n          this.r = rr;\r\n          this.g = gg;\r\n          this.b = bb;\r\n          return this;\r\n      }\r\n      SetRGBA(rr, gg, bb, aa) {\r\n          this.r = rr;\r\n          this.g = gg;\r\n          this.b = bb;\r\n          this.a = aa;\r\n          return this;\r\n      }\r\n      SelfAdd(color) {\r\n          this.r += color.r;\r\n          this.g += color.g;\r\n          this.b += color.b;\r\n          this.a += color.a;\r\n          return this;\r\n      }\r\n      Add(color, out) {\r\n          out.r = this.r + color.r;\r\n          out.g = this.g + color.g;\r\n          out.b = this.b + color.b;\r\n          out.a = this.a + color.a;\r\n          return out;\r\n      }\r\n      SelfSub(color) {\r\n          this.r -= color.r;\r\n          this.g -= color.g;\r\n          this.b -= color.b;\r\n          this.a -= color.a;\r\n          return this;\r\n      }\r\n      Sub(color, out) {\r\n          out.r = this.r - color.r;\r\n          out.g = this.g - color.g;\r\n          out.b = this.b - color.b;\r\n          out.a = this.a - color.a;\r\n          return out;\r\n      }\r\n      SelfMul(s) {\r\n          this.r *= s;\r\n          this.g *= s;\r\n          this.b *= s;\r\n          this.a *= s;\r\n          return this;\r\n      }\r\n      Mul(s, out) {\r\n          out.r = this.r * s;\r\n          out.g = this.g * s;\r\n          out.b = this.b * s;\r\n          out.a = this.a * s;\r\n          return out;\r\n      }\r\n      Mix(mixColor, strength) {\r\n          b2Color.MixColors(this, mixColor, strength);\r\n      }\r\n      static MixColors(colorA, colorB, strength) {\r\n          const dr = (strength * (colorB.r - colorA.r));\r\n          const dg = (strength * (colorB.g - colorA.g));\r\n          const db = (strength * (colorB.b - colorA.b));\r\n          const da = (strength * (colorB.a - colorA.a));\r\n          colorA.r += dr;\r\n          colorA.g += dg;\r\n          colorA.b += db;\r\n          colorA.a += da;\r\n          colorB.r -= dr;\r\n          colorB.g -= dg;\r\n          colorB.b -= db;\r\n          colorB.a -= da;\r\n      }\r\n      MakeStyleString(alpha = this.a) {\r\n          return b2Color.MakeStyleString(this.r, this.g, this.b, alpha);\r\n      }\r\n      static MakeStyleString(r, g, b, a = 1.0) {\r\n          // function clamp(x: number, lo: number, hi: number) { return x < lo ? lo : hi < x ? hi : x; }\r\n          r *= 255; // r = clamp(r, 0, 255);\r\n          g *= 255; // g = clamp(g, 0, 255);\r\n          b *= 255; // b = clamp(b, 0, 255);\r\n          // a = clamp(a, 0, 1);\r\n          if (a < 1) {\r\n              return `rgba(${r},${g},${b},${a})`;\r\n          }\r\n          else {\r\n              return `rgb(${r},${g},${b})`;\r\n          }\r\n      }\r\n  }\r\n  b2Color.ZERO = new b2Color(0, 0, 0, 0);\r\n  b2Color.RED = new b2Color(1, 0, 0);\r\n  b2Color.GREEN = new b2Color(0, 1, 0);\r\n  b2Color.BLUE = new b2Color(0, 0, 1);\r\n  (function (b2DrawFlags) {\r\n      b2DrawFlags[b2DrawFlags[\"e_none\"] = 0] = \"e_none\";\r\n      b2DrawFlags[b2DrawFlags[\"e_shapeBit\"] = 1] = \"e_shapeBit\";\r\n      b2DrawFlags[b2DrawFlags[\"e_jointBit\"] = 2] = \"e_jointBit\";\r\n      b2DrawFlags[b2DrawFlags[\"e_aabbBit\"] = 4] = \"e_aabbBit\";\r\n      b2DrawFlags[b2DrawFlags[\"e_pairBit\"] = 8] = \"e_pairBit\";\r\n      b2DrawFlags[b2DrawFlags[\"e_centerOfMassBit\"] = 16] = \"e_centerOfMassBit\";\r\n      // #if B2_ENABLE_PARTICLE\r\n      b2DrawFlags[b2DrawFlags[\"e_particleBit\"] = 32] = \"e_particleBit\";\r\n      // #endif\r\n      b2DrawFlags[b2DrawFlags[\"e_controllerBit\"] = 64] = \"e_controllerBit\";\r\n      b2DrawFlags[b2DrawFlags[\"e_all\"] = 63] = \"e_all\";\r\n  })(exports.b2DrawFlags || (exports.b2DrawFlags = {}));\r\n  /// Implement and register this class with a b2World to provide debug drawing of physics\r\n  /// entities in your game.\r\n  class b2Draw {\r\n      constructor() {\r\n          this.m_drawFlags = 0;\r\n      }\r\n      SetFlags(flags) {\r\n          this.m_drawFlags = flags;\r\n      }\r\n      GetFlags() {\r\n          return this.m_drawFlags;\r\n      }\r\n      AppendFlags(flags) {\r\n          this.m_drawFlags |= flags;\r\n      }\r\n      ClearFlags(flags) {\r\n          this.m_drawFlags &= ~flags;\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2011 Erin Catto http://box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Timer for profiling. This has platform specific code and may\r\n  /// not work on every platform.\r\n  class b2Timer {\r\n      constructor() {\r\n          this.m_start = Date.now();\r\n      }\r\n      /// Reset the timer.\r\n      Reset() {\r\n          this.m_start = Date.now();\r\n          return this;\r\n      }\r\n      /// Get the time since construction or the last reset.\r\n      GetMilliseconds() {\r\n          return Date.now() - this.m_start;\r\n      }\r\n  }\r\n  class b2Counter {\r\n      constructor() {\r\n          this.m_count = 0;\r\n          this.m_min_count = 0;\r\n          this.m_max_count = 0;\r\n      }\r\n      GetCount() {\r\n          return this.m_count;\r\n      }\r\n      GetMinCount() {\r\n          return this.m_min_count;\r\n      }\r\n      GetMaxCount() {\r\n          return this.m_max_count;\r\n      }\r\n      ResetCount() {\r\n          const count = this.m_count;\r\n          this.m_count = 0;\r\n          return count;\r\n      }\r\n      ResetMinCount() {\r\n          this.m_min_count = 0;\r\n      }\r\n      ResetMaxCount() {\r\n          this.m_max_count = 0;\r\n      }\r\n      Increment() {\r\n          this.m_count++;\r\n          if (this.m_max_count < this.m_count) {\r\n              this.m_max_count = this.m_count;\r\n          }\r\n      }\r\n      Decrement() {\r\n          this.m_count--;\r\n          if (this.m_min_count > this.m_count) {\r\n              this.m_min_count = this.m_count;\r\n          }\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2010 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// This is a growable LIFO stack with an initial capacity of N.\r\n  /// If the stack size exceeds the initial capacity, the heap is used\r\n  /// to increase the size of the stack.\r\n  class b2GrowableStack {\r\n      constructor(N) {\r\n          this.m_stack = [];\r\n          this.m_count = 0;\r\n          this.m_stack = b2MakeArray(N, (index) => null);\r\n          this.m_count = 0;\r\n      }\r\n      Reset() {\r\n          this.m_count = 0;\r\n          return this;\r\n      }\r\n      Push(element) {\r\n          this.m_stack[this.m_count] = element;\r\n          this.m_count++;\r\n      }\r\n      Pop() {\r\n          // DEBUG: b2Assert(this.m_count > 0);\r\n          this.m_count--;\r\n          const element = this.m_stack[this.m_count];\r\n          this.m_stack[this.m_count] = null;\r\n          if (element === null) {\r\n              throw new Error();\r\n          }\r\n          return element;\r\n      }\r\n      GetCount() {\r\n          return this.m_count;\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2BlockAllocator {\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2StackAllocator {\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// A distance proxy is used by the GJK algorithm.\r\n  /// It encapsulates any shape.\r\n  class b2DistanceProxy {\r\n      constructor() {\r\n          this.m_buffer = b2Vec2.MakeArray(2);\r\n          this.m_vertices = this.m_buffer;\r\n          this.m_count = 0;\r\n          this.m_radius = 0;\r\n      }\r\n      Copy(other) {\r\n          if (other.m_vertices === other.m_buffer) {\r\n              this.m_vertices = this.m_buffer;\r\n              this.m_buffer[0].Copy(other.m_buffer[0]);\r\n              this.m_buffer[1].Copy(other.m_buffer[1]);\r\n          }\r\n          else {\r\n              this.m_vertices = other.m_vertices;\r\n          }\r\n          this.m_count = other.m_count;\r\n          this.m_radius = other.m_radius;\r\n          return this;\r\n      }\r\n      Reset() {\r\n          this.m_vertices = this.m_buffer;\r\n          this.m_count = 0;\r\n          this.m_radius = 0;\r\n          return this;\r\n      }\r\n      SetShape(shape, index) {\r\n          shape.SetupDistanceProxy(this, index);\r\n      }\r\n      SetVerticesRadius(vertices, count, radius) {\r\n          this.m_vertices = vertices;\r\n          this.m_count = count;\r\n          this.m_radius = radius;\r\n      }\r\n      GetSupport(d) {\r\n          let bestIndex = 0;\r\n          let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n          for (let i = 1; i < this.m_count; ++i) {\r\n              const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n              if (value > bestValue) {\r\n                  bestIndex = i;\r\n                  bestValue = value;\r\n              }\r\n          }\r\n          return bestIndex;\r\n      }\r\n      GetSupportVertex(d) {\r\n          let bestIndex = 0;\r\n          let bestValue = b2Vec2.DotVV(this.m_vertices[0], d);\r\n          for (let i = 1; i < this.m_count; ++i) {\r\n              const value = b2Vec2.DotVV(this.m_vertices[i], d);\r\n              if (value > bestValue) {\r\n                  bestIndex = i;\r\n                  bestValue = value;\r\n              }\r\n          }\r\n          return this.m_vertices[bestIndex];\r\n      }\r\n      GetVertexCount() {\r\n          return this.m_count;\r\n      }\r\n      GetVertex(index) {\r\n          // DEBUG: b2Assert(0 <= index && index < this.m_count);\r\n          return this.m_vertices[index];\r\n      }\r\n  }\r\n  class b2SimplexCache {\r\n      constructor() {\r\n          this.metric = 0;\r\n          this.count = 0;\r\n          this.indexA = [0, 0, 0];\r\n          this.indexB = [0, 0, 0];\r\n      }\r\n      Reset() {\r\n          this.metric = 0;\r\n          this.count = 0;\r\n          return this;\r\n      }\r\n  }\r\n  class b2DistanceInput {\r\n      constructor() {\r\n          this.proxyA = new b2DistanceProxy();\r\n          this.proxyB = new b2DistanceProxy();\r\n          this.transformA = new b2Transform();\r\n          this.transformB = new b2Transform();\r\n          this.useRadii = false;\r\n      }\r\n      Reset() {\r\n          this.proxyA.Reset();\r\n          this.proxyB.Reset();\r\n          this.transformA.SetIdentity();\r\n          this.transformB.SetIdentity();\r\n          this.useRadii = false;\r\n          return this;\r\n      }\r\n  }\r\n  class b2DistanceOutput {\r\n      constructor() {\r\n          this.pointA = new b2Vec2();\r\n          this.pointB = new b2Vec2();\r\n          this.distance = 0;\r\n          this.iterations = 0; ///< number of GJK iterations used\r\n      }\r\n      Reset() {\r\n          this.pointA.SetZero();\r\n          this.pointB.SetZero();\r\n          this.distance = 0;\r\n          this.iterations = 0;\r\n          return this;\r\n      }\r\n  }\r\n  /// Input parameters for b2ShapeCast\r\n  class b2ShapeCastInput {\r\n      constructor() {\r\n          this.proxyA = new b2DistanceProxy();\r\n          this.proxyB = new b2DistanceProxy();\r\n          this.transformA = new b2Transform();\r\n          this.transformB = new b2Transform();\r\n          this.translationB = new b2Vec2();\r\n      }\r\n  }\r\n  /// Output results for b2ShapeCast\r\n  class b2ShapeCastOutput {\r\n      constructor() {\r\n          this.point = new b2Vec2();\r\n          this.normal = new b2Vec2();\r\n          this.lambda = 0.0;\r\n          this.iterations = 0;\r\n      }\r\n  }\r\n  exports.b2_gjkCalls = 0;\r\n  exports.b2_gjkIters = 0;\r\n  exports.b2_gjkMaxIters = 0;\r\n  function b2_gjk_reset() {\r\n      exports.b2_gjkCalls = 0;\r\n      exports.b2_gjkIters = 0;\r\n      exports.b2_gjkMaxIters = 0;\r\n  }\r\n  class b2SimplexVertex {\r\n      constructor() {\r\n          this.wA = new b2Vec2(); // support point in proxyA\r\n          this.wB = new b2Vec2(); // support point in proxyB\r\n          this.w = new b2Vec2(); // wB - wA\r\n          this.a = 0; // barycentric coordinate for closest point\r\n          this.indexA = 0; // wA index\r\n          this.indexB = 0; // wB index\r\n      }\r\n      Copy(other) {\r\n          this.wA.Copy(other.wA); // support point in proxyA\r\n          this.wB.Copy(other.wB); // support point in proxyB\r\n          this.w.Copy(other.w); // wB - wA\r\n          this.a = other.a; // barycentric coordinate for closest point\r\n          this.indexA = other.indexA; // wA index\r\n          this.indexB = other.indexB; // wB index\r\n          return this;\r\n      }\r\n  }\r\n  class b2Simplex {\r\n      constructor() {\r\n          this.m_v1 = new b2SimplexVertex();\r\n          this.m_v2 = new b2SimplexVertex();\r\n          this.m_v3 = new b2SimplexVertex();\r\n          this.m_vertices = [ /*3*/];\r\n          this.m_count = 0;\r\n          this.m_vertices[0] = this.m_v1;\r\n          this.m_vertices[1] = this.m_v2;\r\n          this.m_vertices[2] = this.m_v3;\r\n      }\r\n      ReadCache(cache, proxyA, transformA, proxyB, transformB) {\r\n          // DEBUG: b2Assert(0 <= cache.count && cache.count <= 3);\r\n          // Copy data from cache.\r\n          this.m_count = cache.count;\r\n          const vertices = this.m_vertices;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const v = vertices[i];\r\n              v.indexA = cache.indexA[i];\r\n              v.indexB = cache.indexB[i];\r\n              const wALocal = proxyA.GetVertex(v.indexA);\r\n              const wBLocal = proxyB.GetVertex(v.indexB);\r\n              b2Transform.MulXV(transformA, wALocal, v.wA);\r\n              b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n              b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n              v.a = 0;\r\n          }\r\n          // Compute the new simplex metric, if it is substantially different than\r\n          // old metric then flush the simplex.\r\n          if (this.m_count > 1) {\r\n              const metric1 = cache.metric;\r\n              const metric2 = this.GetMetric();\r\n              if (metric2 < 0.5 * metric1 || 2 * metric1 < metric2 || metric2 < b2_epsilon) {\r\n                  // Reset the simplex.\r\n                  this.m_count = 0;\r\n              }\r\n          }\r\n          // If the cache is empty or invalid ...\r\n          if (this.m_count === 0) {\r\n              const v = vertices[0];\r\n              v.indexA = 0;\r\n              v.indexB = 0;\r\n              const wALocal = proxyA.GetVertex(0);\r\n              const wBLocal = proxyB.GetVertex(0);\r\n              b2Transform.MulXV(transformA, wALocal, v.wA);\r\n              b2Transform.MulXV(transformB, wBLocal, v.wB);\r\n              b2Vec2.SubVV(v.wB, v.wA, v.w);\r\n              v.a = 1;\r\n              this.m_count = 1;\r\n          }\r\n      }\r\n      WriteCache(cache) {\r\n          cache.metric = this.GetMetric();\r\n          cache.count = this.m_count;\r\n          const vertices = this.m_vertices;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              cache.indexA[i] = vertices[i].indexA;\r\n              cache.indexB[i] = vertices[i].indexB;\r\n          }\r\n      }\r\n      GetSearchDirection(out) {\r\n          switch (this.m_count) {\r\n              case 1:\r\n                  return b2Vec2.NegV(this.m_v1.w, out);\r\n              case 2: {\r\n                  const e12 = b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, out);\r\n                  const sgn = b2Vec2.CrossVV(e12, b2Vec2.NegV(this.m_v1.w, b2Vec2.s_t0));\r\n                  if (sgn > 0) {\r\n                      // Origin is left of e12.\r\n                      return b2Vec2.CrossOneV(e12, out);\r\n                  }\r\n                  else {\r\n                      // Origin is right of e12.\r\n                      return b2Vec2.CrossVOne(e12, out);\r\n                  }\r\n              }\r\n              default:\r\n                  // DEBUG: b2Assert(false);\r\n                  return out.SetZero();\r\n          }\r\n      }\r\n      GetClosestPoint(out) {\r\n          switch (this.m_count) {\r\n              case 0:\r\n                  // DEBUG: b2Assert(false);\r\n                  return out.SetZero();\r\n              case 1:\r\n                  return out.Copy(this.m_v1.w);\r\n              case 2:\r\n                  return out.Set(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);\r\n              case 3:\r\n                  return out.SetZero();\r\n              default:\r\n                  // DEBUG: b2Assert(false);\r\n                  return out.SetZero();\r\n          }\r\n      }\r\n      GetWitnessPoints(pA, pB) {\r\n          switch (this.m_count) {\r\n              case 0:\r\n                  // DEBUG: b2Assert(false);\r\n                  break;\r\n              case 1:\r\n                  pA.Copy(this.m_v1.wA);\r\n                  pB.Copy(this.m_v1.wB);\r\n                  break;\r\n              case 2:\r\n                  pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;\r\n                  pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;\r\n                  pB.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;\r\n                  pB.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;\r\n                  break;\r\n              case 3:\r\n                  pB.x = pA.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;\r\n                  pB.y = pA.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;\r\n                  break;\r\n              default:\r\n                  // DEBUG: b2Assert(false);\r\n                  break;\r\n          }\r\n      }\r\n      GetMetric() {\r\n          switch (this.m_count) {\r\n              case 0:\r\n                  // DEBUG: b2Assert(false);\r\n                  return 0;\r\n              case 1:\r\n                  return 0;\r\n              case 2:\r\n                  return b2Vec2.DistanceVV(this.m_v1.w, this.m_v2.w);\r\n              case 3:\r\n                  return b2Vec2.CrossVV(b2Vec2.SubVV(this.m_v2.w, this.m_v1.w, b2Vec2.s_t0), b2Vec2.SubVV(this.m_v3.w, this.m_v1.w, b2Vec2.s_t1));\r\n              default:\r\n                  // DEBUG: b2Assert(false);\r\n                  return 0;\r\n          }\r\n      }\r\n      Solve2() {\r\n          const w1 = this.m_v1.w;\r\n          const w2 = this.m_v2.w;\r\n          const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n          // w1 region\r\n          const d12_2 = (-b2Vec2.DotVV(w1, e12));\r\n          if (d12_2 <= 0) {\r\n              // a2 <= 0, so we clamp it to 0\r\n              this.m_v1.a = 1;\r\n              this.m_count = 1;\r\n              return;\r\n          }\r\n          // w2 region\r\n          const d12_1 = b2Vec2.DotVV(w2, e12);\r\n          if (d12_1 <= 0) {\r\n              // a1 <= 0, so we clamp it to 0\r\n              this.m_v2.a = 1;\r\n              this.m_count = 1;\r\n              this.m_v1.Copy(this.m_v2);\r\n              return;\r\n          }\r\n          // Must be in e12 region.\r\n          const inv_d12 = 1 / (d12_1 + d12_2);\r\n          this.m_v1.a = d12_1 * inv_d12;\r\n          this.m_v2.a = d12_2 * inv_d12;\r\n          this.m_count = 2;\r\n      }\r\n      Solve3() {\r\n          const w1 = this.m_v1.w;\r\n          const w2 = this.m_v2.w;\r\n          const w3 = this.m_v3.w;\r\n          // Edge12\r\n          // [1      1     ][a1] = [1]\r\n          // [w1.e12 w2.e12][a2] = [0]\r\n          // a3 = 0\r\n          const e12 = b2Vec2.SubVV(w2, w1, b2Simplex.s_e12);\r\n          const w1e12 = b2Vec2.DotVV(w1, e12);\r\n          const w2e12 = b2Vec2.DotVV(w2, e12);\r\n          const d12_1 = w2e12;\r\n          const d12_2 = (-w1e12);\r\n          // Edge13\r\n          // [1      1     ][a1] = [1]\r\n          // [w1.e13 w3.e13][a3] = [0]\r\n          // a2 = 0\r\n          const e13 = b2Vec2.SubVV(w3, w1, b2Simplex.s_e13);\r\n          const w1e13 = b2Vec2.DotVV(w1, e13);\r\n          const w3e13 = b2Vec2.DotVV(w3, e13);\r\n          const d13_1 = w3e13;\r\n          const d13_2 = (-w1e13);\r\n          // Edge23\r\n          // [1      1     ][a2] = [1]\r\n          // [w2.e23 w3.e23][a3] = [0]\r\n          // a1 = 0\r\n          const e23 = b2Vec2.SubVV(w3, w2, b2Simplex.s_e23);\r\n          const w2e23 = b2Vec2.DotVV(w2, e23);\r\n          const w3e23 = b2Vec2.DotVV(w3, e23);\r\n          const d23_1 = w3e23;\r\n          const d23_2 = (-w2e23);\r\n          // Triangle123\r\n          const n123 = b2Vec2.CrossVV(e12, e13);\r\n          const d123_1 = n123 * b2Vec2.CrossVV(w2, w3);\r\n          const d123_2 = n123 * b2Vec2.CrossVV(w3, w1);\r\n          const d123_3 = n123 * b2Vec2.CrossVV(w1, w2);\r\n          // w1 region\r\n          if (d12_2 <= 0 && d13_2 <= 0) {\r\n              this.m_v1.a = 1;\r\n              this.m_count = 1;\r\n              return;\r\n          }\r\n          // e12\r\n          if (d12_1 > 0 && d12_2 > 0 && d123_3 <= 0) {\r\n              const inv_d12 = 1 / (d12_1 + d12_2);\r\n              this.m_v1.a = d12_1 * inv_d12;\r\n              this.m_v2.a = d12_2 * inv_d12;\r\n              this.m_count = 2;\r\n              return;\r\n          }\r\n          // e13\r\n          if (d13_1 > 0 && d13_2 > 0 && d123_2 <= 0) {\r\n              const inv_d13 = 1 / (d13_1 + d13_2);\r\n              this.m_v1.a = d13_1 * inv_d13;\r\n              this.m_v3.a = d13_2 * inv_d13;\r\n              this.m_count = 2;\r\n              this.m_v2.Copy(this.m_v3);\r\n              return;\r\n          }\r\n          // w2 region\r\n          if (d12_1 <= 0 && d23_2 <= 0) {\r\n              this.m_v2.a = 1;\r\n              this.m_count = 1;\r\n              this.m_v1.Copy(this.m_v2);\r\n              return;\r\n          }\r\n          // w3 region\r\n          if (d13_1 <= 0 && d23_1 <= 0) {\r\n              this.m_v3.a = 1;\r\n              this.m_count = 1;\r\n              this.m_v1.Copy(this.m_v3);\r\n              return;\r\n          }\r\n          // e23\r\n          if (d23_1 > 0 && d23_2 > 0 && d123_1 <= 0) {\r\n              const inv_d23 = 1 / (d23_1 + d23_2);\r\n              this.m_v2.a = d23_1 * inv_d23;\r\n              this.m_v3.a = d23_2 * inv_d23;\r\n              this.m_count = 2;\r\n              this.m_v1.Copy(this.m_v3);\r\n              return;\r\n          }\r\n          // Must be in triangle123\r\n          const inv_d123 = 1 / (d123_1 + d123_2 + d123_3);\r\n          this.m_v1.a = d123_1 * inv_d123;\r\n          this.m_v2.a = d123_2 * inv_d123;\r\n          this.m_v3.a = d123_3 * inv_d123;\r\n          this.m_count = 3;\r\n      }\r\n  }\r\n  b2Simplex.s_e12 = new b2Vec2();\r\n  b2Simplex.s_e13 = new b2Vec2();\r\n  b2Simplex.s_e23 = new b2Vec2();\r\n  const b2Distance_s_simplex = new b2Simplex();\r\n  const b2Distance_s_saveA = [0, 0, 0];\r\n  const b2Distance_s_saveB = [0, 0, 0];\r\n  const b2Distance_s_p = new b2Vec2();\r\n  const b2Distance_s_d = new b2Vec2();\r\n  const b2Distance_s_normal = new b2Vec2();\r\n  const b2Distance_s_supportA = new b2Vec2();\r\n  const b2Distance_s_supportB = new b2Vec2();\r\n  function b2Distance(output, cache, input) {\r\n      ++exports.b2_gjkCalls;\r\n      const proxyA = input.proxyA;\r\n      const proxyB = input.proxyB;\r\n      const transformA = input.transformA;\r\n      const transformB = input.transformB;\r\n      // Initialize the simplex.\r\n      const simplex = b2Distance_s_simplex;\r\n      simplex.ReadCache(cache, proxyA, transformA, proxyB, transformB);\r\n      // Get simplex vertices as an array.\r\n      const vertices = simplex.m_vertices;\r\n      const k_maxIters = 20;\r\n      // These store the vertices of the last simplex so that we\r\n      // can check for duplicates and prevent cycling.\r\n      const saveA = b2Distance_s_saveA;\r\n      const saveB = b2Distance_s_saveB;\r\n      let saveCount = 0;\r\n      // Main iteration loop.\r\n      let iter = 0;\r\n      while (iter < k_maxIters) {\r\n          // Copy simplex so we can identify duplicates.\r\n          saveCount = simplex.m_count;\r\n          for (let i = 0; i < saveCount; ++i) {\r\n              saveA[i] = vertices[i].indexA;\r\n              saveB[i] = vertices[i].indexB;\r\n          }\r\n          switch (simplex.m_count) {\r\n              case 1:\r\n                  break;\r\n              case 2:\r\n                  simplex.Solve2();\r\n                  break;\r\n              case 3:\r\n                  simplex.Solve3();\r\n                  break;\r\n              default:\r\n                  // DEBUG: b2Assert(false);\r\n                  break;\r\n          }\r\n          // If we have 3 points, then the origin is in the corresponding triangle.\r\n          if (simplex.m_count === 3) {\r\n              break;\r\n          }\r\n          // Get search direction.\r\n          const d = simplex.GetSearchDirection(b2Distance_s_d);\r\n          // Ensure the search direction is numerically fit.\r\n          if (d.LengthSquared() < b2_epsilon_sq) {\r\n              // The origin is probably contained by a line segment\r\n              // or triangle. Thus the shapes are overlapped.\r\n              // We can't return zero here even though there may be overlap.\r\n              // In case the simplex is a point, segment, or triangle it is difficult\r\n              // to determine if the origin is contained in the CSO or very close to it.\r\n              break;\r\n          }\r\n          // Compute a tentative new simplex vertex using support points.\r\n          const vertex = vertices[simplex.m_count];\r\n          vertex.indexA = proxyA.GetSupport(b2Rot.MulTRV(transformA.q, b2Vec2.NegV(d, b2Vec2.s_t0), b2Distance_s_supportA));\r\n          b2Transform.MulXV(transformA, proxyA.GetVertex(vertex.indexA), vertex.wA);\r\n          vertex.indexB = proxyB.GetSupport(b2Rot.MulTRV(transformB.q, d, b2Distance_s_supportB));\r\n          b2Transform.MulXV(transformB, proxyB.GetVertex(vertex.indexB), vertex.wB);\r\n          b2Vec2.SubVV(vertex.wB, vertex.wA, vertex.w);\r\n          // Iteration count is equated to the number of support point calls.\r\n          ++iter;\r\n          ++exports.b2_gjkIters;\r\n          // Check for duplicate support points. This is the main termination criteria.\r\n          let duplicate = false;\r\n          for (let i = 0; i < saveCount; ++i) {\r\n              if (vertex.indexA === saveA[i] && vertex.indexB === saveB[i]) {\r\n                  duplicate = true;\r\n                  break;\r\n              }\r\n          }\r\n          // If we found a duplicate support point we must exit to avoid cycling.\r\n          if (duplicate) {\r\n              break;\r\n          }\r\n          // New vertex is ok and needed.\r\n          ++simplex.m_count;\r\n      }\r\n      exports.b2_gjkMaxIters = b2Max(exports.b2_gjkMaxIters, iter);\r\n      // Prepare output.\r\n      simplex.GetWitnessPoints(output.pointA, output.pointB);\r\n      output.distance = b2Vec2.DistanceVV(output.pointA, output.pointB);\r\n      output.iterations = iter;\r\n      // Cache the simplex.\r\n      simplex.WriteCache(cache);\r\n      // Apply radii if requested.\r\n      if (input.useRadii) {\r\n          const rA = proxyA.m_radius;\r\n          const rB = proxyB.m_radius;\r\n          if (output.distance > (rA + rB) && output.distance > b2_epsilon) {\r\n              // Shapes are still no overlapped.\r\n              // Move the witness points to the outer surface.\r\n              output.distance -= rA + rB;\r\n              const normal = b2Vec2.SubVV(output.pointB, output.pointA, b2Distance_s_normal);\r\n              normal.Normalize();\r\n              output.pointA.SelfMulAdd(rA, normal);\r\n              output.pointB.SelfMulSub(rB, normal);\r\n          }\r\n          else {\r\n              // Shapes are overlapped when radii are considered.\r\n              // Move the witness points to the middle.\r\n              const p = b2Vec2.MidVV(output.pointA, output.pointB, b2Distance_s_p);\r\n              output.pointA.Copy(p);\r\n              output.pointB.Copy(p);\r\n              output.distance = 0;\r\n          }\r\n      }\r\n  }\r\n  /// Perform a linear shape cast of shape B moving and shape A fixed. Determines the hit point, normal, and translation fraction.\r\n  // GJK-raycast\r\n  // Algorithm by Gino van den Bergen.\r\n  // \"Smooth Mesh Contacts with GJK\" in Game Physics Pearls. 2010\r\n  // bool b2ShapeCast(b2ShapeCastOutput* output, const b2ShapeCastInput* input);\r\n  const b2ShapeCast_s_n = new b2Vec2();\r\n  const b2ShapeCast_s_simplex = new b2Simplex();\r\n  const b2ShapeCast_s_wA = new b2Vec2();\r\n  const b2ShapeCast_s_wB = new b2Vec2();\r\n  const b2ShapeCast_s_v = new b2Vec2();\r\n  const b2ShapeCast_s_p = new b2Vec2();\r\n  const b2ShapeCast_s_pointA = new b2Vec2();\r\n  const b2ShapeCast_s_pointB = new b2Vec2();\r\n  function b2ShapeCast(output, input) {\r\n      output.iterations = 0;\r\n      output.lambda = 1.0;\r\n      output.normal.SetZero();\r\n      output.point.SetZero();\r\n      // const b2DistanceProxy* proxyA = &input.proxyA;\r\n      const proxyA = input.proxyA;\r\n      // const b2DistanceProxy* proxyB = &input.proxyB;\r\n      const proxyB = input.proxyB;\r\n      // float32 radiusA = b2Max(proxyA.m_radius, b2_polygonRadius);\r\n      const radiusA = b2Max(proxyA.m_radius, b2_polygonRadius);\r\n      // float32 radiusB = b2Max(proxyB.m_radius, b2_polygonRadius);\r\n      const radiusB = b2Max(proxyB.m_radius, b2_polygonRadius);\r\n      // float32 radius = radiusA + radiusB;\r\n      const radius = radiusA + radiusB;\r\n      // b2Transform xfA = input.transformA;\r\n      const xfA = input.transformA;\r\n      // b2Transform xfB = input.transformB;\r\n      const xfB = input.transformB;\r\n      // b2Vec2 r = input.translationB;\r\n      const r = input.translationB;\r\n      // b2Vec2 n(0.0f, 0.0f);\r\n      const n = b2ShapeCast_s_n.Set(0.0, 0.0);\r\n      // float32 lambda = 0.0f;\r\n      let lambda = 0.0;\r\n      // Initial simplex\r\n      const simplex = b2ShapeCast_s_simplex;\r\n      simplex.m_count = 0;\r\n      // Get simplex vertices as an array.\r\n      // b2SimplexVertex* vertices = &simplex.m_v1;\r\n      const vertices = simplex.m_vertices;\r\n      // Get support point in -r direction\r\n      // int32 indexA = proxyA.GetSupport(b2MulT(xfA.q, -r));\r\n      let indexA = proxyA.GetSupport(b2Rot.MulTRV(xfA.q, b2Vec2.NegV(r, b2Vec2.s_t1), b2Vec2.s_t0));\r\n      // b2Vec2 wA = b2Mul(xfA, proxyA.GetVertex(indexA));\r\n      let wA = b2Transform.MulXV(xfA, proxyA.GetVertex(indexA), b2ShapeCast_s_wA);\r\n      // int32 indexB = proxyB.GetSupport(b2MulT(xfB.q, r));\r\n      let indexB = proxyB.GetSupport(b2Rot.MulTRV(xfB.q, r, b2Vec2.s_t0));\r\n      // b2Vec2 wB = b2Mul(xfB, proxyB.GetVertex(indexB));\r\n      let wB = b2Transform.MulXV(xfB, proxyB.GetVertex(indexB), b2ShapeCast_s_wB);\r\n      // b2Vec2 v = wA - wB;\r\n      const v = b2Vec2.SubVV(wA, wB, b2ShapeCast_s_v);\r\n      // Sigma is the target distance between polygons\r\n      // float32 sigma = b2Max(b2_polygonRadius, radius - b2_polygonRadius);\r\n      const sigma = b2Max(b2_polygonRadius, radius - b2_polygonRadius);\r\n      // const float32 tolerance = 0.5f * b2_linearSlop;\r\n      const tolerance = 0.5 * b2_linearSlop;\r\n      // Main iteration loop.\r\n      // const int32 k_maxIters = 20;\r\n      const k_maxIters = 20;\r\n      // int32 iter = 0;\r\n      let iter = 0;\r\n      // while (iter < k_maxIters && b2Abs(v.Length() - sigma) > tolerance)\r\n      while (iter < k_maxIters && b2Abs(v.Length() - sigma) > tolerance) {\r\n          // DEBUG: b2Assert(simplex.m_count < 3);\r\n          output.iterations += 1;\r\n          // Support in direction -v (A - B)\r\n          // indexA = proxyA.GetSupport(b2MulT(xfA.q, -v));\r\n          indexA = proxyA.GetSupport(b2Rot.MulTRV(xfA.q, b2Vec2.NegV(v, b2Vec2.s_t1), b2Vec2.s_t0));\r\n          // wA = b2Mul(xfA, proxyA.GetVertex(indexA));\r\n          wA = b2Transform.MulXV(xfA, proxyA.GetVertex(indexA), b2ShapeCast_s_wA);\r\n          // indexB = proxyB.GetSupport(b2MulT(xfB.q, v));\r\n          indexB = proxyB.GetSupport(b2Rot.MulTRV(xfB.q, v, b2Vec2.s_t0));\r\n          // wB = b2Mul(xfB, proxyB.GetVertex(indexB));\r\n          wB = b2Transform.MulXV(xfB, proxyB.GetVertex(indexB), b2ShapeCast_s_wB);\r\n          // b2Vec2 p = wA - wB;\r\n          const p = b2Vec2.SubVV(wA, wB, b2ShapeCast_s_p);\r\n          // -v is a normal at p\r\n          v.Normalize();\r\n          // Intersect ray with plane\r\n          const vp = b2Vec2.DotVV(v, p);\r\n          const vr = b2Vec2.DotVV(v, r);\r\n          if (vp - sigma > lambda * vr) {\r\n              if (vr <= 0.0) {\r\n                  return false;\r\n              }\r\n              lambda = (vp - sigma) / vr;\r\n              if (lambda > 1.0) {\r\n                  return false;\r\n              }\r\n              // n = -v;\r\n              n.Copy(v).SelfNeg();\r\n              simplex.m_count = 0;\r\n          }\r\n          // Reverse simplex since it works with B - A.\r\n          // Shift by lambda * r because we want the closest point to the current clip point.\r\n          // Note that the support point p is not shifted because we want the plane equation\r\n          // to be formed in unshifted space.\r\n          // b2SimplexVertex* vertex = vertices + simplex.m_count;\r\n          const vertex = vertices[simplex.m_count];\r\n          vertex.indexA = indexB;\r\n          // vertex.wA = wB + lambda * r;\r\n          vertex.wA.Copy(wB).SelfMulAdd(lambda, r);\r\n          vertex.indexB = indexA;\r\n          // vertex.wB = wA;\r\n          vertex.wB.Copy(wA);\r\n          // vertex.w = vertex.wB - vertex.wA;\r\n          vertex.w.Copy(vertex.wB).SelfSub(vertex.wA);\r\n          vertex.a = 1.0;\r\n          simplex.m_count += 1;\r\n          switch (simplex.m_count) {\r\n              case 1:\r\n                  break;\r\n              case 2:\r\n                  simplex.Solve2();\r\n                  break;\r\n              case 3:\r\n                  simplex.Solve3();\r\n                  break;\r\n              default:\r\n              // DEBUG: b2Assert(false);\r\n          }\r\n          // If we have 3 points, then the origin is in the corresponding triangle.\r\n          if (simplex.m_count === 3) {\r\n              // Overlap\r\n              return false;\r\n          }\r\n          // Get search direction.\r\n          // v = simplex.GetClosestPoint();\r\n          simplex.GetClosestPoint(v);\r\n          // Iteration count is equated to the number of support point calls.\r\n          ++iter;\r\n      }\r\n      // Prepare output.\r\n      const pointA = b2ShapeCast_s_pointA;\r\n      const pointB = b2ShapeCast_s_pointB;\r\n      simplex.GetWitnessPoints(pointA, pointB);\r\n      if (v.LengthSquared() > 0.0) {\r\n          // n = -v;\r\n          n.Copy(v).SelfNeg();\r\n          n.Normalize();\r\n      }\r\n      // output.point = pointA + radiusA * n;\r\n      output.normal.Copy(n);\r\n      output.lambda = lambda;\r\n      output.iterations = iter;\r\n      return true;\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  (function (b2ContactFeatureType) {\r\n      b2ContactFeatureType[b2ContactFeatureType[\"e_vertex\"] = 0] = \"e_vertex\";\r\n      b2ContactFeatureType[b2ContactFeatureType[\"e_face\"] = 1] = \"e_face\";\r\n  })(exports.b2ContactFeatureType || (exports.b2ContactFeatureType = {}));\r\n  /// The features that intersect to form the contact point\r\n  /// This must be 4 bytes or less.\r\n  class b2ContactFeature {\r\n      constructor() {\r\n          this._key = 0;\r\n          this._key_invalid = false;\r\n          this._indexA = 0;\r\n          this._indexB = 0;\r\n          this._typeA = 0;\r\n          this._typeB = 0;\r\n      }\r\n      get key() {\r\n          if (this._key_invalid) {\r\n              this._key_invalid = false;\r\n              this._key = this._indexA | (this._indexB << 8) | (this._typeA << 16) | (this._typeB << 24);\r\n          }\r\n          return this._key;\r\n      }\r\n      set key(value) {\r\n          this._key = value;\r\n          this._key_invalid = false;\r\n          this._indexA = this._key & 0xff;\r\n          this._indexB = (this._key >> 8) & 0xff;\r\n          this._typeA = (this._key >> 16) & 0xff;\r\n          this._typeB = (this._key >> 24) & 0xff;\r\n      }\r\n      get indexA() {\r\n          return this._indexA;\r\n      }\r\n      set indexA(value) {\r\n          this._indexA = value;\r\n          this._key_invalid = true;\r\n      }\r\n      get indexB() {\r\n          return this._indexB;\r\n      }\r\n      set indexB(value) {\r\n          this._indexB = value;\r\n          this._key_invalid = true;\r\n      }\r\n      get typeA() {\r\n          return this._typeA;\r\n      }\r\n      set typeA(value) {\r\n          this._typeA = value;\r\n          this._key_invalid = true;\r\n      }\r\n      get typeB() {\r\n          return this._typeB;\r\n      }\r\n      set typeB(value) {\r\n          this._typeB = value;\r\n          this._key_invalid = true;\r\n      }\r\n  }\r\n  /// Contact ids to facilitate warm starting.\r\n  class b2ContactID {\r\n      constructor() {\r\n          this.cf = new b2ContactFeature();\r\n      }\r\n      Copy(o) {\r\n          this.key = o.key;\r\n          return this;\r\n      }\r\n      Clone() {\r\n          return new b2ContactID().Copy(this);\r\n      }\r\n      get key() {\r\n          return this.cf.key;\r\n      }\r\n      set key(value) {\r\n          this.cf.key = value;\r\n      }\r\n  }\r\n  /// A manifold point is a contact point belonging to a contact\r\n  /// manifold. It holds details related to the geometry and dynamics\r\n  /// of the contact points.\r\n  /// The local point usage depends on the manifold type:\r\n  /// -e_circles: the local center of circleB\r\n  /// -e_faceA: the local center of cirlceB or the clip point of polygonB\r\n  /// -e_faceB: the clip point of polygonA\r\n  /// This structure is stored across time steps, so we keep it small.\r\n  /// Note: the impulses are used for internal caching and may not\r\n  /// provide reliable contact forces, especially for high speed collisions.\r\n  class b2ManifoldPoint {\r\n      constructor() {\r\n          this.localPoint = new b2Vec2(); ///< usage depends on manifold type\r\n          this.normalImpulse = 0; ///< the non-penetration impulse\r\n          this.tangentImpulse = 0; ///< the friction impulse\r\n          this.id = new b2ContactID(); // TODO: readonly  ///< uniquely identifies a contact point between two shapes\r\n      }\r\n      static MakeArray(length) {\r\n          return b2MakeArray(length, (i) => new b2ManifoldPoint());\r\n      }\r\n      Reset() {\r\n          this.localPoint.SetZero();\r\n          this.normalImpulse = 0;\r\n          this.tangentImpulse = 0;\r\n          this.id.key = 0;\r\n      }\r\n      Copy(o) {\r\n          this.localPoint.Copy(o.localPoint);\r\n          this.normalImpulse = o.normalImpulse;\r\n          this.tangentImpulse = o.tangentImpulse;\r\n          this.id.Copy(o.id);\r\n          return this;\r\n      }\r\n  }\r\n  (function (b2ManifoldType) {\r\n      b2ManifoldType[b2ManifoldType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n      b2ManifoldType[b2ManifoldType[\"e_circles\"] = 0] = \"e_circles\";\r\n      b2ManifoldType[b2ManifoldType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n      b2ManifoldType[b2ManifoldType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n  })(exports.b2ManifoldType || (exports.b2ManifoldType = {}));\r\n  /// A manifold for two touching convex shapes.\r\n  /// Box2D supports multiple types of contact:\r\n  /// - clip point versus plane with radius\r\n  /// - point versus point with radius (circles)\r\n  /// The local point usage depends on the manifold type:\r\n  /// -e_circles: the local center of circleA\r\n  /// -e_faceA: the center of faceA\r\n  /// -e_faceB: the center of faceB\r\n  /// Similarly the local normal usage:\r\n  /// -e_circles: not used\r\n  /// -e_faceA: the normal on polygonA\r\n  /// -e_faceB: the normal on polygonB\r\n  /// We store contacts in this way so that position correction can\r\n  /// account for movement, which is critical for continuous physics.\r\n  /// All contact scenarios must be expressed in one of these types.\r\n  /// This structure is stored across time steps, so we keep it small.\r\n  class b2Manifold {\r\n      constructor() {\r\n          this.points = b2ManifoldPoint.MakeArray(b2_maxManifoldPoints);\r\n          this.localNormal = new b2Vec2();\r\n          this.localPoint = new b2Vec2();\r\n          this.type = exports.b2ManifoldType.e_unknown;\r\n          this.pointCount = 0;\r\n      }\r\n      Reset() {\r\n          for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n              // DEBUG: b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n              this.points[i].Reset();\r\n          }\r\n          this.localNormal.SetZero();\r\n          this.localPoint.SetZero();\r\n          this.type = exports.b2ManifoldType.e_unknown;\r\n          this.pointCount = 0;\r\n      }\r\n      Copy(o) {\r\n          this.pointCount = o.pointCount;\r\n          for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n              // DEBUG: b2Assert(this.points[i] instanceof b2ManifoldPoint);\r\n              this.points[i].Copy(o.points[i]);\r\n          }\r\n          this.localNormal.Copy(o.localNormal);\r\n          this.localPoint.Copy(o.localPoint);\r\n          this.type = o.type;\r\n          return this;\r\n      }\r\n      Clone() {\r\n          return new b2Manifold().Copy(this);\r\n      }\r\n  }\r\n  class b2WorldManifold {\r\n      constructor() {\r\n          this.normal = new b2Vec2();\r\n          this.points = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n          this.separations = b2MakeNumberArray(b2_maxManifoldPoints);\r\n      }\r\n      Initialize(manifold, xfA, radiusA, xfB, radiusB) {\r\n          if (manifold.pointCount === 0) {\r\n              return;\r\n          }\r\n          switch (manifold.type) {\r\n              case exports.b2ManifoldType.e_circles: {\r\n                  this.normal.Set(1, 0);\r\n                  const pointA = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_pointA);\r\n                  const pointB = b2Transform.MulXV(xfB, manifold.points[0].localPoint, b2WorldManifold.Initialize_s_pointB);\r\n                  if (b2Vec2.DistanceSquaredVV(pointA, pointB) > b2_epsilon_sq) {\r\n                      b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                  }\r\n                  const cA = b2Vec2.AddVMulSV(pointA, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                  const cB = b2Vec2.SubVMulSV(pointB, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                  b2Vec2.MidVV(cA, cB, this.points[0]);\r\n                  this.separations[0] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                  break;\r\n              }\r\n              case exports.b2ManifoldType.e_faceA: {\r\n                  b2Rot.MulRV(xfA.q, manifold.localNormal, this.normal);\r\n                  const planePoint = b2Transform.MulXV(xfA, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                  for (let i = 0; i < manifold.pointCount; ++i) {\r\n                      const clipPoint = b2Transform.MulXV(xfB, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                      const s = radiusA - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                      const cA = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                      const cB = b2Vec2.SubVMulSV(clipPoint, radiusB, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                      b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                      this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), this.normal); // b2Dot(cB - cA, normal);\r\n                  }\r\n                  break;\r\n              }\r\n              case exports.b2ManifoldType.e_faceB: {\r\n                  b2Rot.MulRV(xfB.q, manifold.localNormal, this.normal);\r\n                  const planePoint = b2Transform.MulXV(xfB, manifold.localPoint, b2WorldManifold.Initialize_s_planePoint);\r\n                  for (let i = 0; i < manifold.pointCount; ++i) {\r\n                      const clipPoint = b2Transform.MulXV(xfA, manifold.points[i].localPoint, b2WorldManifold.Initialize_s_clipPoint);\r\n                      const s = radiusB - b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal);\r\n                      const cB = b2Vec2.AddVMulSV(clipPoint, s, this.normal, b2WorldManifold.Initialize_s_cB);\r\n                      const cA = b2Vec2.SubVMulSV(clipPoint, radiusA, this.normal, b2WorldManifold.Initialize_s_cA);\r\n                      b2Vec2.MidVV(cA, cB, this.points[i]);\r\n                      this.separations[i] = b2Vec2.DotVV(b2Vec2.SubVV(cA, cB, b2Vec2.s_t0), this.normal); // b2Dot(cA - cB, normal);\r\n                  }\r\n                  // Ensure normal points from A to B.\r\n                  this.normal.SelfNeg();\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n  }\r\n  b2WorldManifold.Initialize_s_pointA = new b2Vec2();\r\n  b2WorldManifold.Initialize_s_pointB = new b2Vec2();\r\n  b2WorldManifold.Initialize_s_cA = new b2Vec2();\r\n  b2WorldManifold.Initialize_s_cB = new b2Vec2();\r\n  b2WorldManifold.Initialize_s_planePoint = new b2Vec2();\r\n  b2WorldManifold.Initialize_s_clipPoint = new b2Vec2();\r\n  (function (b2PointState) {\r\n      b2PointState[b2PointState[\"b2_nullState\"] = 0] = \"b2_nullState\";\r\n      b2PointState[b2PointState[\"b2_addState\"] = 1] = \"b2_addState\";\r\n      b2PointState[b2PointState[\"b2_persistState\"] = 2] = \"b2_persistState\";\r\n      b2PointState[b2PointState[\"b2_removeState\"] = 3] = \"b2_removeState\";\r\n  })(exports.b2PointState || (exports.b2PointState = {}));\r\n  /// Compute the point states given two manifolds. The states pertain to the transition from manifold1\r\n  /// to manifold2. So state1 is either persist or remove while state2 is either add or persist.\r\n  function b2GetPointStates(state1, state2, manifold1, manifold2) {\r\n      // Detect persists and removes.\r\n      let i;\r\n      for (i = 0; i < manifold1.pointCount; ++i) {\r\n          const id = manifold1.points[i].id;\r\n          const key = id.key;\r\n          state1[i] = exports.b2PointState.b2_removeState;\r\n          for (let j = 0, jct = manifold2.pointCount; j < jct; ++j) {\r\n              if (manifold2.points[j].id.key === key) {\r\n                  state1[i] = exports.b2PointState.b2_persistState;\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n      for (; i < b2_maxManifoldPoints; ++i) {\r\n          state1[i] = exports.b2PointState.b2_nullState;\r\n      }\r\n      // Detect persists and adds.\r\n      for (i = 0; i < manifold2.pointCount; ++i) {\r\n          const id = manifold2.points[i].id;\r\n          const key = id.key;\r\n          state2[i] = exports.b2PointState.b2_addState;\r\n          for (let j = 0, jct = manifold1.pointCount; j < jct; ++j) {\r\n              if (manifold1.points[j].id.key === key) {\r\n                  state2[i] = exports.b2PointState.b2_persistState;\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n      for (; i < b2_maxManifoldPoints; ++i) {\r\n          state2[i] = exports.b2PointState.b2_nullState;\r\n      }\r\n  }\r\n  /// Used for computing contact manifolds.\r\n  class b2ClipVertex {\r\n      constructor() {\r\n          this.v = new b2Vec2();\r\n          this.id = new b2ContactID();\r\n      }\r\n      static MakeArray(length) {\r\n          return b2MakeArray(length, (i) => new b2ClipVertex());\r\n      }\r\n      Copy(other) {\r\n          this.v.Copy(other.v);\r\n          this.id.Copy(other.id);\r\n          return this;\r\n      }\r\n  }\r\n  /// Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\n  class b2RayCastInput {\r\n      constructor() {\r\n          this.p1 = new b2Vec2();\r\n          this.p2 = new b2Vec2();\r\n          this.maxFraction = 1;\r\n      }\r\n      Copy(o) {\r\n          this.p1.Copy(o.p1);\r\n          this.p2.Copy(o.p2);\r\n          this.maxFraction = o.maxFraction;\r\n          return this;\r\n      }\r\n  }\r\n  /// Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and p2\r\n  /// come from b2RayCastInput.\r\n  class b2RayCastOutput {\r\n      constructor() {\r\n          this.normal = new b2Vec2();\r\n          this.fraction = 0;\r\n      }\r\n      Copy(o) {\r\n          this.normal.Copy(o.normal);\r\n          this.fraction = o.fraction;\r\n          return this;\r\n      }\r\n  }\r\n  /// An axis aligned bounding box.\r\n  class b2AABB {\r\n      constructor() {\r\n          this.lowerBound = new b2Vec2(); ///< the lower vertex\r\n          this.upperBound = new b2Vec2(); ///< the upper vertex\r\n          this.m_cache_center = new b2Vec2(); // access using GetCenter()\r\n          this.m_cache_extent = new b2Vec2(); // access using GetExtents()\r\n      }\r\n      Copy(o) {\r\n          this.lowerBound.Copy(o.lowerBound);\r\n          this.upperBound.Copy(o.upperBound);\r\n          return this;\r\n      }\r\n      /// Verify that the bounds are sorted.\r\n      IsValid() {\r\n          const d_x = this.upperBound.x - this.lowerBound.x;\r\n          const d_y = this.upperBound.y - this.lowerBound.y;\r\n          let valid = d_x >= 0 && d_y >= 0;\r\n          valid = valid && this.lowerBound.IsValid() && this.upperBound.IsValid();\r\n          return valid;\r\n      }\r\n      /// Get the center of the AABB.\r\n      GetCenter() {\r\n          return b2Vec2.MidVV(this.lowerBound, this.upperBound, this.m_cache_center);\r\n      }\r\n      /// Get the extents of the AABB (half-widths).\r\n      GetExtents() {\r\n          return b2Vec2.ExtVV(this.lowerBound, this.upperBound, this.m_cache_extent);\r\n      }\r\n      /// Get the perimeter length\r\n      GetPerimeter() {\r\n          const wx = this.upperBound.x - this.lowerBound.x;\r\n          const wy = this.upperBound.y - this.lowerBound.y;\r\n          return 2 * (wx + wy);\r\n      }\r\n      /// Combine an AABB into this one.\r\n      Combine1(aabb) {\r\n          this.lowerBound.x = b2Min(this.lowerBound.x, aabb.lowerBound.x);\r\n          this.lowerBound.y = b2Min(this.lowerBound.y, aabb.lowerBound.y);\r\n          this.upperBound.x = b2Max(this.upperBound.x, aabb.upperBound.x);\r\n          this.upperBound.y = b2Max(this.upperBound.y, aabb.upperBound.y);\r\n          return this;\r\n      }\r\n      /// Combine two AABBs into this one.\r\n      Combine2(aabb1, aabb2) {\r\n          this.lowerBound.x = b2Min(aabb1.lowerBound.x, aabb2.lowerBound.x);\r\n          this.lowerBound.y = b2Min(aabb1.lowerBound.y, aabb2.lowerBound.y);\r\n          this.upperBound.x = b2Max(aabb1.upperBound.x, aabb2.upperBound.x);\r\n          this.upperBound.y = b2Max(aabb1.upperBound.y, aabb2.upperBound.y);\r\n          return this;\r\n      }\r\n      static Combine(aabb1, aabb2, out) {\r\n          out.Combine2(aabb1, aabb2);\r\n          return out;\r\n      }\r\n      /// Does this aabb contain the provided AABB.\r\n      Contains(aabb) {\r\n          let result = true;\r\n          result = result && this.lowerBound.x <= aabb.lowerBound.x;\r\n          result = result && this.lowerBound.y <= aabb.lowerBound.y;\r\n          result = result && aabb.upperBound.x <= this.upperBound.x;\r\n          result = result && aabb.upperBound.y <= this.upperBound.y;\r\n          return result;\r\n      }\r\n      // From Real-time Collision Detection, p179.\r\n      RayCast(output, input) {\r\n          let tmin = (-b2_maxFloat);\r\n          let tmax = b2_maxFloat;\r\n          const p_x = input.p1.x;\r\n          const p_y = input.p1.y;\r\n          const d_x = input.p2.x - input.p1.x;\r\n          const d_y = input.p2.y - input.p1.y;\r\n          const absD_x = b2Abs(d_x);\r\n          const absD_y = b2Abs(d_y);\r\n          const normal = output.normal;\r\n          if (absD_x < b2_epsilon) {\r\n              // Parallel.\r\n              if (p_x < this.lowerBound.x || this.upperBound.x < p_x) {\r\n                  return false;\r\n              }\r\n          }\r\n          else {\r\n              const inv_d = 1 / d_x;\r\n              let t1 = (this.lowerBound.x - p_x) * inv_d;\r\n              let t2 = (this.upperBound.x - p_x) * inv_d;\r\n              // Sign of the normal vector.\r\n              let s = (-1);\r\n              if (t1 > t2) {\r\n                  const t3 = t1;\r\n                  t1 = t2;\r\n                  t2 = t3;\r\n                  s = 1;\r\n              }\r\n              // Push the min up\r\n              if (t1 > tmin) {\r\n                  normal.x = s;\r\n                  normal.y = 0;\r\n                  tmin = t1;\r\n              }\r\n              // Pull the max down\r\n              tmax = b2Min(tmax, t2);\r\n              if (tmin > tmax) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (absD_y < b2_epsilon) {\r\n              // Parallel.\r\n              if (p_y < this.lowerBound.y || this.upperBound.y < p_y) {\r\n                  return false;\r\n              }\r\n          }\r\n          else {\r\n              const inv_d = 1 / d_y;\r\n              let t1 = (this.lowerBound.y - p_y) * inv_d;\r\n              let t2 = (this.upperBound.y - p_y) * inv_d;\r\n              // Sign of the normal vector.\r\n              let s = (-1);\r\n              if (t1 > t2) {\r\n                  const t3 = t1;\r\n                  t1 = t2;\r\n                  t2 = t3;\r\n                  s = 1;\r\n              }\r\n              // Push the min up\r\n              if (t1 > tmin) {\r\n                  normal.x = 0;\r\n                  normal.y = s;\r\n                  tmin = t1;\r\n              }\r\n              // Pull the max down\r\n              tmax = b2Min(tmax, t2);\r\n              if (tmin > tmax) {\r\n                  return false;\r\n              }\r\n          }\r\n          // Does the ray start inside the box?\r\n          // Does the ray intersect beyond the max fraction?\r\n          if (tmin < 0 || input.maxFraction < tmin) {\r\n              return false;\r\n          }\r\n          // Intersection.\r\n          output.fraction = tmin;\r\n          return true;\r\n      }\r\n      TestContain(point) {\r\n          if (point.x < this.lowerBound.x || this.upperBound.x < point.x) {\r\n              return false;\r\n          }\r\n          if (point.y < this.lowerBound.y || this.upperBound.y < point.y) {\r\n              return false;\r\n          }\r\n          return true;\r\n      }\r\n      TestOverlap(other) {\r\n          const d1_x = other.lowerBound.x - this.upperBound.x;\r\n          const d1_y = other.lowerBound.y - this.upperBound.y;\r\n          const d2_x = this.lowerBound.x - other.upperBound.x;\r\n          const d2_y = this.lowerBound.y - other.upperBound.y;\r\n          if (d1_x > 0 || d1_y > 0) {\r\n              return false;\r\n          }\r\n          if (d2_x > 0 || d2_y > 0) {\r\n              return false;\r\n          }\r\n          return true;\r\n      }\r\n  }\r\n  function b2TestOverlapAABB(a, b) {\r\n      const d1_x = b.lowerBound.x - a.upperBound.x;\r\n      const d1_y = b.lowerBound.y - a.upperBound.y;\r\n      const d2_x = a.lowerBound.x - b.upperBound.x;\r\n      const d2_y = a.lowerBound.y - b.upperBound.y;\r\n      if (d1_x > 0 || d1_y > 0) {\r\n          return false;\r\n      }\r\n      if (d2_x > 0 || d2_y > 0) {\r\n          return false;\r\n      }\r\n      return true;\r\n  }\r\n  /// Clipping for contact manifolds.\r\n  function b2ClipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\r\n      // Start with no output points\r\n      let numOut = 0;\r\n      const vIn0 = vIn[0];\r\n      const vIn1 = vIn[1];\r\n      // Calculate the distance of end points to the line\r\n      const distance0 = b2Vec2.DotVV(normal, vIn0.v) - offset;\r\n      const distance1 = b2Vec2.DotVV(normal, vIn1.v) - offset;\r\n      // If the points are behind the plane\r\n      if (distance0 <= 0) {\r\n          vOut[numOut++].Copy(vIn0);\r\n      }\r\n      if (distance1 <= 0) {\r\n          vOut[numOut++].Copy(vIn1);\r\n      }\r\n      // If the points are on different sides of the plane\r\n      if (distance0 * distance1 < 0) {\r\n          // Find intersection point of edge and plane\r\n          const interp = distance0 / (distance0 - distance1);\r\n          const v = vOut[numOut].v;\r\n          v.x = vIn0.v.x + interp * (vIn1.v.x - vIn0.v.x);\r\n          v.y = vIn0.v.y + interp * (vIn1.v.y - vIn0.v.y);\r\n          // VertexA is hitting edgeB.\r\n          const id = vOut[numOut].id;\r\n          id.cf.indexA = vertexIndexA;\r\n          id.cf.indexB = vIn0.id.cf.indexB;\r\n          id.cf.typeA = exports.b2ContactFeatureType.e_vertex;\r\n          id.cf.typeB = exports.b2ContactFeatureType.e_face;\r\n          ++numOut;\r\n      }\r\n      return numOut;\r\n  }\r\n  /// Determine if two generic shapes overlap.\r\n  const b2TestOverlapShape_s_input = new b2DistanceInput();\r\n  const b2TestOverlapShape_s_simplexCache = new b2SimplexCache();\r\n  const b2TestOverlapShape_s_output = new b2DistanceOutput();\r\n  function b2TestOverlapShape(shapeA, indexA, shapeB, indexB, xfA, xfB) {\r\n      const input = b2TestOverlapShape_s_input.Reset();\r\n      input.proxyA.SetShape(shapeA, indexA);\r\n      input.proxyB.SetShape(shapeB, indexB);\r\n      input.transformA.Copy(xfA);\r\n      input.transformB.Copy(xfB);\r\n      input.useRadii = true;\r\n      const simplexCache = b2TestOverlapShape_s_simplexCache.Reset();\r\n      simplexCache.count = 0;\r\n      const output = b2TestOverlapShape_s_output.Reset();\r\n      b2Distance(output, simplexCache, input);\r\n      return output.distance < 10 * b2_epsilon;\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  function verify(value) {\r\n      if (value === null) {\r\n          throw new Error();\r\n      }\r\n      return value;\r\n  }\r\n  /// A node in the dynamic tree. The client does not interact with this directly.\r\n  class b2TreeNode {\r\n      constructor(id = 0) {\r\n          this.m_id = 0;\r\n          this.aabb = new b2AABB();\r\n          this.parent = null; // or next\r\n          this.child1 = null;\r\n          this.child2 = null;\r\n          this.height = 0; // leaf = 0, free node = -1\r\n          this.m_id = id;\r\n      }\r\n      IsLeaf() {\r\n          return this.child1 === null;\r\n      }\r\n  }\r\n  class b2DynamicTree {\r\n      constructor() {\r\n          this.m_root = null;\r\n          // b2TreeNode* public m_nodes;\r\n          // int32 public m_nodeCount;\r\n          // int32 public m_nodeCapacity;\r\n          this.m_freeList = null;\r\n          this.m_path = 0;\r\n          this.m_insertionCount = 0;\r\n          this.m_stack = new b2GrowableStack(256);\r\n      }\r\n      // public GetUserData(proxy: b2TreeNode<T>): any {\r\n      //   // DEBUG: b2Assert(proxy !== null);\r\n      //   return proxy.userData;\r\n      // }\r\n      // public GetFatAABB(proxy: b2TreeNode<T>): b2AABB {\r\n      //   // DEBUG: b2Assert(proxy !== null);\r\n      //   return proxy.aabb;\r\n      // }\r\n      Query(aabb, callback) {\r\n          if (this.m_root === null) {\r\n              return;\r\n          }\r\n          const stack = this.m_stack.Reset();\r\n          stack.Push(this.m_root);\r\n          while (stack.GetCount() > 0) {\r\n              const node = stack.Pop();\r\n              // if (node === null) {\r\n              //   continue;\r\n              // }\r\n              if (node.aabb.TestOverlap(aabb)) {\r\n                  if (node.IsLeaf()) {\r\n                      const proceed = callback(node);\r\n                      if (!proceed) {\r\n                          return;\r\n                      }\r\n                  }\r\n                  else {\r\n                      stack.Push(verify(node.child1));\r\n                      stack.Push(verify(node.child2));\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      QueryPoint(point, callback) {\r\n          if (this.m_root === null) {\r\n              return;\r\n          }\r\n          const stack = this.m_stack.Reset();\r\n          stack.Push(this.m_root);\r\n          while (stack.GetCount() > 0) {\r\n              const node = stack.Pop();\r\n              // if (node === null) {\r\n              //   continue;\r\n              // }\r\n              if (node.aabb.TestContain(point)) {\r\n                  if (node.IsLeaf()) {\r\n                      const proceed = callback(node);\r\n                      if (!proceed) {\r\n                          return;\r\n                      }\r\n                  }\r\n                  else {\r\n                      stack.Push(verify(node.child1));\r\n                      stack.Push(verify(node.child2));\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      RayCast(input, callback) {\r\n          if (this.m_root === null) {\r\n              return;\r\n          }\r\n          const p1 = input.p1;\r\n          const p2 = input.p2;\r\n          const r = b2Vec2.SubVV(p2, p1, b2DynamicTree.s_r);\r\n          // DEBUG: b2Assert(r.LengthSquared() > 0);\r\n          r.Normalize();\r\n          // v is perpendicular to the segment.\r\n          const v = b2Vec2.CrossOneV(r, b2DynamicTree.s_v);\r\n          const abs_v = b2Vec2.AbsV(v, b2DynamicTree.s_abs_v);\r\n          // Separating axis for segment (Gino, p80).\r\n          // |dot(v, p1 - c)| > dot(|v|, h)\r\n          let maxFraction = input.maxFraction;\r\n          // Build a bounding box for the segment.\r\n          const segmentAABB = b2DynamicTree.s_segmentAABB;\r\n          let t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n          let t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n          segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n          segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n          segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n          segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n          const stack = this.m_stack.Reset();\r\n          stack.Push(this.m_root);\r\n          while (stack.GetCount() > 0) {\r\n              const node = stack.Pop();\r\n              // if (node === null) {\r\n              //   continue;\r\n              // }\r\n              if (!b2TestOverlapAABB(node.aabb, segmentAABB)) {\r\n                  continue;\r\n              }\r\n              // Separating axis for segment (Gino, p80).\r\n              // |dot(v, p1 - c)| > dot(|v|, h)\r\n              const c = node.aabb.GetCenter();\r\n              const h = node.aabb.GetExtents();\r\n              const separation = b2Abs(b2Vec2.DotVV(v, b2Vec2.SubVV(p1, c, b2Vec2.s_t0))) - b2Vec2.DotVV(abs_v, h);\r\n              if (separation > 0) {\r\n                  continue;\r\n              }\r\n              if (node.IsLeaf()) {\r\n                  const subInput = b2DynamicTree.s_subInput;\r\n                  subInput.p1.Copy(input.p1);\r\n                  subInput.p2.Copy(input.p2);\r\n                  subInput.maxFraction = maxFraction;\r\n                  const value = callback(subInput, node);\r\n                  if (value === 0) {\r\n                      // The client has terminated the ray cast.\r\n                      return;\r\n                  }\r\n                  if (value > 0) {\r\n                      // Update segment bounding box.\r\n                      maxFraction = value;\r\n                      t_x = p1.x + maxFraction * (p2.x - p1.x);\r\n                      t_y = p1.y + maxFraction * (p2.y - p1.y);\r\n                      segmentAABB.lowerBound.x = b2Min(p1.x, t_x);\r\n                      segmentAABB.lowerBound.y = b2Min(p1.y, t_y);\r\n                      segmentAABB.upperBound.x = b2Max(p1.x, t_x);\r\n                      segmentAABB.upperBound.y = b2Max(p1.y, t_y);\r\n                  }\r\n              }\r\n              else {\r\n                  stack.Push(verify(node.child1));\r\n                  stack.Push(verify(node.child2));\r\n              }\r\n          }\r\n      }\r\n      AllocateNode() {\r\n          // Expand the node pool as needed.\r\n          if (this.m_freeList) {\r\n              const node = this.m_freeList;\r\n              this.m_freeList = node.parent; // this.m_freeList = node.next;\r\n              node.parent = null;\r\n              node.child1 = null;\r\n              node.child2 = null;\r\n              node.height = 0;\r\n              delete node.userData; // = null;\r\n              return node;\r\n          }\r\n          return new b2TreeNode(b2DynamicTree.s_node_id++);\r\n      }\r\n      FreeNode(node) {\r\n          node.parent = this.m_freeList; // node.next = this.m_freeList;\r\n          node.child1 = null;\r\n          node.child2 = null;\r\n          node.height = -1;\r\n          delete node.userData; // = null;\r\n          this.m_freeList = node;\r\n      }\r\n      CreateProxy(aabb, userData) {\r\n          const node = this.AllocateNode();\r\n          // Fatten the aabb.\r\n          const r_x = b2_aabbExtension;\r\n          const r_y = b2_aabbExtension;\r\n          node.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n          node.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n          node.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n          node.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n          node.userData = userData;\r\n          node.height = 0;\r\n          this.InsertLeaf(node);\r\n          return node;\r\n      }\r\n      DestroyProxy(proxy) {\r\n          // DEBUG: b2Assert(proxy.IsLeaf());\r\n          this.RemoveLeaf(proxy);\r\n          this.FreeNode(proxy);\r\n      }\r\n      MoveProxy(proxy, aabb, displacement) {\r\n          // DEBUG: b2Assert(proxy.IsLeaf());\r\n          if (proxy.aabb.Contains(aabb)) {\r\n              return false;\r\n          }\r\n          this.RemoveLeaf(proxy);\r\n          // Extend AABB.\r\n          // Predict AABB displacement.\r\n          const r_x = b2_aabbExtension + b2_aabbMultiplier * (displacement.x > 0 ? displacement.x : (-displacement.x));\r\n          const r_y = b2_aabbExtension + b2_aabbMultiplier * (displacement.y > 0 ? displacement.y : (-displacement.y));\r\n          proxy.aabb.lowerBound.x = aabb.lowerBound.x - r_x;\r\n          proxy.aabb.lowerBound.y = aabb.lowerBound.y - r_y;\r\n          proxy.aabb.upperBound.x = aabb.upperBound.x + r_x;\r\n          proxy.aabb.upperBound.y = aabb.upperBound.y + r_y;\r\n          this.InsertLeaf(proxy);\r\n          return true;\r\n      }\r\n      InsertLeaf(leaf) {\r\n          ++this.m_insertionCount;\r\n          if (this.m_root === null) {\r\n              this.m_root = leaf;\r\n              this.m_root.parent = null;\r\n              return;\r\n          }\r\n          // Find the best sibling for this node\r\n          const leafAABB = leaf.aabb;\r\n          ///const center: b2Vec2 = leafAABB.GetCenter();\r\n          let index = this.m_root;\r\n          while (!index.IsLeaf()) {\r\n              const child1 = verify(index.child1);\r\n              const child2 = verify(index.child2);\r\n              const area = index.aabb.GetPerimeter();\r\n              const combinedAABB = b2DynamicTree.s_combinedAABB;\r\n              combinedAABB.Combine2(index.aabb, leafAABB);\r\n              const combinedArea = combinedAABB.GetPerimeter();\r\n              // Cost of creating a new parent for this node and the new leaf\r\n              const cost = 2 * combinedArea;\r\n              // Minimum cost of pushing the leaf further down the tree\r\n              const inheritanceCost = 2 * (combinedArea - area);\r\n              // Cost of descending into child1\r\n              let cost1;\r\n              const aabb = b2DynamicTree.s_aabb;\r\n              let oldArea;\r\n              let newArea;\r\n              if (child1.IsLeaf()) {\r\n                  aabb.Combine2(leafAABB, child1.aabb);\r\n                  cost1 = aabb.GetPerimeter() + inheritanceCost;\r\n              }\r\n              else {\r\n                  aabb.Combine2(leafAABB, child1.aabb);\r\n                  oldArea = child1.aabb.GetPerimeter();\r\n                  newArea = aabb.GetPerimeter();\r\n                  cost1 = (newArea - oldArea) + inheritanceCost;\r\n              }\r\n              // Cost of descending into child2\r\n              let cost2;\r\n              if (child2.IsLeaf()) {\r\n                  aabb.Combine2(leafAABB, child2.aabb);\r\n                  cost2 = aabb.GetPerimeter() + inheritanceCost;\r\n              }\r\n              else {\r\n                  aabb.Combine2(leafAABB, child2.aabb);\r\n                  oldArea = child2.aabb.GetPerimeter();\r\n                  newArea = aabb.GetPerimeter();\r\n                  cost2 = newArea - oldArea + inheritanceCost;\r\n              }\r\n              // Descend according to the minimum cost.\r\n              if (cost < cost1 && cost < cost2) {\r\n                  break;\r\n              }\r\n              // Descend\r\n              if (cost1 < cost2) {\r\n                  index = child1;\r\n              }\r\n              else {\r\n                  index = child2;\r\n              }\r\n          }\r\n          const sibling = index;\r\n          // Create a parent for the siblings.\r\n          const oldParent = sibling.parent;\r\n          const newParent = this.AllocateNode();\r\n          newParent.parent = oldParent;\r\n          delete newParent.userData; // = null;\r\n          newParent.aabb.Combine2(leafAABB, sibling.aabb);\r\n          newParent.height = sibling.height + 1;\r\n          if (oldParent) {\r\n              // The sibling was not the root.\r\n              if (oldParent.child1 === sibling) {\r\n                  oldParent.child1 = newParent;\r\n              }\r\n              else {\r\n                  oldParent.child2 = newParent;\r\n              }\r\n              newParent.child1 = sibling;\r\n              newParent.child2 = leaf;\r\n              sibling.parent = newParent;\r\n              leaf.parent = newParent;\r\n          }\r\n          else {\r\n              // The sibling was the root.\r\n              newParent.child1 = sibling;\r\n              newParent.child2 = leaf;\r\n              sibling.parent = newParent;\r\n              leaf.parent = newParent;\r\n              this.m_root = newParent;\r\n          }\r\n          // Walk back up the tree fixing heights and AABBs\r\n          let index2 = leaf.parent;\r\n          while (index2 !== null) {\r\n              index2 = this.Balance(index2);\r\n              const child1 = verify(index2.child1);\r\n              const child2 = verify(index2.child2);\r\n              index2.height = 1 + b2Max(child1.height, child2.height);\r\n              index2.aabb.Combine2(child1.aabb, child2.aabb);\r\n              index2 = index2.parent;\r\n          }\r\n          // this.Validate();\r\n      }\r\n      RemoveLeaf(leaf) {\r\n          if (leaf === this.m_root) {\r\n              this.m_root = null;\r\n              return;\r\n          }\r\n          const parent = verify(leaf.parent);\r\n          const grandParent = parent && parent.parent;\r\n          let sibling;\r\n          if (parent.child1 === leaf) {\r\n              sibling = verify(parent.child2);\r\n          }\r\n          else {\r\n              sibling = verify(parent.child1);\r\n          }\r\n          if (grandParent) {\r\n              // Destroy parent and connect sibling to grandParent.\r\n              if (grandParent.child1 === parent) {\r\n                  grandParent.child1 = sibling;\r\n              }\r\n              else {\r\n                  grandParent.child2 = sibling;\r\n              }\r\n              sibling.parent = grandParent;\r\n              this.FreeNode(parent);\r\n              // Adjust ancestor bounds.\r\n              let index = grandParent;\r\n              while (index) {\r\n                  index = this.Balance(index);\r\n                  const child1 = verify(index.child1);\r\n                  const child2 = verify(index.child2);\r\n                  index.aabb.Combine2(child1.aabb, child2.aabb);\r\n                  index.height = 1 + b2Max(child1.height, child2.height);\r\n                  index = index.parent;\r\n              }\r\n          }\r\n          else {\r\n              this.m_root = sibling;\r\n              sibling.parent = null;\r\n              this.FreeNode(parent);\r\n          }\r\n          // this.Validate();\r\n      }\r\n      Balance(A) {\r\n          // DEBUG: b2Assert(A !== null);\r\n          if (A.IsLeaf() || A.height < 2) {\r\n              return A;\r\n          }\r\n          const B = verify(A.child1);\r\n          const C = verify(A.child2);\r\n          const balance = C.height - B.height;\r\n          // Rotate C up\r\n          if (balance > 1) {\r\n              const F = verify(C.child1);\r\n              const G = verify(C.child2);\r\n              // Swap A and C\r\n              C.child1 = A;\r\n              C.parent = A.parent;\r\n              A.parent = C;\r\n              // A's old parent should point to C\r\n              if (C.parent !== null) {\r\n                  if (C.parent.child1 === A) {\r\n                      C.parent.child1 = C;\r\n                  }\r\n                  else {\r\n                      // DEBUG: b2Assert(C.parent.child2 === A);\r\n                      C.parent.child2 = C;\r\n                  }\r\n              }\r\n              else {\r\n                  this.m_root = C;\r\n              }\r\n              // Rotate\r\n              if (F.height > G.height) {\r\n                  C.child2 = F;\r\n                  A.child2 = G;\r\n                  G.parent = A;\r\n                  A.aabb.Combine2(B.aabb, G.aabb);\r\n                  C.aabb.Combine2(A.aabb, F.aabb);\r\n                  A.height = 1 + b2Max(B.height, G.height);\r\n                  C.height = 1 + b2Max(A.height, F.height);\r\n              }\r\n              else {\r\n                  C.child2 = G;\r\n                  A.child2 = F;\r\n                  F.parent = A;\r\n                  A.aabb.Combine2(B.aabb, F.aabb);\r\n                  C.aabb.Combine2(A.aabb, G.aabb);\r\n                  A.height = 1 + b2Max(B.height, F.height);\r\n                  C.height = 1 + b2Max(A.height, G.height);\r\n              }\r\n              return C;\r\n          }\r\n          // Rotate B up\r\n          if (balance < -1) {\r\n              const D = verify(B.child1);\r\n              const E = verify(B.child2);\r\n              // Swap A and B\r\n              B.child1 = A;\r\n              B.parent = A.parent;\r\n              A.parent = B;\r\n              // A's old parent should point to B\r\n              if (B.parent !== null) {\r\n                  if (B.parent.child1 === A) {\r\n                      B.parent.child1 = B;\r\n                  }\r\n                  else {\r\n                      // DEBUG: b2Assert(B.parent.child2 === A);\r\n                      B.parent.child2 = B;\r\n                  }\r\n              }\r\n              else {\r\n                  this.m_root = B;\r\n              }\r\n              // Rotate\r\n              if (D.height > E.height) {\r\n                  B.child2 = D;\r\n                  A.child1 = E;\r\n                  E.parent = A;\r\n                  A.aabb.Combine2(C.aabb, E.aabb);\r\n                  B.aabb.Combine2(A.aabb, D.aabb);\r\n                  A.height = 1 + b2Max(C.height, E.height);\r\n                  B.height = 1 + b2Max(A.height, D.height);\r\n              }\r\n              else {\r\n                  B.child2 = E;\r\n                  A.child1 = D;\r\n                  D.parent = A;\r\n                  A.aabb.Combine2(C.aabb, D.aabb);\r\n                  B.aabb.Combine2(A.aabb, E.aabb);\r\n                  A.height = 1 + b2Max(C.height, D.height);\r\n                  B.height = 1 + b2Max(A.height, E.height);\r\n              }\r\n              return B;\r\n          }\r\n          return A;\r\n      }\r\n      GetHeight() {\r\n          if (this.m_root === null) {\r\n              return 0;\r\n          }\r\n          return this.m_root.height;\r\n      }\r\n      static GetAreaNode(node) {\r\n          if (node === null) {\r\n              return 0;\r\n          }\r\n          if (node.IsLeaf()) {\r\n              return 0;\r\n          }\r\n          let area = node.aabb.GetPerimeter();\r\n          area += b2DynamicTree.GetAreaNode(node.child1);\r\n          area += b2DynamicTree.GetAreaNode(node.child2);\r\n          return area;\r\n      }\r\n      GetAreaRatio() {\r\n          if (this.m_root === null) {\r\n              return 0;\r\n          }\r\n          const root = this.m_root;\r\n          const rootArea = root.aabb.GetPerimeter();\r\n          const totalArea = b2DynamicTree.GetAreaNode(this.m_root);\r\n          /*\r\n          float32 totalArea = 0.0;\r\n          for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n            const b2TreeNode<T>* node = m_nodes + i;\r\n            if (node.height < 0) {\r\n              // Free node in pool\r\n              continue;\r\n            }\r\n      \r\n            totalArea += node.aabb.GetPerimeter();\r\n          }\r\n          */\r\n          return totalArea / rootArea;\r\n      }\r\n      ComputeHeightNode(node) {\r\n          if (!node || node.IsLeaf()) {\r\n              return 0;\r\n          }\r\n          const height1 = this.ComputeHeightNode(node.child1);\r\n          const height2 = this.ComputeHeightNode(node.child2);\r\n          return 1 + b2Max(height1, height2);\r\n      }\r\n      ComputeHeight() {\r\n          const height = this.ComputeHeightNode(this.m_root);\r\n          return height;\r\n      }\r\n      ValidateStructure(index) {\r\n          if (index === null) {\r\n              return;\r\n          }\r\n          if (index === this.m_root) ;\r\n          const node = index;\r\n          if (node.IsLeaf()) {\r\n              // DEBUG: b2Assert(node.child1 === null);\r\n              // DEBUG: b2Assert(node.child2 === null);\r\n              // DEBUG: b2Assert(node.height === 0);\r\n              return;\r\n          }\r\n          const child1 = verify(node.child1);\r\n          const child2 = verify(node.child2);\r\n          // DEBUG: b2Assert(child1.parent === index);\r\n          // DEBUG: b2Assert(child2.parent === index);\r\n          this.ValidateStructure(child1);\r\n          this.ValidateStructure(child2);\r\n      }\r\n      ValidateMetrics(index) {\r\n          if (index === null) {\r\n              return;\r\n          }\r\n          const node = index;\r\n          if (node.IsLeaf()) {\r\n              // DEBUG: b2Assert(node.child1 === null);\r\n              // DEBUG: b2Assert(node.child2 === null);\r\n              // DEBUG: b2Assert(node.height === 0);\r\n              return;\r\n          }\r\n          const child1 = verify(node.child1);\r\n          const child2 = verify(node.child2);\r\n          // DEBUG: const height1: number = child1.height;\r\n          // DEBUG: const height2: number = child2.height;\r\n          // DEBUG: const height: number = 1 + b2Max(height1, height2);\r\n          // DEBUG: b2Assert(node.height === height);\r\n          const aabb = b2DynamicTree.s_aabb;\r\n          aabb.Combine2(child1.aabb, child2.aabb);\r\n          // DEBUG: b2Assert(aabb.lowerBound === node.aabb.lowerBound);\r\n          // DEBUG: b2Assert(aabb.upperBound === node.aabb.upperBound);\r\n          this.ValidateMetrics(child1);\r\n          this.ValidateMetrics(child2);\r\n      }\r\n      Validate() {\r\n          // DEBUG: this.ValidateStructure(this.m_root);\r\n          // DEBUG: this.ValidateMetrics(this.m_root);\r\n          // let freeCount: number = 0;\r\n          // let freeIndex: b2TreeNode<T> | null = this.m_freeList;\r\n          // while (freeIndex !== null) {\r\n          //   freeIndex = freeIndex.parent; // freeIndex = freeIndex.next;\r\n          //   ++freeCount;\r\n          // }\r\n          // DEBUG: b2Assert(this.GetHeight() === this.ComputeHeight());\r\n          // b2Assert(this.m_nodeCount + freeCount === this.m_nodeCapacity);\r\n      }\r\n      static GetMaxBalanceNode(node, maxBalance) {\r\n          if (node === null) {\r\n              return maxBalance;\r\n          }\r\n          if (node.height <= 1) {\r\n              return maxBalance;\r\n          }\r\n          // DEBUG: b2Assert(!node.IsLeaf());\r\n          const child1 = verify(node.child1);\r\n          const child2 = verify(node.child2);\r\n          const balance = b2Abs(child2.height - child1.height);\r\n          return b2Max(maxBalance, balance);\r\n      }\r\n      GetMaxBalance() {\r\n          const maxBalance = b2DynamicTree.GetMaxBalanceNode(this.m_root, 0);\r\n          /*\r\n          int32 maxBalance = 0;\r\n          for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n            const b2TreeNode<T>* node = m_nodes + i;\r\n            if (node.height <= 1) {\r\n              continue;\r\n            }\r\n      \r\n            b2Assert(!node.IsLeaf());\r\n      \r\n            int32 child1 = node.child1;\r\n            int32 child2 = node.child2;\r\n            int32 balance = b2Abs(m_nodes[child2].height - m_nodes[child1].height);\r\n            maxBalance = b2Max(maxBalance, balance);\r\n          }\r\n          */\r\n          return maxBalance;\r\n      }\r\n      RebuildBottomUp() {\r\n          /*\r\n          int32* nodes = (int32*)b2Alloc(m_nodeCount * sizeof(int32));\r\n          int32 count = 0;\r\n      \r\n          // Build array of leaves. Free the rest.\r\n          for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n            if (m_nodes[i].height < 0) {\r\n              // free node in pool\r\n              continue;\r\n            }\r\n      \r\n            if (m_nodes[i].IsLeaf()) {\r\n              m_nodes[i].parent = b2_nullNode;\r\n              nodes[count] = i;\r\n              ++count;\r\n            } else {\r\n              FreeNode(i);\r\n            }\r\n          }\r\n      \r\n          while (count > 1) {\r\n            float32 minCost = b2_maxFloat;\r\n            int32 iMin = -1, jMin = -1;\r\n            for (int32 i = 0; i < count; ++i) {\r\n              b2AABB aabbi = m_nodes[nodes[i]].aabb;\r\n      \r\n              for (int32 j = i + 1; j < count; ++j) {\r\n                b2AABB aabbj = m_nodes[nodes[j]].aabb;\r\n                b2AABB b;\r\n                b.Combine(aabbi, aabbj);\r\n                float32 cost = b.GetPerimeter();\r\n                if (cost < minCost) {\r\n                  iMin = i;\r\n                  jMin = j;\r\n                  minCost = cost;\r\n                }\r\n              }\r\n            }\r\n      \r\n            int32 index1 = nodes[iMin];\r\n            int32 index2 = nodes[jMin];\r\n            b2TreeNode<T>* child1 = m_nodes + index1;\r\n            b2TreeNode<T>* child2 = m_nodes + index2;\r\n      \r\n            int32 parentIndex = AllocateNode();\r\n            b2TreeNode<T>* parent = m_nodes + parentIndex;\r\n            parent.child1 = index1;\r\n            parent.child2 = index2;\r\n            parent.height = 1 + b2Max(child1.height, child2.height);\r\n            parent.aabb.Combine(child1.aabb, child2.aabb);\r\n            parent.parent = b2_nullNode;\r\n      \r\n            child1.parent = parentIndex;\r\n            child2.parent = parentIndex;\r\n      \r\n            nodes[jMin] = nodes[count-1];\r\n            nodes[iMin] = parentIndex;\r\n            --count;\r\n          }\r\n      \r\n          m_root = nodes[0];\r\n          b2Free(nodes);\r\n          */\r\n          this.Validate();\r\n      }\r\n      static ShiftOriginNode(node, newOrigin) {\r\n          if (node === null) {\r\n              return;\r\n          }\r\n          if (node.height <= 1) {\r\n              return;\r\n          }\r\n          // DEBUG: b2Assert(!node.IsLeaf());\r\n          const child1 = node.child1;\r\n          const child2 = node.child2;\r\n          b2DynamicTree.ShiftOriginNode(child1, newOrigin);\r\n          b2DynamicTree.ShiftOriginNode(child2, newOrigin);\r\n          node.aabb.lowerBound.SelfSub(newOrigin);\r\n          node.aabb.upperBound.SelfSub(newOrigin);\r\n      }\r\n      ShiftOrigin(newOrigin) {\r\n          b2DynamicTree.ShiftOriginNode(this.m_root, newOrigin);\r\n          /*\r\n          // Build array of leaves. Free the rest.\r\n          for (int32 i = 0; i < m_nodeCapacity; ++i) {\r\n            m_nodes[i].aabb.lowerBound -= newOrigin;\r\n            m_nodes[i].aabb.upperBound -= newOrigin;\r\n          }\r\n          */\r\n      }\r\n  }\r\n  b2DynamicTree.s_r = new b2Vec2();\r\n  b2DynamicTree.s_v = new b2Vec2();\r\n  b2DynamicTree.s_abs_v = new b2Vec2();\r\n  b2DynamicTree.s_segmentAABB = new b2AABB();\r\n  b2DynamicTree.s_subInput = new b2RayCastInput();\r\n  b2DynamicTree.s_combinedAABB = new b2AABB();\r\n  b2DynamicTree.s_aabb = new b2AABB();\r\n  b2DynamicTree.s_node_id = 0;\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2Pair {\r\n      constructor(proxyA, proxyB) {\r\n          this.proxyA = proxyA;\r\n          this.proxyB = proxyB;\r\n      }\r\n  }\r\n  /// The broad-phase is used for computing pairs and performing volume queries and ray casts.\r\n  /// This broad-phase does not persist pairs. Instead, this reports potentially new pairs.\r\n  /// It is up to the client to consume the new pairs and to track subsequent overlap.\r\n  class b2BroadPhase {\r\n      constructor() {\r\n          this.m_tree = new b2DynamicTree();\r\n          this.m_proxyCount = 0;\r\n          // public m_moveCapacity: number = 16;\r\n          this.m_moveCount = 0;\r\n          this.m_moveBuffer = [];\r\n          // public m_pairCapacity: number = 16;\r\n          this.m_pairCount = 0;\r\n          this.m_pairBuffer = [];\r\n      }\r\n      // public m_queryProxyId: number = 0;\r\n      /// Create a proxy with an initial AABB. Pairs are not reported until\r\n      /// UpdatePairs is called.\r\n      CreateProxy(aabb, userData) {\r\n          const proxy = this.m_tree.CreateProxy(aabb, userData);\r\n          ++this.m_proxyCount;\r\n          this.BufferMove(proxy);\r\n          return proxy;\r\n      }\r\n      /// Destroy a proxy. It is up to the client to remove any pairs.\r\n      DestroyProxy(proxy) {\r\n          this.UnBufferMove(proxy);\r\n          --this.m_proxyCount;\r\n          this.m_tree.DestroyProxy(proxy);\r\n      }\r\n      /// Call MoveProxy as many times as you like, then when you are done\r\n      /// call UpdatePairs to finalized the proxy pairs (for your time step).\r\n      MoveProxy(proxy, aabb, displacement) {\r\n          const buffer = this.m_tree.MoveProxy(proxy, aabb, displacement);\r\n          if (buffer) {\r\n              this.BufferMove(proxy);\r\n          }\r\n      }\r\n      /// Call to trigger a re-processing of it's pairs on the next call to UpdatePairs.\r\n      TouchProxy(proxy) {\r\n          this.BufferMove(proxy);\r\n      }\r\n      /// Get the fat AABB for a proxy.\r\n      // public GetFatAABB(proxy: b2TreeNode<T>): b2AABB {\r\n      //   return this.m_tree.GetFatAABB(proxy);\r\n      // }\r\n      /// Get user data from a proxy. Returns NULL if the id is invalid.\r\n      // public GetUserData(proxy: b2TreeNode<T>): T {\r\n      //   return this.m_tree.GetUserData(proxy);\r\n      // }\r\n      /// Test overlap of fat AABBs.\r\n      // public TestOverlap(proxyA: b2TreeNode<T>, proxyB: b2TreeNode<T>): boolean {\r\n      //   const aabbA: b2AABB = this.m_tree.GetFatAABB(proxyA);\r\n      //   const aabbB: b2AABB = this.m_tree.GetFatAABB(proxyB);\r\n      //   return b2TestOverlapAABB(aabbA, aabbB);\r\n      // }\r\n      /// Get the number of proxies.\r\n      GetProxyCount() {\r\n          return this.m_proxyCount;\r\n      }\r\n      /// Update the pairs. This results in pair callbacks. This can only add pairs.\r\n      UpdatePairs(callback) {\r\n          // Reset pair buffer\r\n          this.m_pairCount = 0;\r\n          // Perform tree queries for all moving proxies.\r\n          for (let i = 0; i < this.m_moveCount; ++i) {\r\n              const queryProxy = this.m_moveBuffer[i];\r\n              if (queryProxy === null) {\r\n                  continue;\r\n              }\r\n              // This is called from box2d.b2DynamicTree::Query when we are gathering pairs.\r\n              // boolean b2BroadPhase::QueryCallback(int32 proxyId);\r\n              // We have to query the tree with the fat AABB so that\r\n              // we don't fail to create a pair that may touch later.\r\n              const fatAABB = queryProxy.aabb; // this.m_tree.GetFatAABB(queryProxy);\r\n              // Query tree, create pairs and add them pair buffer.\r\n              this.m_tree.Query(fatAABB, (proxy) => {\r\n                  // A proxy cannot form a pair with itself.\r\n                  if (proxy.m_id === queryProxy.m_id) {\r\n                      return true;\r\n                  }\r\n                  // const proxyA = proxy < queryProxy ? proxy : queryProxy;\r\n                  // const proxyB = proxy >= queryProxy ? proxy : queryProxy;\r\n                  let proxyA;\r\n                  let proxyB;\r\n                  if (proxy.m_id < queryProxy.m_id) {\r\n                      proxyA = proxy;\r\n                      proxyB = queryProxy;\r\n                  }\r\n                  else {\r\n                      proxyA = queryProxy;\r\n                      proxyB = proxy;\r\n                  }\r\n                  // Grow the pair buffer as needed.\r\n                  if (this.m_pairCount === this.m_pairBuffer.length) {\r\n                      this.m_pairBuffer[this.m_pairCount] = new b2Pair(proxyA, proxyB);\r\n                  }\r\n                  else {\r\n                      const pair = this.m_pairBuffer[this.m_pairCount];\r\n                      pair.proxyA = proxyA;\r\n                      pair.proxyB = proxyB;\r\n                  }\r\n                  ++this.m_pairCount;\r\n                  return true;\r\n              });\r\n          }\r\n          // Reset move buffer\r\n          this.m_moveCount = 0;\r\n          // Sort the pair buffer to expose duplicates.\r\n          this.m_pairBuffer.length = this.m_pairCount;\r\n          this.m_pairBuffer.sort(b2PairLessThan);\r\n          // Send the pairs back to the client.\r\n          let i = 0;\r\n          while (i < this.m_pairCount) {\r\n              const primaryPair = this.m_pairBuffer[i];\r\n              const userDataA = primaryPair.proxyA.userData; // this.m_tree.GetUserData(primaryPair.proxyA);\r\n              const userDataB = primaryPair.proxyB.userData; // this.m_tree.GetUserData(primaryPair.proxyB);\r\n              callback(userDataA, userDataB);\r\n              ++i;\r\n              // Skip any duplicate pairs.\r\n              while (i < this.m_pairCount) {\r\n                  const pair = this.m_pairBuffer[i];\r\n                  if (pair.proxyA.m_id !== primaryPair.proxyA.m_id || pair.proxyB.m_id !== primaryPair.proxyB.m_id) {\r\n                      break;\r\n                  }\r\n                  ++i;\r\n              }\r\n          }\r\n          // Try to keep the tree balanced.\r\n          // this.m_tree.Rebalance(4);\r\n      }\r\n      /// Query an AABB for overlapping proxies. The callback class\r\n      /// is called for each proxy that overlaps the supplied AABB.\r\n      Query(aabb, callback) {\r\n          this.m_tree.Query(aabb, callback);\r\n      }\r\n      QueryPoint(point, callback) {\r\n          this.m_tree.QueryPoint(point, callback);\r\n      }\r\n      /// Ray-cast against the proxies in the tree. This relies on the callback\r\n      /// to perform a exact ray-cast in the case were the proxy contains a shape.\r\n      /// The callback also performs the any collision filtering. This has performance\r\n      /// roughly equal to k * log(n), where k is the number of collisions and n is the\r\n      /// number of proxies in the tree.\r\n      /// @param input the ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\r\n      /// @param callback a callback class that is called for each proxy that is hit by the ray.\r\n      RayCast(input, callback) {\r\n          this.m_tree.RayCast(input, callback);\r\n      }\r\n      /// Get the height of the embedded tree.\r\n      GetTreeHeight() {\r\n          return this.m_tree.GetHeight();\r\n      }\r\n      /// Get the balance of the embedded tree.\r\n      GetTreeBalance() {\r\n          return this.m_tree.GetMaxBalance();\r\n      }\r\n      /// Get the quality metric of the embedded tree.\r\n      GetTreeQuality() {\r\n          return this.m_tree.GetAreaRatio();\r\n      }\r\n      /// Shift the world origin. Useful for large worlds.\r\n      /// The shift formula is: position -= newOrigin\r\n      /// @param newOrigin the new origin with respect to the old origin\r\n      ShiftOrigin(newOrigin) {\r\n          this.m_tree.ShiftOrigin(newOrigin);\r\n      }\r\n      BufferMove(proxy) {\r\n          this.m_moveBuffer[this.m_moveCount] = proxy;\r\n          ++this.m_moveCount;\r\n      }\r\n      UnBufferMove(proxy) {\r\n          const i = this.m_moveBuffer.indexOf(proxy);\r\n          this.m_moveBuffer[i] = null;\r\n      }\r\n  }\r\n  /// This is used to sort pairs.\r\n  function b2PairLessThan(pair1, pair2) {\r\n      if (pair1.proxyA.m_id === pair2.proxyA.m_id) {\r\n          return pair1.proxyB.m_id - pair2.proxyB.m_id;\r\n      }\r\n      return pair1.proxyA.m_id - pair2.proxyA.m_id;\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  exports.b2_toiTime = 0;\r\n  exports.b2_toiMaxTime = 0;\r\n  exports.b2_toiCalls = 0;\r\n  exports.b2_toiIters = 0;\r\n  exports.b2_toiMaxIters = 0;\r\n  exports.b2_toiRootIters = 0;\r\n  exports.b2_toiMaxRootIters = 0;\r\n  function b2_toi_reset() {\r\n      exports.b2_toiTime = 0;\r\n      exports.b2_toiMaxTime = 0;\r\n      exports.b2_toiCalls = 0;\r\n      exports.b2_toiIters = 0;\r\n      exports.b2_toiMaxIters = 0;\r\n      exports.b2_toiRootIters = 0;\r\n      exports.b2_toiMaxRootIters = 0;\r\n  }\r\n  const b2TimeOfImpact_s_xfA = new b2Transform();\r\n  const b2TimeOfImpact_s_xfB = new b2Transform();\r\n  const b2TimeOfImpact_s_pointA = new b2Vec2();\r\n  const b2TimeOfImpact_s_pointB = new b2Vec2();\r\n  const b2TimeOfImpact_s_normal = new b2Vec2();\r\n  const b2TimeOfImpact_s_axisA = new b2Vec2();\r\n  const b2TimeOfImpact_s_axisB = new b2Vec2();\r\n  /// Input parameters for b2TimeOfImpact\r\n  class b2TOIInput {\r\n      constructor() {\r\n          this.proxyA = new b2DistanceProxy();\r\n          this.proxyB = new b2DistanceProxy();\r\n          this.sweepA = new b2Sweep();\r\n          this.sweepB = new b2Sweep();\r\n          this.tMax = 0; // defines sweep interval [0, tMax]\r\n      }\r\n  }\r\n  (function (b2TOIOutputState) {\r\n      b2TOIOutputState[b2TOIOutputState[\"e_unknown\"] = 0] = \"e_unknown\";\r\n      b2TOIOutputState[b2TOIOutputState[\"e_failed\"] = 1] = \"e_failed\";\r\n      b2TOIOutputState[b2TOIOutputState[\"e_overlapped\"] = 2] = \"e_overlapped\";\r\n      b2TOIOutputState[b2TOIOutputState[\"e_touching\"] = 3] = \"e_touching\";\r\n      b2TOIOutputState[b2TOIOutputState[\"e_separated\"] = 4] = \"e_separated\";\r\n  })(exports.b2TOIOutputState || (exports.b2TOIOutputState = {}));\r\n  class b2TOIOutput {\r\n      constructor() {\r\n          this.state = exports.b2TOIOutputState.e_unknown;\r\n          this.t = 0;\r\n      }\r\n  }\r\n  (function (b2SeparationFunctionType) {\r\n      b2SeparationFunctionType[b2SeparationFunctionType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n      b2SeparationFunctionType[b2SeparationFunctionType[\"e_points\"] = 0] = \"e_points\";\r\n      b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceA\"] = 1] = \"e_faceA\";\r\n      b2SeparationFunctionType[b2SeparationFunctionType[\"e_faceB\"] = 2] = \"e_faceB\";\r\n  })(exports.b2SeparationFunctionType || (exports.b2SeparationFunctionType = {}));\r\n  class b2SeparationFunction {\r\n      constructor() {\r\n          this.m_sweepA = new b2Sweep();\r\n          this.m_sweepB = new b2Sweep();\r\n          this.m_type = exports.b2SeparationFunctionType.e_unknown;\r\n          this.m_localPoint = new b2Vec2();\r\n          this.m_axis = new b2Vec2();\r\n      }\r\n      Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1) {\r\n          this.m_proxyA = proxyA;\r\n          this.m_proxyB = proxyB;\r\n          const count = cache.count;\r\n          // DEBUG: b2Assert(0 < count && count < 3);\r\n          this.m_sweepA.Copy(sweepA);\r\n          this.m_sweepB.Copy(sweepB);\r\n          const xfA = b2TimeOfImpact_s_xfA;\r\n          const xfB = b2TimeOfImpact_s_xfB;\r\n          this.m_sweepA.GetTransform(xfA, t1);\r\n          this.m_sweepB.GetTransform(xfB, t1);\r\n          if (count === 1) {\r\n              this.m_type = exports.b2SeparationFunctionType.e_points;\r\n              const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n              const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n              const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n              const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n              b2Vec2.SubVV(pointB, pointA, this.m_axis);\r\n              const s = this.m_axis.Normalize();\r\n              // #if B2_ENABLE_PARTICLE\r\n              this.m_localPoint.SetZero();\r\n              // #endif\r\n              return s;\r\n          }\r\n          else if (cache.indexA[0] === cache.indexA[1]) {\r\n              // Two points on B and one on A.\r\n              this.m_type = exports.b2SeparationFunctionType.e_faceB;\r\n              const localPointB1 = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n              const localPointB2 = this.m_proxyB.GetVertex(cache.indexB[1]);\r\n              b2Vec2.CrossVOne(b2Vec2.SubVV(localPointB2, localPointB1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n              const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n              b2Vec2.MidVV(localPointB1, localPointB2, this.m_localPoint);\r\n              const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n              const localPointA = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n              const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n              let s = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n              if (s < 0) {\r\n                  this.m_axis.SelfNeg();\r\n                  s = -s;\r\n              }\r\n              return s;\r\n          }\r\n          else {\r\n              // Two points on A and one or two points on B.\r\n              this.m_type = exports.b2SeparationFunctionType.e_faceA;\r\n              const localPointA1 = this.m_proxyA.GetVertex(cache.indexA[0]);\r\n              const localPointA2 = this.m_proxyA.GetVertex(cache.indexA[1]);\r\n              b2Vec2.CrossVOne(b2Vec2.SubVV(localPointA2, localPointA1, b2Vec2.s_t0), this.m_axis).SelfNormalize();\r\n              const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n              b2Vec2.MidVV(localPointA1, localPointA2, this.m_localPoint);\r\n              const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n              const localPointB = this.m_proxyB.GetVertex(cache.indexB[0]);\r\n              const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n              let s = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n              if (s < 0) {\r\n                  this.m_axis.SelfNeg();\r\n                  s = -s;\r\n              }\r\n              return s;\r\n          }\r\n      }\r\n      FindMinSeparation(indexA, indexB, t) {\r\n          const xfA = b2TimeOfImpact_s_xfA;\r\n          const xfB = b2TimeOfImpact_s_xfB;\r\n          this.m_sweepA.GetTransform(xfA, t);\r\n          this.m_sweepB.GetTransform(xfB, t);\r\n          switch (this.m_type) {\r\n              case exports.b2SeparationFunctionType.e_points: {\r\n                  const axisA = b2Rot.MulTRV(xfA.q, this.m_axis, b2TimeOfImpact_s_axisA);\r\n                  const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(this.m_axis, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                  indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                  indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                  const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                  const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                  const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                  const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                  const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                  return separation;\r\n              }\r\n              case exports.b2SeparationFunctionType.e_faceA: {\r\n                  const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                  const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                  const axisB = b2Rot.MulTRV(xfB.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisB);\r\n                  indexA[0] = -1;\r\n                  indexB[0] = this.m_proxyB.GetSupport(axisB);\r\n                  const localPointB = this.m_proxyB.GetVertex(indexB[0]);\r\n                  const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                  const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                  return separation;\r\n              }\r\n              case exports.b2SeparationFunctionType.e_faceB: {\r\n                  const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                  const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                  const axisA = b2Rot.MulTRV(xfA.q, b2Vec2.NegV(normal, b2Vec2.s_t0), b2TimeOfImpact_s_axisA);\r\n                  indexB[0] = -1;\r\n                  indexA[0] = this.m_proxyA.GetSupport(axisA);\r\n                  const localPointA = this.m_proxyA.GetVertex(indexA[0]);\r\n                  const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                  const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                  return separation;\r\n              }\r\n              default:\r\n                  // DEBUG: b2Assert(false);\r\n                  indexA[0] = -1;\r\n                  indexB[0] = -1;\r\n                  return 0;\r\n          }\r\n      }\r\n      Evaluate(indexA, indexB, t) {\r\n          const xfA = b2TimeOfImpact_s_xfA;\r\n          const xfB = b2TimeOfImpact_s_xfB;\r\n          this.m_sweepA.GetTransform(xfA, t);\r\n          this.m_sweepB.GetTransform(xfB, t);\r\n          switch (this.m_type) {\r\n              case exports.b2SeparationFunctionType.e_points: {\r\n                  const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                  const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                  const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                  const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                  const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.m_axis);\r\n                  return separation;\r\n              }\r\n              case exports.b2SeparationFunctionType.e_faceA: {\r\n                  const normal = b2Rot.MulRV(xfA.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                  const pointA = b2Transform.MulXV(xfA, this.m_localPoint, b2TimeOfImpact_s_pointA);\r\n                  const localPointB = this.m_proxyB.GetVertex(indexB);\r\n                  const pointB = b2Transform.MulXV(xfB, localPointB, b2TimeOfImpact_s_pointB);\r\n                  const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), normal);\r\n                  return separation;\r\n              }\r\n              case exports.b2SeparationFunctionType.e_faceB: {\r\n                  const normal = b2Rot.MulRV(xfB.q, this.m_axis, b2TimeOfImpact_s_normal);\r\n                  const pointB = b2Transform.MulXV(xfB, this.m_localPoint, b2TimeOfImpact_s_pointB);\r\n                  const localPointA = this.m_proxyA.GetVertex(indexA);\r\n                  const pointA = b2Transform.MulXV(xfA, localPointA, b2TimeOfImpact_s_pointA);\r\n                  const separation = b2Vec2.DotVV(b2Vec2.SubVV(pointA, pointB, b2Vec2.s_t0), normal);\r\n                  return separation;\r\n              }\r\n              default:\r\n                  // DEBUG: b2Assert(false);\r\n                  return 0;\r\n          }\r\n      }\r\n  }\r\n  const b2TimeOfImpact_s_timer = new b2Timer();\r\n  const b2TimeOfImpact_s_cache = new b2SimplexCache();\r\n  const b2TimeOfImpact_s_distanceInput = new b2DistanceInput();\r\n  const b2TimeOfImpact_s_distanceOutput = new b2DistanceOutput();\r\n  const b2TimeOfImpact_s_fcn = new b2SeparationFunction();\r\n  const b2TimeOfImpact_s_indexA = [0];\r\n  const b2TimeOfImpact_s_indexB = [0];\r\n  const b2TimeOfImpact_s_sweepA = new b2Sweep();\r\n  const b2TimeOfImpact_s_sweepB = new b2Sweep();\r\n  function b2TimeOfImpact(output, input) {\r\n      const timer = b2TimeOfImpact_s_timer.Reset();\r\n      ++exports.b2_toiCalls;\r\n      output.state = exports.b2TOIOutputState.e_unknown;\r\n      output.t = input.tMax;\r\n      const proxyA = input.proxyA;\r\n      const proxyB = input.proxyB;\r\n      const maxVertices = b2Max(b2_maxPolygonVertices, proxyA.m_count, proxyB.m_count);\r\n      const sweepA = b2TimeOfImpact_s_sweepA.Copy(input.sweepA);\r\n      const sweepB = b2TimeOfImpact_s_sweepB.Copy(input.sweepB);\r\n      // Large rotations can make the root finder fail, so we normalize the\r\n      // sweep angles.\r\n      sweepA.Normalize();\r\n      sweepB.Normalize();\r\n      const tMax = input.tMax;\r\n      const totalRadius = proxyA.m_radius + proxyB.m_radius;\r\n      const target = b2Max(b2_linearSlop, totalRadius - 3 * b2_linearSlop);\r\n      const tolerance = 0.25 * b2_linearSlop;\r\n      // DEBUG: b2Assert(target > tolerance);\r\n      let t1 = 0;\r\n      const k_maxIterations = 20; // TODO_ERIN b2Settings\r\n      let iter = 0;\r\n      // Prepare input for distance query.\r\n      const cache = b2TimeOfImpact_s_cache;\r\n      cache.count = 0;\r\n      const distanceInput = b2TimeOfImpact_s_distanceInput;\r\n      distanceInput.proxyA.Copy(input.proxyA);\r\n      distanceInput.proxyB.Copy(input.proxyB);\r\n      distanceInput.useRadii = false;\r\n      // The outer loop progressively attempts to compute new separating axes.\r\n      // This loop terminates when an axis is repeated (no progress is made).\r\n      for (;;) {\r\n          const xfA = b2TimeOfImpact_s_xfA;\r\n          const xfB = b2TimeOfImpact_s_xfB;\r\n          sweepA.GetTransform(xfA, t1);\r\n          sweepB.GetTransform(xfB, t1);\r\n          // Get the distance between shapes. We can also use the results\r\n          // to get a separating axis.\r\n          distanceInput.transformA.Copy(xfA);\r\n          distanceInput.transformB.Copy(xfB);\r\n          const distanceOutput = b2TimeOfImpact_s_distanceOutput;\r\n          b2Distance(distanceOutput, cache, distanceInput);\r\n          // If the shapes are overlapped, we give up on continuous collision.\r\n          if (distanceOutput.distance <= 0) {\r\n              // Failure!\r\n              output.state = exports.b2TOIOutputState.e_overlapped;\r\n              output.t = 0;\r\n              break;\r\n          }\r\n          if (distanceOutput.distance < target + tolerance) {\r\n              // Victory!\r\n              output.state = exports.b2TOIOutputState.e_touching;\r\n              output.t = t1;\r\n              break;\r\n          }\r\n          // Initialize the separating axis.\r\n          const fcn = b2TimeOfImpact_s_fcn;\r\n          fcn.Initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\r\n          /*\r\n          #if 0\r\n              // Dump the curve seen by the root finder {\r\n                const int32 N = 100;\r\n                float32 dx = 1.0f / N;\r\n                float32 xs[N+1];\r\n                float32 fs[N+1];\r\n          \r\n                float32 x = 0.0f;\r\n          \r\n                for (int32 i = 0; i <= N; ++i) {\r\n                  sweepA.GetTransform(&xfA, x);\r\n                  sweepB.GetTransform(&xfB, x);\r\n                  float32 f = fcn.Evaluate(xfA, xfB) - target;\r\n          \r\n                  printf(\"%g %g\\n\", x, f);\r\n          \r\n                  xs[i] = x;\r\n                  fs[i] = f;\r\n          \r\n                  x += dx;\r\n                }\r\n              }\r\n          #endif\r\n          */\r\n          // Compute the TOI on the separating axis. We do this by successively\r\n          // resolving the deepest point. This loop is bounded by the number of vertices.\r\n          let done = false;\r\n          let t2 = tMax;\r\n          let pushBackIter = 0;\r\n          for (;;) {\r\n              // Find the deepest point at t2. Store the witness point indices.\r\n              const indexA = b2TimeOfImpact_s_indexA;\r\n              const indexB = b2TimeOfImpact_s_indexB;\r\n              let s2 = fcn.FindMinSeparation(indexA, indexB, t2);\r\n              // Is the final configuration separated?\r\n              if (s2 > (target + tolerance)) {\r\n                  // Victory!\r\n                  output.state = exports.b2TOIOutputState.e_separated;\r\n                  output.t = tMax;\r\n                  done = true;\r\n                  break;\r\n              }\r\n              // Has the separation reached tolerance?\r\n              if (s2 > (target - tolerance)) {\r\n                  // Advance the sweeps\r\n                  t1 = t2;\r\n                  break;\r\n              }\r\n              // Compute the initial separation of the witness points.\r\n              let s1 = fcn.Evaluate(indexA[0], indexB[0], t1);\r\n              // Check for initial overlap. This might happen if the root finder\r\n              // runs out of iterations.\r\n              if (s1 < (target - tolerance)) {\r\n                  output.state = exports.b2TOIOutputState.e_failed;\r\n                  output.t = t1;\r\n                  done = true;\r\n                  break;\r\n              }\r\n              // Check for touching\r\n              if (s1 <= (target + tolerance)) {\r\n                  // Victory! t1 should hold the TOI (could be 0.0).\r\n                  output.state = exports.b2TOIOutputState.e_touching;\r\n                  output.t = t1;\r\n                  done = true;\r\n                  break;\r\n              }\r\n              // Compute 1D root of: f(x) - target = 0\r\n              let rootIterCount = 0;\r\n              let a1 = t1;\r\n              let a2 = t2;\r\n              for (;;) {\r\n                  // Use a mix of the secant rule and bisection.\r\n                  let t = 0;\r\n                  if (rootIterCount & 1) {\r\n                      // Secant rule to improve convergence.\r\n                      t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\r\n                  }\r\n                  else {\r\n                      // Bisection to guarantee progress.\r\n                      t = 0.5 * (a1 + a2);\r\n                  }\r\n                  ++rootIterCount;\r\n                  ++exports.b2_toiRootIters;\r\n                  const s = fcn.Evaluate(indexA[0], indexB[0], t);\r\n                  if (b2Abs(s - target) < tolerance) {\r\n                      // t2 holds a tentative value for t1\r\n                      t2 = t;\r\n                      break;\r\n                  }\r\n                  // Ensure we continue to bracket the root.\r\n                  if (s > target) {\r\n                      a1 = t;\r\n                      s1 = s;\r\n                  }\r\n                  else {\r\n                      a2 = t;\r\n                      s2 = s;\r\n                  }\r\n                  if (rootIterCount === 50) {\r\n                      break;\r\n                  }\r\n              }\r\n              exports.b2_toiMaxRootIters = b2Max(exports.b2_toiMaxRootIters, rootIterCount);\r\n              ++pushBackIter;\r\n              if (pushBackIter === maxVertices) {\r\n                  break;\r\n              }\r\n          }\r\n          ++iter;\r\n          ++exports.b2_toiIters;\r\n          if (done) {\r\n              break;\r\n          }\r\n          if (iter === k_maxIterations) {\r\n              // Root finder got stuck. Semi-victory.\r\n              output.state = exports.b2TOIOutputState.e_failed;\r\n              output.t = t1;\r\n              break;\r\n          }\r\n      }\r\n      exports.b2_toiMaxIters = b2Max(exports.b2_toiMaxIters, iter);\r\n      const time = timer.GetMilliseconds();\r\n      exports.b2_toiMaxTime = b2Max(exports.b2_toiMaxTime, time);\r\n      exports.b2_toiTime += time;\r\n  }\r\n\r\n  const b2CollideCircles_s_pA = new b2Vec2();\r\n  const b2CollideCircles_s_pB = new b2Vec2();\r\n  function b2CollideCircles(manifold, circleA, xfA, circleB, xfB) {\r\n      manifold.pointCount = 0;\r\n      const pA = b2Transform.MulXV(xfA, circleA.m_p, b2CollideCircles_s_pA);\r\n      const pB = b2Transform.MulXV(xfB, circleB.m_p, b2CollideCircles_s_pB);\r\n      const distSqr = b2Vec2.DistanceSquaredVV(pA, pB);\r\n      const radius = circleA.m_radius + circleB.m_radius;\r\n      if (distSqr > radius * radius) {\r\n          return;\r\n      }\r\n      manifold.type = exports.b2ManifoldType.e_circles;\r\n      manifold.localPoint.Copy(circleA.m_p);\r\n      manifold.localNormal.SetZero();\r\n      manifold.pointCount = 1;\r\n      manifold.points[0].localPoint.Copy(circleB.m_p);\r\n      manifold.points[0].id.key = 0;\r\n  }\r\n  const b2CollidePolygonAndCircle_s_c = new b2Vec2();\r\n  const b2CollidePolygonAndCircle_s_cLocal = new b2Vec2();\r\n  const b2CollidePolygonAndCircle_s_faceCenter = new b2Vec2();\r\n  function b2CollidePolygonAndCircle(manifold, polygonA, xfA, circleB, xfB) {\r\n      manifold.pointCount = 0;\r\n      // Compute circle position in the frame of the polygon.\r\n      const c = b2Transform.MulXV(xfB, circleB.m_p, b2CollidePolygonAndCircle_s_c);\r\n      const cLocal = b2Transform.MulTXV(xfA, c, b2CollidePolygonAndCircle_s_cLocal);\r\n      // Find the min separating edge.\r\n      let normalIndex = 0;\r\n      let separation = (-b2_maxFloat);\r\n      const radius = polygonA.m_radius + circleB.m_radius;\r\n      const vertexCount = polygonA.m_count;\r\n      const vertices = polygonA.m_vertices;\r\n      const normals = polygonA.m_normals;\r\n      for (let i = 0; i < vertexCount; ++i) {\r\n          const s = b2Vec2.DotVV(normals[i], b2Vec2.SubVV(cLocal, vertices[i], b2Vec2.s_t0));\r\n          if (s > radius) {\r\n              // Early out.\r\n              return;\r\n          }\r\n          if (s > separation) {\r\n              separation = s;\r\n              normalIndex = i;\r\n          }\r\n      }\r\n      // Vertices that subtend the incident face.\r\n      const vertIndex1 = normalIndex;\r\n      const vertIndex2 = (vertIndex1 + 1) % vertexCount;\r\n      const v1 = vertices[vertIndex1];\r\n      const v2 = vertices[vertIndex2];\r\n      // If the center is inside the polygon ...\r\n      if (separation < b2_epsilon) {\r\n          manifold.pointCount = 1;\r\n          manifold.type = exports.b2ManifoldType.e_faceA;\r\n          manifold.localNormal.Copy(normals[normalIndex]);\r\n          b2Vec2.MidVV(v1, v2, manifold.localPoint);\r\n          manifold.points[0].localPoint.Copy(circleB.m_p);\r\n          manifold.points[0].id.key = 0;\r\n          return;\r\n      }\r\n      // Compute barycentric coordinates\r\n      const u1 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v1, b2Vec2.s_t0), b2Vec2.SubVV(v2, v1, b2Vec2.s_t1));\r\n      const u2 = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, v2, b2Vec2.s_t0), b2Vec2.SubVV(v1, v2, b2Vec2.s_t1));\r\n      if (u1 <= 0) {\r\n          if (b2Vec2.DistanceSquaredVV(cLocal, v1) > radius * radius) {\r\n              return;\r\n          }\r\n          manifold.pointCount = 1;\r\n          manifold.type = exports.b2ManifoldType.e_faceA;\r\n          b2Vec2.SubVV(cLocal, v1, manifold.localNormal).SelfNormalize();\r\n          manifold.localPoint.Copy(v1);\r\n          manifold.points[0].localPoint.Copy(circleB.m_p);\r\n          manifold.points[0].id.key = 0;\r\n      }\r\n      else if (u2 <= 0) {\r\n          if (b2Vec2.DistanceSquaredVV(cLocal, v2) > radius * radius) {\r\n              return;\r\n          }\r\n          manifold.pointCount = 1;\r\n          manifold.type = exports.b2ManifoldType.e_faceA;\r\n          b2Vec2.SubVV(cLocal, v2, manifold.localNormal).SelfNormalize();\r\n          manifold.localPoint.Copy(v2);\r\n          manifold.points[0].localPoint.Copy(circleB.m_p);\r\n          manifold.points[0].id.key = 0;\r\n      }\r\n      else {\r\n          const faceCenter = b2Vec2.MidVV(v1, v2, b2CollidePolygonAndCircle_s_faceCenter);\r\n          const separation = b2Vec2.DotVV(b2Vec2.SubVV(cLocal, faceCenter, b2Vec2.s_t1), normals[vertIndex1]);\r\n          if (separation > radius) {\r\n              return;\r\n          }\r\n          manifold.pointCount = 1;\r\n          manifold.type = exports.b2ManifoldType.e_faceA;\r\n          manifold.localNormal.Copy(normals[vertIndex1]).SelfNormalize();\r\n          manifold.localPoint.Copy(faceCenter);\r\n          manifold.points[0].localPoint.Copy(circleB.m_p);\r\n          manifold.points[0].id.key = 0;\r\n      }\r\n  }\r\n\r\n  // DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\n  const b2EdgeSeparation_s_normal1World = new b2Vec2();\r\n  const b2EdgeSeparation_s_normal1 = new b2Vec2();\r\n  const b2EdgeSeparation_s_v1 = new b2Vec2();\r\n  const b2EdgeSeparation_s_v2 = new b2Vec2();\r\n  function b2EdgeSeparation(poly1, xf1, edge1, poly2, xf2) {\r\n      // DEBUG: const count1: number = poly1.m_count;\r\n      const vertices1 = poly1.m_vertices;\r\n      const normals1 = poly1.m_normals;\r\n      const count2 = poly2.m_count;\r\n      const vertices2 = poly2.m_vertices;\r\n      // DEBUG: b2Assert(0 <= edge1 && edge1 < count1);\r\n      // Convert normal from poly1's frame into poly2's frame.\r\n      const normal1World = b2Rot.MulRV(xf1.q, normals1[edge1], b2EdgeSeparation_s_normal1World);\r\n      const normal1 = b2Rot.MulTRV(xf2.q, normal1World, b2EdgeSeparation_s_normal1);\r\n      // Find support vertex on poly2 for -normal.\r\n      let index = 0;\r\n      let minDot = b2_maxFloat;\r\n      for (let i = 0; i < count2; ++i) {\r\n          const dot = b2Vec2.DotVV(vertices2[i], normal1);\r\n          if (dot < minDot) {\r\n              minDot = dot;\r\n              index = i;\r\n          }\r\n      }\r\n      const v1 = b2Transform.MulXV(xf1, vertices1[edge1], b2EdgeSeparation_s_v1);\r\n      const v2 = b2Transform.MulXV(xf2, vertices2[index], b2EdgeSeparation_s_v2);\r\n      const separation = b2Vec2.DotVV(b2Vec2.SubVV(v2, v1, b2Vec2.s_t0), normal1World);\r\n      return separation;\r\n  }\r\n  const b2FindMaxSeparation_s_d = new b2Vec2();\r\n  const b2FindMaxSeparation_s_dLocal1 = new b2Vec2();\r\n  function b2FindMaxSeparation(edgeIndex, poly1, xf1, poly2, xf2) {\r\n      const count1 = poly1.m_count;\r\n      const normals1 = poly1.m_normals;\r\n      // Vector pointing from the centroid of poly1 to the centroid of poly2.\r\n      const d = b2Vec2.SubVV(b2Transform.MulXV(xf2, poly2.m_centroid, b2Vec2.s_t0), b2Transform.MulXV(xf1, poly1.m_centroid, b2Vec2.s_t1), b2FindMaxSeparation_s_d);\r\n      const dLocal1 = b2Rot.MulTRV(xf1.q, d, b2FindMaxSeparation_s_dLocal1);\r\n      // Find edge normal on poly1 that has the largest projection onto d.\r\n      let edge = 0;\r\n      let maxDot = (-b2_maxFloat);\r\n      for (let i = 0; i < count1; ++i) {\r\n          const dot = b2Vec2.DotVV(normals1[i], dLocal1);\r\n          if (dot > maxDot) {\r\n              maxDot = dot;\r\n              edge = i;\r\n          }\r\n      }\r\n      // Get the separation for the edge normal.\r\n      let s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n      // Check the separation for the previous edge normal.\r\n      const prevEdge = (edge + count1 - 1) % count1;\r\n      const sPrev = b2EdgeSeparation(poly1, xf1, prevEdge, poly2, xf2);\r\n      // Check the separation for the next edge normal.\r\n      const nextEdge = (edge + 1) % count1;\r\n      const sNext = b2EdgeSeparation(poly1, xf1, nextEdge, poly2, xf2);\r\n      // Find the best edge and the search direction.\r\n      let bestEdge = 0;\r\n      let bestSeparation = 0;\r\n      let increment = 0;\r\n      if (sPrev > s && sPrev > sNext) {\r\n          increment = -1;\r\n          bestEdge = prevEdge;\r\n          bestSeparation = sPrev;\r\n      }\r\n      else if (sNext > s) {\r\n          increment = 1;\r\n          bestEdge = nextEdge;\r\n          bestSeparation = sNext;\r\n      }\r\n      else {\r\n          edgeIndex[0] = edge;\r\n          return s;\r\n      }\r\n      // Perform a local search for the best edge normal.\r\n      while (true) {\r\n          if (increment === -1) {\r\n              edge = (bestEdge + count1 - 1) % count1;\r\n          }\r\n          else {\r\n              edge = (bestEdge + 1) % count1;\r\n          }\r\n          s = b2EdgeSeparation(poly1, xf1, edge, poly2, xf2);\r\n          if (s > bestSeparation) {\r\n              bestEdge = edge;\r\n              bestSeparation = s;\r\n          }\r\n          else {\r\n              break;\r\n          }\r\n      }\r\n      edgeIndex[0] = bestEdge;\r\n      return bestSeparation;\r\n  }\r\n  const b2FindIncidentEdge_s_normal1 = new b2Vec2();\r\n  function b2FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\r\n      // DEBUG: const count1: number = poly1.m_count;\r\n      const normals1 = poly1.m_normals;\r\n      const count2 = poly2.m_count;\r\n      const vertices2 = poly2.m_vertices;\r\n      const normals2 = poly2.m_normals;\r\n      // DEBUG: b2Assert(0 <= edge1 && edge1 < count1);\r\n      // Get the normal of the reference edge in poly2's frame.\r\n      const normal1 = b2Rot.MulTRV(xf2.q, b2Rot.MulRV(xf1.q, normals1[edge1], b2Vec2.s_t0), b2FindIncidentEdge_s_normal1);\r\n      // Find the incident edge on poly2.\r\n      let index = 0;\r\n      let minDot = b2_maxFloat;\r\n      for (let i = 0; i < count2; ++i) {\r\n          const dot = b2Vec2.DotVV(normal1, normals2[i]);\r\n          if (dot < minDot) {\r\n              minDot = dot;\r\n              index = i;\r\n          }\r\n      }\r\n      // Build the clip vertices for the incident edge.\r\n      const i1 = index;\r\n      const i2 = (i1 + 1) % count2;\r\n      const c0 = c[0];\r\n      b2Transform.MulXV(xf2, vertices2[i1], c0.v);\r\n      const cf0 = c0.id.cf;\r\n      cf0.indexA = edge1;\r\n      cf0.indexB = i1;\r\n      cf0.typeA = exports.b2ContactFeatureType.e_face;\r\n      cf0.typeB = exports.b2ContactFeatureType.e_vertex;\r\n      const c1 = c[1];\r\n      b2Transform.MulXV(xf2, vertices2[i2], c1.v);\r\n      const cf1 = c1.id.cf;\r\n      cf1.indexA = edge1;\r\n      cf1.indexB = i2;\r\n      cf1.typeA = exports.b2ContactFeatureType.e_face;\r\n      cf1.typeB = exports.b2ContactFeatureType.e_vertex;\r\n  }\r\n  const b2CollidePolygons_s_incidentEdge = b2ClipVertex.MakeArray(2);\r\n  const b2CollidePolygons_s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\n  const b2CollidePolygons_s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\n  const b2CollidePolygons_s_edgeA = [0];\r\n  const b2CollidePolygons_s_edgeB = [0];\r\n  const b2CollidePolygons_s_localTangent = new b2Vec2();\r\n  const b2CollidePolygons_s_localNormal = new b2Vec2();\r\n  const b2CollidePolygons_s_planePoint = new b2Vec2();\r\n  const b2CollidePolygons_s_normal = new b2Vec2();\r\n  const b2CollidePolygons_s_tangent = new b2Vec2();\r\n  const b2CollidePolygons_s_ntangent = new b2Vec2();\r\n  const b2CollidePolygons_s_v11 = new b2Vec2();\r\n  const b2CollidePolygons_s_v12 = new b2Vec2();\r\n  function b2CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\r\n      manifold.pointCount = 0;\r\n      const totalRadius = polyA.m_radius + polyB.m_radius;\r\n      const edgeA = b2CollidePolygons_s_edgeA;\r\n      edgeA[0] = 0;\r\n      const separationA = b2FindMaxSeparation(edgeA, polyA, xfA, polyB, xfB);\r\n      if (separationA > totalRadius) {\r\n          return;\r\n      }\r\n      const edgeB = b2CollidePolygons_s_edgeB;\r\n      edgeB[0] = 0;\r\n      const separationB = b2FindMaxSeparation(edgeB, polyB, xfB, polyA, xfA);\r\n      if (separationB > totalRadius) {\r\n          return;\r\n      }\r\n      let poly1; // reference polygon\r\n      let poly2; // incident polygon\r\n      let xf1, xf2;\r\n      let edge1 = 0; // reference edge\r\n      let flip = 0;\r\n      const k_relativeTol = 0.98;\r\n      const k_absoluteTol = 0.001;\r\n      if (separationB > k_relativeTol * separationA + k_absoluteTol) {\r\n          poly1 = polyB;\r\n          poly2 = polyA;\r\n          xf1 = xfB;\r\n          xf2 = xfA;\r\n          edge1 = edgeB[0];\r\n          manifold.type = exports.b2ManifoldType.e_faceB;\r\n          flip = 1;\r\n      }\r\n      else {\r\n          poly1 = polyA;\r\n          poly2 = polyB;\r\n          xf1 = xfA;\r\n          xf2 = xfB;\r\n          edge1 = edgeA[0];\r\n          manifold.type = exports.b2ManifoldType.e_faceA;\r\n          flip = 0;\r\n      }\r\n      const incidentEdge = b2CollidePolygons_s_incidentEdge;\r\n      b2FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\r\n      const count1 = poly1.m_count;\r\n      const vertices1 = poly1.m_vertices;\r\n      const iv1 = edge1;\r\n      const iv2 = (edge1 + 1) % count1;\r\n      const local_v11 = vertices1[iv1];\r\n      const local_v12 = vertices1[iv2];\r\n      const localTangent = b2Vec2.SubVV(local_v12, local_v11, b2CollidePolygons_s_localTangent);\r\n      localTangent.Normalize();\r\n      const localNormal = b2Vec2.CrossVOne(localTangent, b2CollidePolygons_s_localNormal);\r\n      const planePoint = b2Vec2.MidVV(local_v11, local_v12, b2CollidePolygons_s_planePoint);\r\n      const tangent = b2Rot.MulRV(xf1.q, localTangent, b2CollidePolygons_s_tangent);\r\n      const normal = b2Vec2.CrossVOne(tangent, b2CollidePolygons_s_normal);\r\n      const v11 = b2Transform.MulXV(xf1, local_v11, b2CollidePolygons_s_v11);\r\n      const v12 = b2Transform.MulXV(xf1, local_v12, b2CollidePolygons_s_v12);\r\n      // Face offset.\r\n      const frontOffset = b2Vec2.DotVV(normal, v11);\r\n      // Side offsets, extended by polytope skin thickness.\r\n      const sideOffset1 = -b2Vec2.DotVV(tangent, v11) + totalRadius;\r\n      const sideOffset2 = b2Vec2.DotVV(tangent, v12) + totalRadius;\r\n      // Clip incident edge against extruded edge1 side edges.\r\n      const clipPoints1 = b2CollidePolygons_s_clipPoints1;\r\n      const clipPoints2 = b2CollidePolygons_s_clipPoints2;\r\n      let np;\r\n      // Clip to box side 1\r\n      const ntangent = b2Vec2.NegV(tangent, b2CollidePolygons_s_ntangent);\r\n      np = b2ClipSegmentToLine(clipPoints1, incidentEdge, ntangent, sideOffset1, iv1);\r\n      if (np < 2) {\r\n          return;\r\n      }\r\n      // Clip to negative box side 1\r\n      np = b2ClipSegmentToLine(clipPoints2, clipPoints1, tangent, sideOffset2, iv2);\r\n      if (np < 2) {\r\n          return;\r\n      }\r\n      // Now clipPoints2 contains the clipped points.\r\n      manifold.localNormal.Copy(localNormal);\r\n      manifold.localPoint.Copy(planePoint);\r\n      let pointCount = 0;\r\n      for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n          const cv = clipPoints2[i];\r\n          const separation = b2Vec2.DotVV(normal, cv.v) - frontOffset;\r\n          if (separation <= totalRadius) {\r\n              const cp = manifold.points[pointCount];\r\n              b2Transform.MulTXV(xf2, cv.v, cp.localPoint);\r\n              cp.id.Copy(cv.id);\r\n              if (flip) {\r\n                  // Swap features\r\n                  const cf = cp.id.cf;\r\n                  cp.id.cf.indexA = cf.indexB;\r\n                  cp.id.cf.indexB = cf.indexA;\r\n                  cp.id.cf.typeA = cf.typeB;\r\n                  cp.id.cf.typeB = cf.typeA;\r\n              }\r\n              ++pointCount;\r\n          }\r\n      }\r\n      manifold.pointCount = pointCount;\r\n  }\r\n\r\n  // DEBUG: import { b2Assert } from \"../Common/b2Settings\";\r\n  const b2CollideEdgeAndCircle_s_Q = new b2Vec2();\r\n  const b2CollideEdgeAndCircle_s_e = new b2Vec2();\r\n  const b2CollideEdgeAndCircle_s_d = new b2Vec2();\r\n  const b2CollideEdgeAndCircle_s_e1 = new b2Vec2();\r\n  const b2CollideEdgeAndCircle_s_e2 = new b2Vec2();\r\n  const b2CollideEdgeAndCircle_s_P = new b2Vec2();\r\n  const b2CollideEdgeAndCircle_s_n = new b2Vec2();\r\n  const b2CollideEdgeAndCircle_s_id = new b2ContactID();\r\n  function b2CollideEdgeAndCircle(manifold, edgeA, xfA, circleB, xfB) {\r\n      manifold.pointCount = 0;\r\n      // Compute circle in frame of edge\r\n      const Q = b2Transform.MulTXV(xfA, b2Transform.MulXV(xfB, circleB.m_p, b2Vec2.s_t0), b2CollideEdgeAndCircle_s_Q);\r\n      const A = edgeA.m_vertex1;\r\n      const B = edgeA.m_vertex2;\r\n      const e = b2Vec2.SubVV(B, A, b2CollideEdgeAndCircle_s_e);\r\n      // Barycentric coordinates\r\n      const u = b2Vec2.DotVV(e, b2Vec2.SubVV(B, Q, b2Vec2.s_t0));\r\n      const v = b2Vec2.DotVV(e, b2Vec2.SubVV(Q, A, b2Vec2.s_t0));\r\n      const radius = edgeA.m_radius + circleB.m_radius;\r\n      // const cf: b2ContactFeature = new b2ContactFeature();\r\n      const id = b2CollideEdgeAndCircle_s_id;\r\n      id.cf.indexB = 0;\r\n      id.cf.typeB = exports.b2ContactFeatureType.e_vertex;\r\n      // Region A\r\n      if (v <= 0) {\r\n          const P = A;\r\n          const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n          const dd = b2Vec2.DotVV(d, d);\r\n          if (dd > radius * radius) {\r\n              return;\r\n          }\r\n          // Is there an edge connected to A?\r\n          if (edgeA.m_hasVertex0) {\r\n              const A1 = edgeA.m_vertex0;\r\n              const B1 = A;\r\n              const e1 = b2Vec2.SubVV(B1, A1, b2CollideEdgeAndCircle_s_e1);\r\n              const u1 = b2Vec2.DotVV(e1, b2Vec2.SubVV(B1, Q, b2Vec2.s_t0));\r\n              // Is the circle in Region AB of the previous edge?\r\n              if (u1 > 0) {\r\n                  return;\r\n              }\r\n          }\r\n          id.cf.indexA = 0;\r\n          id.cf.typeA = exports.b2ContactFeatureType.e_vertex;\r\n          manifold.pointCount = 1;\r\n          manifold.type = exports.b2ManifoldType.e_circles;\r\n          manifold.localNormal.SetZero();\r\n          manifold.localPoint.Copy(P);\r\n          manifold.points[0].id.Copy(id);\r\n          // manifold.points[0].id.key = 0;\r\n          // manifold.points[0].id.cf = cf;\r\n          manifold.points[0].localPoint.Copy(circleB.m_p);\r\n          return;\r\n      }\r\n      // Region B\r\n      if (u <= 0) {\r\n          const P = B;\r\n          const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n          const dd = b2Vec2.DotVV(d, d);\r\n          if (dd > radius * radius) {\r\n              return;\r\n          }\r\n          // Is there an edge connected to B?\r\n          if (edgeA.m_hasVertex3) {\r\n              const B2 = edgeA.m_vertex3;\r\n              const A2 = B;\r\n              const e2 = b2Vec2.SubVV(B2, A2, b2CollideEdgeAndCircle_s_e2);\r\n              const v2 = b2Vec2.DotVV(e2, b2Vec2.SubVV(Q, A2, b2Vec2.s_t0));\r\n              // Is the circle in Region AB of the next edge?\r\n              if (v2 > 0) {\r\n                  return;\r\n              }\r\n          }\r\n          id.cf.indexA = 1;\r\n          id.cf.typeA = exports.b2ContactFeatureType.e_vertex;\r\n          manifold.pointCount = 1;\r\n          manifold.type = exports.b2ManifoldType.e_circles;\r\n          manifold.localNormal.SetZero();\r\n          manifold.localPoint.Copy(P);\r\n          manifold.points[0].id.Copy(id);\r\n          // manifold.points[0].id.key = 0;\r\n          // manifold.points[0].id.cf = cf;\r\n          manifold.points[0].localPoint.Copy(circleB.m_p);\r\n          return;\r\n      }\r\n      // Region AB\r\n      const den = b2Vec2.DotVV(e, e);\r\n      // DEBUG: b2Assert(den > 0);\r\n      const P = b2CollideEdgeAndCircle_s_P;\r\n      P.x = (1 / den) * (u * A.x + v * B.x);\r\n      P.y = (1 / den) * (u * A.y + v * B.y);\r\n      const d = b2Vec2.SubVV(Q, P, b2CollideEdgeAndCircle_s_d);\r\n      const dd = b2Vec2.DotVV(d, d);\r\n      if (dd > radius * radius) {\r\n          return;\r\n      }\r\n      const n = b2CollideEdgeAndCircle_s_n.Set(-e.y, e.x);\r\n      if (b2Vec2.DotVV(n, b2Vec2.SubVV(Q, A, b2Vec2.s_t0)) < 0) {\r\n          n.Set(-n.x, -n.y);\r\n      }\r\n      n.Normalize();\r\n      id.cf.indexA = 0;\r\n      id.cf.typeA = exports.b2ContactFeatureType.e_face;\r\n      manifold.pointCount = 1;\r\n      manifold.type = exports.b2ManifoldType.e_faceA;\r\n      manifold.localNormal.Copy(n);\r\n      manifold.localPoint.Copy(A);\r\n      manifold.points[0].id.Copy(id);\r\n      // manifold.points[0].id.key = 0;\r\n      // manifold.points[0].id.cf = cf;\r\n      manifold.points[0].localPoint.Copy(circleB.m_p);\r\n  }\r\n  class b2EPAxis {\r\n      constructor() {\r\n          this.type = 0 /* e_unknown */;\r\n          this.index = 0;\r\n          this.separation = 0;\r\n      }\r\n  }\r\n  class b2TempPolygon {\r\n      constructor() {\r\n          this.vertices = [];\r\n          this.normals = [];\r\n          this.count = 0;\r\n      }\r\n  }\r\n  class b2ReferenceFace {\r\n      constructor() {\r\n          this.i1 = 0;\r\n          this.i2 = 0;\r\n          this.v1 = new b2Vec2();\r\n          this.v2 = new b2Vec2();\r\n          this.normal = new b2Vec2();\r\n          this.sideNormal1 = new b2Vec2();\r\n          this.sideOffset1 = 0;\r\n          this.sideNormal2 = new b2Vec2();\r\n          this.sideOffset2 = 0;\r\n      }\r\n  }\r\n  class b2EPCollider {\r\n      constructor() {\r\n          this.m_polygonB = new b2TempPolygon();\r\n          this.m_xf = new b2Transform();\r\n          this.m_centroidB = new b2Vec2();\r\n          this.m_v0 = new b2Vec2();\r\n          this.m_v1 = new b2Vec2();\r\n          this.m_v2 = new b2Vec2();\r\n          this.m_v3 = new b2Vec2();\r\n          this.m_normal0 = new b2Vec2();\r\n          this.m_normal1 = new b2Vec2();\r\n          this.m_normal2 = new b2Vec2();\r\n          this.m_normal = new b2Vec2();\r\n          this.m_type1 = 0 /* e_isolated */;\r\n          this.m_type2 = 0 /* e_isolated */;\r\n          this.m_lowerLimit = new b2Vec2();\r\n          this.m_upperLimit = new b2Vec2();\r\n          this.m_radius = 0;\r\n          this.m_front = false;\r\n      }\r\n      Collide(manifold, edgeA, xfA, polygonB, xfB) {\r\n          b2Transform.MulTXX(xfA, xfB, this.m_xf);\r\n          b2Transform.MulXV(this.m_xf, polygonB.m_centroid, this.m_centroidB);\r\n          this.m_v0.Copy(edgeA.m_vertex0);\r\n          this.m_v1.Copy(edgeA.m_vertex1);\r\n          this.m_v2.Copy(edgeA.m_vertex2);\r\n          this.m_v3.Copy(edgeA.m_vertex3);\r\n          const hasVertex0 = edgeA.m_hasVertex0;\r\n          const hasVertex3 = edgeA.m_hasVertex3;\r\n          const edge1 = b2Vec2.SubVV(this.m_v2, this.m_v1, b2EPCollider.s_edge1);\r\n          edge1.Normalize();\r\n          this.m_normal1.Set(edge1.y, -edge1.x);\r\n          const offset1 = b2Vec2.DotVV(this.m_normal1, b2Vec2.SubVV(this.m_centroidB, this.m_v1, b2Vec2.s_t0));\r\n          let offset0 = 0;\r\n          let offset2 = 0;\r\n          let convex1 = false;\r\n          let convex2 = false;\r\n          // Is there a preceding edge?\r\n          if (hasVertex0) {\r\n              const edge0 = b2Vec2.SubVV(this.m_v1, this.m_v0, b2EPCollider.s_edge0);\r\n              edge0.Normalize();\r\n              this.m_normal0.Set(edge0.y, -edge0.x);\r\n              convex1 = b2Vec2.CrossVV(edge0, edge1) >= 0;\r\n              offset0 = b2Vec2.DotVV(this.m_normal0, b2Vec2.SubVV(this.m_centroidB, this.m_v0, b2Vec2.s_t0));\r\n          }\r\n          // Is there a following edge?\r\n          if (hasVertex3) {\r\n              const edge2 = b2Vec2.SubVV(this.m_v3, this.m_v2, b2EPCollider.s_edge2);\r\n              edge2.Normalize();\r\n              this.m_normal2.Set(edge2.y, -edge2.x);\r\n              convex2 = b2Vec2.CrossVV(edge1, edge2) > 0;\r\n              offset2 = b2Vec2.DotVV(this.m_normal2, b2Vec2.SubVV(this.m_centroidB, this.m_v2, b2Vec2.s_t0));\r\n          }\r\n          // Determine front or back collision. Determine collision normal limits.\r\n          if (hasVertex0 && hasVertex3) {\r\n              if (convex1 && convex2) {\r\n                  this.m_front = offset0 >= 0 || offset1 >= 0 || offset2 >= 0;\r\n                  if (this.m_front) {\r\n                      this.m_normal.Copy(this.m_normal1);\r\n                      this.m_lowerLimit.Copy(this.m_normal0);\r\n                      this.m_upperLimit.Copy(this.m_normal2);\r\n                  }\r\n                  else {\r\n                      this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                  }\r\n              }\r\n              else if (convex1) {\r\n                  this.m_front = offset0 >= 0 || (offset1 >= 0 && offset2 >= 0);\r\n                  if (this.m_front) {\r\n                      this.m_normal.Copy(this.m_normal1);\r\n                      this.m_lowerLimit.Copy(this.m_normal0);\r\n                      this.m_upperLimit.Copy(this.m_normal1);\r\n                  }\r\n                  else {\r\n                      this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                      this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                  }\r\n              }\r\n              else if (convex2) {\r\n                  this.m_front = offset2 >= 0 || (offset0 >= 0 && offset1 >= 0);\r\n                  if (this.m_front) {\r\n                      this.m_normal.Copy(this.m_normal1);\r\n                      this.m_lowerLimit.Copy(this.m_normal1);\r\n                      this.m_upperLimit.Copy(this.m_normal2);\r\n                  }\r\n                  else {\r\n                      this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                  }\r\n              }\r\n              else {\r\n                  this.m_front = offset0 >= 0 && offset1 >= 0 && offset2 >= 0;\r\n                  if (this.m_front) {\r\n                      this.m_normal.Copy(this.m_normal1);\r\n                      this.m_lowerLimit.Copy(this.m_normal1);\r\n                      this.m_upperLimit.Copy(this.m_normal1);\r\n                  }\r\n                  else {\r\n                      this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                      this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                  }\r\n              }\r\n          }\r\n          else if (hasVertex0) {\r\n              if (convex1) {\r\n                  this.m_front = offset0 >= 0 || offset1 >= 0;\r\n                  if (this.m_front) {\r\n                      this.m_normal.Copy(this.m_normal1);\r\n                      this.m_lowerLimit.Copy(this.m_normal0);\r\n                      this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                  }\r\n                  else {\r\n                      this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_lowerLimit.Copy(this.m_normal1);\r\n                      this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                  }\r\n              }\r\n              else {\r\n                  this.m_front = offset0 >= 0 && offset1 >= 0;\r\n                  if (this.m_front) {\r\n                      this.m_normal.Copy(this.m_normal1);\r\n                      this.m_lowerLimit.Copy(this.m_normal1);\r\n                      this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n                  }\r\n                  else {\r\n                      this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_lowerLimit.Copy(this.m_normal1);\r\n                      this.m_upperLimit.Copy(this.m_normal0).SelfNeg();\r\n                  }\r\n              }\r\n          }\r\n          else if (hasVertex3) {\r\n              if (convex2) {\r\n                  this.m_front = offset1 >= 0 || offset2 >= 0;\r\n                  if (this.m_front) {\r\n                      this.m_normal.Copy(this.m_normal1);\r\n                      this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_upperLimit.Copy(this.m_normal2);\r\n                  }\r\n                  else {\r\n                      this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_upperLimit.Copy(this.m_normal1);\r\n                  }\r\n              }\r\n              else {\r\n                  this.m_front = offset1 >= 0 && offset2 >= 0;\r\n                  if (this.m_front) {\r\n                      this.m_normal.Copy(this.m_normal1);\r\n                      this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_upperLimit.Copy(this.m_normal1);\r\n                  }\r\n                  else {\r\n                      this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                      this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();\r\n                      this.m_upperLimit.Copy(this.m_normal1);\r\n                  }\r\n              }\r\n          }\r\n          else {\r\n              this.m_front = offset1 >= 0;\r\n              if (this.m_front) {\r\n                  this.m_normal.Copy(this.m_normal1);\r\n                  this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();\r\n                  this.m_upperLimit.Copy(this.m_normal1).SelfNeg();\r\n              }\r\n              else {\r\n                  this.m_normal.Copy(this.m_normal1).SelfNeg();\r\n                  this.m_lowerLimit.Copy(this.m_normal1);\r\n                  this.m_upperLimit.Copy(this.m_normal1);\r\n              }\r\n          }\r\n          // Get polygonB in frameA\r\n          this.m_polygonB.count = polygonB.m_count;\r\n          for (let i = 0; i < polygonB.m_count; ++i) {\r\n              if (this.m_polygonB.vertices.length <= i) {\r\n                  this.m_polygonB.vertices.push(new b2Vec2());\r\n              }\r\n              if (this.m_polygonB.normals.length <= i) {\r\n                  this.m_polygonB.normals.push(new b2Vec2());\r\n              }\r\n              b2Transform.MulXV(this.m_xf, polygonB.m_vertices[i], this.m_polygonB.vertices[i]);\r\n              b2Rot.MulRV(this.m_xf.q, polygonB.m_normals[i], this.m_polygonB.normals[i]);\r\n          }\r\n          this.m_radius = polygonB.m_radius + edgeA.m_radius;\r\n          manifold.pointCount = 0;\r\n          const edgeAxis = this.ComputeEdgeSeparation(b2EPCollider.s_edgeAxis);\r\n          // If no valid normal can be found than this edge should not collide.\r\n          if (edgeAxis.type === 0 /* e_unknown */) {\r\n              return;\r\n          }\r\n          if (edgeAxis.separation > this.m_radius) {\r\n              return;\r\n          }\r\n          const polygonAxis = this.ComputePolygonSeparation(b2EPCollider.s_polygonAxis);\r\n          if (polygonAxis.type !== 0 /* e_unknown */ && polygonAxis.separation > this.m_radius) {\r\n              return;\r\n          }\r\n          // Use hysteresis for jitter reduction.\r\n          const k_relativeTol = 0.98;\r\n          const k_absoluteTol = 0.001;\r\n          let primaryAxis;\r\n          if (polygonAxis.type === 0 /* e_unknown */) {\r\n              primaryAxis = edgeAxis;\r\n          }\r\n          else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\r\n              primaryAxis = polygonAxis;\r\n          }\r\n          else {\r\n              primaryAxis = edgeAxis;\r\n          }\r\n          const ie = b2EPCollider.s_ie;\r\n          const rf = b2EPCollider.s_rf;\r\n          if (primaryAxis.type === 1 /* e_edgeA */) {\r\n              manifold.type = exports.b2ManifoldType.e_faceA;\r\n              // Search for the polygon normal that is most anti-parallel to the edge normal.\r\n              let bestIndex = 0;\r\n              let bestValue = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[0]);\r\n              for (let i = 1; i < this.m_polygonB.count; ++i) {\r\n                  const value = b2Vec2.DotVV(this.m_normal, this.m_polygonB.normals[i]);\r\n                  if (value < bestValue) {\r\n                      bestValue = value;\r\n                      bestIndex = i;\r\n                  }\r\n              }\r\n              const i1 = bestIndex;\r\n              const i2 = (i1 + 1) % this.m_polygonB.count;\r\n              const ie0 = ie[0];\r\n              ie0.v.Copy(this.m_polygonB.vertices[i1]);\r\n              ie0.id.cf.indexA = 0;\r\n              ie0.id.cf.indexB = i1;\r\n              ie0.id.cf.typeA = exports.b2ContactFeatureType.e_face;\r\n              ie0.id.cf.typeB = exports.b2ContactFeatureType.e_vertex;\r\n              const ie1 = ie[1];\r\n              ie1.v.Copy(this.m_polygonB.vertices[i2]);\r\n              ie1.id.cf.indexA = 0;\r\n              ie1.id.cf.indexB = i2;\r\n              ie1.id.cf.typeA = exports.b2ContactFeatureType.e_face;\r\n              ie1.id.cf.typeB = exports.b2ContactFeatureType.e_vertex;\r\n              if (this.m_front) {\r\n                  rf.i1 = 0;\r\n                  rf.i2 = 1;\r\n                  rf.v1.Copy(this.m_v1);\r\n                  rf.v2.Copy(this.m_v2);\r\n                  rf.normal.Copy(this.m_normal1);\r\n              }\r\n              else {\r\n                  rf.i1 = 1;\r\n                  rf.i2 = 0;\r\n                  rf.v1.Copy(this.m_v2);\r\n                  rf.v2.Copy(this.m_v1);\r\n                  rf.normal.Copy(this.m_normal1).SelfNeg();\r\n              }\r\n          }\r\n          else {\r\n              manifold.type = exports.b2ManifoldType.e_faceB;\r\n              const ie0 = ie[0];\r\n              ie0.v.Copy(this.m_v1);\r\n              ie0.id.cf.indexA = 0;\r\n              ie0.id.cf.indexB = primaryAxis.index;\r\n              ie0.id.cf.typeA = exports.b2ContactFeatureType.e_vertex;\r\n              ie0.id.cf.typeB = exports.b2ContactFeatureType.e_face;\r\n              const ie1 = ie[1];\r\n              ie1.v.Copy(this.m_v2);\r\n              ie1.id.cf.indexA = 0;\r\n              ie1.id.cf.indexB = primaryAxis.index;\r\n              ie1.id.cf.typeA = exports.b2ContactFeatureType.e_vertex;\r\n              ie1.id.cf.typeB = exports.b2ContactFeatureType.e_face;\r\n              rf.i1 = primaryAxis.index;\r\n              rf.i2 = (rf.i1 + 1) % this.m_polygonB.count;\r\n              rf.v1.Copy(this.m_polygonB.vertices[rf.i1]);\r\n              rf.v2.Copy(this.m_polygonB.vertices[rf.i2]);\r\n              rf.normal.Copy(this.m_polygonB.normals[rf.i1]);\r\n          }\r\n          rf.sideNormal1.Set(rf.normal.y, -rf.normal.x);\r\n          rf.sideNormal2.Copy(rf.sideNormal1).SelfNeg();\r\n          rf.sideOffset1 = b2Vec2.DotVV(rf.sideNormal1, rf.v1);\r\n          rf.sideOffset2 = b2Vec2.DotVV(rf.sideNormal2, rf.v2);\r\n          // Clip incident edge against extruded edge1 side edges.\r\n          const clipPoints1 = b2EPCollider.s_clipPoints1;\r\n          const clipPoints2 = b2EPCollider.s_clipPoints2;\r\n          let np = 0;\r\n          // Clip to box side 1\r\n          np = b2ClipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\r\n          if (np < b2_maxManifoldPoints) {\r\n              return;\r\n          }\r\n          // Clip to negative box side 1\r\n          np = b2ClipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\r\n          if (np < b2_maxManifoldPoints) {\r\n              return;\r\n          }\r\n          // Now clipPoints2 contains the clipped points.\r\n          if (primaryAxis.type === 1 /* e_edgeA */) {\r\n              manifold.localNormal.Copy(rf.normal);\r\n              manifold.localPoint.Copy(rf.v1);\r\n          }\r\n          else {\r\n              manifold.localNormal.Copy(polygonB.m_normals[rf.i1]);\r\n              manifold.localPoint.Copy(polygonB.m_vertices[rf.i1]);\r\n          }\r\n          let pointCount = 0;\r\n          for (let i = 0; i < b2_maxManifoldPoints; ++i) {\r\n              let separation;\r\n              separation = b2Vec2.DotVV(rf.normal, b2Vec2.SubVV(clipPoints2[i].v, rf.v1, b2Vec2.s_t0));\r\n              if (separation <= this.m_radius) {\r\n                  const cp = manifold.points[pointCount];\r\n                  if (primaryAxis.type === 1 /* e_edgeA */) {\r\n                      b2Transform.MulTXV(this.m_xf, clipPoints2[i].v, cp.localPoint);\r\n                      cp.id = clipPoints2[i].id;\r\n                  }\r\n                  else {\r\n                      cp.localPoint.Copy(clipPoints2[i].v);\r\n                      cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\r\n                      cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\r\n                      cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\r\n                      cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\r\n                  }\r\n                  ++pointCount;\r\n              }\r\n          }\r\n          manifold.pointCount = pointCount;\r\n      }\r\n      ComputeEdgeSeparation(out) {\r\n          const axis = out;\r\n          axis.type = 1 /* e_edgeA */;\r\n          axis.index = this.m_front ? 0 : 1;\r\n          axis.separation = b2_maxFloat;\r\n          for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n              const s = b2Vec2.DotVV(this.m_normal, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n              if (s < axis.separation) {\r\n                  axis.separation = s;\r\n              }\r\n          }\r\n          return axis;\r\n      }\r\n      ComputePolygonSeparation(out) {\r\n          const axis = out;\r\n          axis.type = 0 /* e_unknown */;\r\n          axis.index = -1;\r\n          axis.separation = -b2_maxFloat;\r\n          const perp = b2EPCollider.s_perp.Set(-this.m_normal.y, this.m_normal.x);\r\n          for (let i = 0; i < this.m_polygonB.count; ++i) {\r\n              const n = b2Vec2.NegV(this.m_polygonB.normals[i], b2EPCollider.s_n);\r\n              const s1 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v1, b2Vec2.s_t0));\r\n              const s2 = b2Vec2.DotVV(n, b2Vec2.SubVV(this.m_polygonB.vertices[i], this.m_v2, b2Vec2.s_t0));\r\n              const s = b2Min(s1, s2);\r\n              if (s > this.m_radius) {\r\n                  // No collision\r\n                  axis.type = 2 /* e_edgeB */;\r\n                  axis.index = i;\r\n                  axis.separation = s;\r\n                  return axis;\r\n              }\r\n              // Adjacency\r\n              if (b2Vec2.DotVV(n, perp) >= 0) {\r\n                  if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_upperLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                      continue;\r\n                  }\r\n              }\r\n              else {\r\n                  if (b2Vec2.DotVV(b2Vec2.SubVV(n, this.m_lowerLimit, b2Vec2.s_t0), this.m_normal) < -b2_angularSlop) {\r\n                      continue;\r\n                  }\r\n              }\r\n              if (s > axis.separation) {\r\n                  axis.type = 2 /* e_edgeB */;\r\n                  axis.index = i;\r\n                  axis.separation = s;\r\n              }\r\n          }\r\n          return axis;\r\n      }\r\n  }\r\n  b2EPCollider.s_edge1 = new b2Vec2();\r\n  b2EPCollider.s_edge0 = new b2Vec2();\r\n  b2EPCollider.s_edge2 = new b2Vec2();\r\n  b2EPCollider.s_ie = b2ClipVertex.MakeArray(2);\r\n  b2EPCollider.s_rf = new b2ReferenceFace();\r\n  b2EPCollider.s_clipPoints1 = b2ClipVertex.MakeArray(2);\r\n  b2EPCollider.s_clipPoints2 = b2ClipVertex.MakeArray(2);\r\n  b2EPCollider.s_edgeAxis = new b2EPAxis();\r\n  b2EPCollider.s_polygonAxis = new b2EPAxis();\r\n  b2EPCollider.s_n = new b2Vec2();\r\n  b2EPCollider.s_perp = new b2Vec2();\r\n  const b2CollideEdgeAndPolygon_s_collider = new b2EPCollider();\r\n  function b2CollideEdgeAndPolygon(manifold, edgeA, xfA, polygonB, xfB) {\r\n      const collider = b2CollideEdgeAndPolygon_s_collider;\r\n      collider.Collide(manifold, edgeA, xfA, polygonB, xfB);\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// This holds the mass data computed for a shape.\r\n  class b2MassData {\r\n      constructor() {\r\n          /// The mass of the shape, usually in kilograms.\r\n          this.mass = 0;\r\n          /// The position of the shape's centroid relative to the shape's origin.\r\n          this.center = new b2Vec2(0, 0);\r\n          /// The rotational inertia of the shape about the local origin.\r\n          this.I = 0;\r\n      }\r\n  }\r\n  (function (b2ShapeType) {\r\n      b2ShapeType[b2ShapeType[\"e_unknown\"] = -1] = \"e_unknown\";\r\n      b2ShapeType[b2ShapeType[\"e_circleShape\"] = 0] = \"e_circleShape\";\r\n      b2ShapeType[b2ShapeType[\"e_edgeShape\"] = 1] = \"e_edgeShape\";\r\n      b2ShapeType[b2ShapeType[\"e_polygonShape\"] = 2] = \"e_polygonShape\";\r\n      b2ShapeType[b2ShapeType[\"e_chainShape\"] = 3] = \"e_chainShape\";\r\n      b2ShapeType[b2ShapeType[\"e_shapeTypeCount\"] = 4] = \"e_shapeTypeCount\";\r\n  })(exports.b2ShapeType || (exports.b2ShapeType = {}));\r\n  /// A shape is used for collision detection. You can create a shape however you like.\r\n  /// Shapes used for simulation in b2World are created automatically when a b2Fixture\r\n  /// is created. Shapes may encapsulate a one or more child shapes.\r\n  class b2Shape {\r\n      constructor(type, radius) {\r\n          this.m_type = exports.b2ShapeType.e_unknown;\r\n          /// Radius of a shape. For polygonal shapes this must be b2_polygonRadius. There is no support for\r\n          /// making rounded polygons.\r\n          this.m_radius = 0;\r\n          this.m_type = type;\r\n          this.m_radius = radius;\r\n      }\r\n      Copy(other) {\r\n          // DEBUG: b2Assert(this.m_type === other.m_type);\r\n          this.m_radius = other.m_radius;\r\n          return this;\r\n      }\r\n      /// Get the type of this shape. You can use this to down cast to the concrete shape.\r\n      /// @return the shape type.\r\n      GetType() {\r\n          return this.m_type;\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// A circle shape.\r\n  class b2CircleShape extends b2Shape {\r\n      constructor(radius = 0) {\r\n          super(exports.b2ShapeType.e_circleShape, radius);\r\n          this.m_p = new b2Vec2();\r\n      }\r\n      Set(position, radius = this.m_radius) {\r\n          this.m_p.Copy(position);\r\n          this.m_radius = radius;\r\n          return this;\r\n      }\r\n      /// Implement b2Shape.\r\n      Clone() {\r\n          return new b2CircleShape().Copy(this);\r\n      }\r\n      Copy(other) {\r\n          super.Copy(other);\r\n          // DEBUG: b2Assert(other instanceof b2CircleShape);\r\n          this.m_p.Copy(other.m_p);\r\n          return this;\r\n      }\r\n      /// @see b2Shape::GetChildCount\r\n      GetChildCount() {\r\n          return 1;\r\n      }\r\n      TestPoint(transform, p) {\r\n          const center = b2Transform.MulXV(transform, this.m_p, b2CircleShape.TestPoint_s_center);\r\n          const d = b2Vec2.SubVV(p, center, b2CircleShape.TestPoint_s_d);\r\n          return b2Vec2.DotVV(d, d) <= b2Sq(this.m_radius);\r\n      }\r\n      ComputeDistance(xf, p, normal, childIndex) {\r\n          const center = b2Transform.MulXV(xf, this.m_p, b2CircleShape.ComputeDistance_s_center);\r\n          b2Vec2.SubVV(p, center, normal);\r\n          return normal.Normalize() - this.m_radius;\r\n      }\r\n      RayCast(output, input, transform, childIndex) {\r\n          const position = b2Transform.MulXV(transform, this.m_p, b2CircleShape.RayCast_s_position);\r\n          const s = b2Vec2.SubVV(input.p1, position, b2CircleShape.RayCast_s_s);\r\n          const b = b2Vec2.DotVV(s, s) - b2Sq(this.m_radius);\r\n          // Solve quadratic equation.\r\n          const r = b2Vec2.SubVV(input.p2, input.p1, b2CircleShape.RayCast_s_r);\r\n          const c = b2Vec2.DotVV(s, r);\r\n          const rr = b2Vec2.DotVV(r, r);\r\n          const sigma = c * c - rr * b;\r\n          // Check for negative discriminant and short segment.\r\n          if (sigma < 0 || rr < b2_epsilon) {\r\n              return false;\r\n          }\r\n          // Find the point of intersection of the line with the circle.\r\n          let a = (-(c + b2Sqrt(sigma)));\r\n          // Is the intersection point on the segment?\r\n          if (0 <= a && a <= input.maxFraction * rr) {\r\n              a /= rr;\r\n              output.fraction = a;\r\n              b2Vec2.AddVMulSV(s, a, r, output.normal).SelfNormalize();\r\n              return true;\r\n          }\r\n          return false;\r\n      }\r\n      ComputeAABB(aabb, transform, childIndex) {\r\n          const p = b2Transform.MulXV(transform, this.m_p, b2CircleShape.ComputeAABB_s_p);\r\n          aabb.lowerBound.Set(p.x - this.m_radius, p.y - this.m_radius);\r\n          aabb.upperBound.Set(p.x + this.m_radius, p.y + this.m_radius);\r\n      }\r\n      /// @see b2Shape::ComputeMass\r\n      ComputeMass(massData, density) {\r\n          const radius_sq = b2Sq(this.m_radius);\r\n          massData.mass = density * b2_pi * radius_sq;\r\n          massData.center.Copy(this.m_p);\r\n          // inertia about the local origin\r\n          massData.I = massData.mass * (0.5 * radius_sq + b2Vec2.DotVV(this.m_p, this.m_p));\r\n      }\r\n      SetupDistanceProxy(proxy, index) {\r\n          proxy.m_vertices = proxy.m_buffer;\r\n          proxy.m_vertices[0].Copy(this.m_p);\r\n          proxy.m_count = 1;\r\n          proxy.m_radius = this.m_radius;\r\n      }\r\n      ComputeSubmergedArea(normal, offset, xf, c) {\r\n          const p = b2Transform.MulXV(xf, this.m_p, new b2Vec2());\r\n          const l = (-(b2Vec2.DotVV(normal, p) - offset));\r\n          if (l < (-this.m_radius) + b2_epsilon) {\r\n              // Completely dry\r\n              return 0;\r\n          }\r\n          if (l > this.m_radius) {\r\n              // Completely wet\r\n              c.Copy(p);\r\n              return b2_pi * this.m_radius * this.m_radius;\r\n          }\r\n          // Magic\r\n          const r2 = this.m_radius * this.m_radius;\r\n          const l2 = l * l;\r\n          const area = r2 * (b2Asin(l / this.m_radius) + b2_pi / 2) + l * b2Sqrt(r2 - l2);\r\n          const com = (-2 / 3 * b2Pow(r2 - l2, 1.5) / area);\r\n          c.x = p.x + normal.x * com;\r\n          c.y = p.y + normal.y * com;\r\n          return area;\r\n      }\r\n      Dump(log) {\r\n          log(\"    const shape: b2CircleShape = new b2CircleShape();\\n\");\r\n          log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n          log(\"    shape.m_p.Set(%.15f, %.15f);\\n\", this.m_p.x, this.m_p.y);\r\n      }\r\n  }\r\n  /// Implement b2Shape.\r\n  b2CircleShape.TestPoint_s_center = new b2Vec2();\r\n  b2CircleShape.TestPoint_s_d = new b2Vec2();\r\n  // #if B2_ENABLE_PARTICLE\r\n  /// @see b2Shape::ComputeDistance\r\n  b2CircleShape.ComputeDistance_s_center = new b2Vec2();\r\n  // #endif\r\n  /// Implement b2Shape.\r\n  // Collision Detection in Interactive 3D Environments by Gino van den Bergen\r\n  // From Section 3.1.2\r\n  // x = s + a * r\r\n  // norm(x) = radius\r\n  b2CircleShape.RayCast_s_position = new b2Vec2();\r\n  b2CircleShape.RayCast_s_s = new b2Vec2();\r\n  b2CircleShape.RayCast_s_r = new b2Vec2();\r\n  /// @see b2Shape::ComputeAABB\r\n  b2CircleShape.ComputeAABB_s_p = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// A convex polygon. It is assumed that the interior of the polygon is to\r\n  /// the left of each edge.\r\n  /// In most cases you should not need many vertices for a convex polygon.\r\n  class b2PolygonShape extends b2Shape {\r\n      constructor() {\r\n          super(exports.b2ShapeType.e_polygonShape, b2_polygonRadius);\r\n          this.m_centroid = new b2Vec2(0, 0);\r\n          this.m_vertices = [];\r\n          this.m_normals = [];\r\n          this.m_count = 0;\r\n      }\r\n      /// Implement b2Shape.\r\n      Clone() {\r\n          return new b2PolygonShape().Copy(this);\r\n      }\r\n      Copy(other) {\r\n          super.Copy(other);\r\n          // DEBUG: b2Assert(other instanceof b2PolygonShape);\r\n          this.m_centroid.Copy(other.m_centroid);\r\n          this.m_count = other.m_count;\r\n          this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n          this.m_normals = b2Vec2.MakeArray(this.m_count);\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              this.m_vertices[i].Copy(other.m_vertices[i]);\r\n              this.m_normals[i].Copy(other.m_normals[i]);\r\n          }\r\n          return this;\r\n      }\r\n      /// @see b2Shape::GetChildCount\r\n      GetChildCount() {\r\n          return 1;\r\n      }\r\n      Set(vertices, count = vertices.length, start = 0) {\r\n          // DEBUG: b2Assert(3 <= count);\r\n          if (count < 3) {\r\n              return this.SetAsBox(1, 1);\r\n          }\r\n          let n = count;\r\n          // Perform welding and copy vertices into local buffer.\r\n          const ps = [];\r\n          for (let i = 0; i < n; ++i) {\r\n              const /*b2Vec2*/ v = vertices[start + i];\r\n              let /*bool*/ unique = true;\r\n              for (let /*int32*/ j = 0; j < ps.length; ++j) {\r\n                  if (b2Vec2.DistanceSquaredVV(v, ps[j]) < ((0.5 * b2_linearSlop) * (0.5 * b2_linearSlop))) {\r\n                      unique = false;\r\n                      break;\r\n                  }\r\n              }\r\n              if (unique) {\r\n                  ps.push(v);\r\n              }\r\n          }\r\n          n = ps.length;\r\n          if (n < 3) {\r\n              // Polygon is degenerate.\r\n              // DEBUG: b2Assert(false);\r\n              return this.SetAsBox(1.0, 1.0);\r\n          }\r\n          // Create the convex hull using the Gift wrapping algorithm\r\n          // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\r\n          // Find the right most point on the hull\r\n          let i0 = 0;\r\n          let x0 = ps[0].x;\r\n          for (let i = 1; i < n; ++i) {\r\n              const x = ps[i].x;\r\n              if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\r\n                  i0 = i;\r\n                  x0 = x;\r\n              }\r\n          }\r\n          const hull = [];\r\n          let m = 0;\r\n          let ih = i0;\r\n          for (;;) {\r\n              hull[m] = ih;\r\n              let ie = 0;\r\n              for (let j = 1; j < n; ++j) {\r\n                  if (ie === ih) {\r\n                      ie = j;\r\n                      continue;\r\n                  }\r\n                  const r = b2Vec2.SubVV(ps[ie], ps[hull[m]], b2PolygonShape.Set_s_r);\r\n                  const v = b2Vec2.SubVV(ps[j], ps[hull[m]], b2PolygonShape.Set_s_v);\r\n                  const c = b2Vec2.CrossVV(r, v);\r\n                  if (c < 0) {\r\n                      ie = j;\r\n                  }\r\n                  // Collinearity check\r\n                  if (c === 0 && v.LengthSquared() > r.LengthSquared()) {\r\n                      ie = j;\r\n                  }\r\n              }\r\n              ++m;\r\n              ih = ie;\r\n              if (ie === i0) {\r\n                  break;\r\n              }\r\n          }\r\n          this.m_count = m;\r\n          this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n          this.m_normals = b2Vec2.MakeArray(this.m_count);\r\n          // Copy vertices.\r\n          for (let i = 0; i < m; ++i) {\r\n              this.m_vertices[i].Copy(ps[hull[i]]);\r\n          }\r\n          // Compute normals. Ensure the edges have non-zero length.\r\n          for (let i = 0; i < m; ++i) {\r\n              const vertexi1 = this.m_vertices[i];\r\n              const vertexi2 = this.m_vertices[(i + 1) % m];\r\n              const edge = b2Vec2.SubVV(vertexi2, vertexi1, b2Vec2.s_t0); // edge uses s_t0\r\n              // DEBUG: b2Assert(edge.LengthSquared() > b2_epsilon_sq);\r\n              b2Vec2.CrossVOne(edge, this.m_normals[i]).SelfNormalize();\r\n          }\r\n          // Compute the polygon centroid.\r\n          b2PolygonShape.ComputeCentroid(this.m_vertices, m, this.m_centroid);\r\n          return this;\r\n      }\r\n      SetAsArray(vertices, count = vertices.length) {\r\n          return this.Set(vertices, count);\r\n      }\r\n      /// Build vertices to represent an axis-aligned box or an oriented box.\r\n      /// @param hx the half-width.\r\n      /// @param hy the half-height.\r\n      /// @param center the center of the box in local coordinates.\r\n      /// @param angle the rotation of the box in local coordinates.\r\n      SetAsBox(hx, hy, center, angle = 0) {\r\n          this.m_count = 4;\r\n          this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n          this.m_normals = b2Vec2.MakeArray(this.m_count);\r\n          this.m_vertices[0].Set((-hx), (-hy));\r\n          this.m_vertices[1].Set(hx, (-hy));\r\n          this.m_vertices[2].Set(hx, hy);\r\n          this.m_vertices[3].Set((-hx), hy);\r\n          this.m_normals[0].Set(0, (-1));\r\n          this.m_normals[1].Set(1, 0);\r\n          this.m_normals[2].Set(0, 1);\r\n          this.m_normals[3].Set((-1), 0);\r\n          this.m_centroid.SetZero();\r\n          if (center) {\r\n              this.m_centroid.Copy(center);\r\n              const xf = new b2Transform();\r\n              xf.SetPosition(center);\r\n              xf.SetRotationAngle(angle);\r\n              // Transform vertices and normals.\r\n              for (let i = 0; i < this.m_count; ++i) {\r\n                  b2Transform.MulXV(xf, this.m_vertices[i], this.m_vertices[i]);\r\n                  b2Rot.MulRV(xf.q, this.m_normals[i], this.m_normals[i]);\r\n              }\r\n          }\r\n          return this;\r\n      }\r\n      TestPoint(xf, p) {\r\n          const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.TestPoint_s_pLocal);\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n              if (dot > 0) {\r\n                  return false;\r\n              }\r\n          }\r\n          return true;\r\n      }\r\n      ComputeDistance(xf, p, normal, childIndex) {\r\n          const pLocal = b2Transform.MulTXV(xf, p, b2PolygonShape.ComputeDistance_s_pLocal);\r\n          let maxDistance = -b2_maxFloat;\r\n          const normalForMaxDistance = b2PolygonShape.ComputeDistance_s_normalForMaxDistance.Copy(pLocal);\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const dot = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(pLocal, this.m_vertices[i], b2Vec2.s_t0));\r\n              if (dot > maxDistance) {\r\n                  maxDistance = dot;\r\n                  normalForMaxDistance.Copy(this.m_normals[i]);\r\n              }\r\n          }\r\n          if (maxDistance > 0) {\r\n              const minDistance = b2PolygonShape.ComputeDistance_s_minDistance.Copy(normalForMaxDistance);\r\n              let minDistance2 = maxDistance * maxDistance;\r\n              for (let i = 0; i < this.m_count; ++i) {\r\n                  const distance = b2Vec2.SubVV(pLocal, this.m_vertices[i], b2PolygonShape.ComputeDistance_s_distance);\r\n                  const distance2 = distance.LengthSquared();\r\n                  if (minDistance2 > distance2) {\r\n                      minDistance.Copy(distance);\r\n                      minDistance2 = distance2;\r\n                  }\r\n              }\r\n              b2Rot.MulRV(xf.q, minDistance, normal);\r\n              normal.Normalize();\r\n              return Math.sqrt(minDistance2);\r\n          }\r\n          else {\r\n              b2Rot.MulRV(xf.q, normalForMaxDistance, normal);\r\n              return maxDistance;\r\n          }\r\n      }\r\n      RayCast(output, input, xf, childIndex) {\r\n          // Put the ray into the polygon's frame of reference.\r\n          const p1 = b2Transform.MulTXV(xf, input.p1, b2PolygonShape.RayCast_s_p1);\r\n          const p2 = b2Transform.MulTXV(xf, input.p2, b2PolygonShape.RayCast_s_p2);\r\n          const d = b2Vec2.SubVV(p2, p1, b2PolygonShape.RayCast_s_d);\r\n          let lower = 0, upper = input.maxFraction;\r\n          let index = -1;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              // p = p1 + a * d\r\n              // dot(normal, p - v) = 0\r\n              // dot(normal, p1 - v) + a * dot(normal, d) = 0\r\n              const numerator = b2Vec2.DotVV(this.m_normals[i], b2Vec2.SubVV(this.m_vertices[i], p1, b2Vec2.s_t0));\r\n              const denominator = b2Vec2.DotVV(this.m_normals[i], d);\r\n              if (denominator === 0) {\r\n                  if (numerator < 0) {\r\n                      return false;\r\n                  }\r\n              }\r\n              else {\r\n                  // Note: we want this predicate without division:\r\n                  // lower < numerator / denominator, where denominator < 0\r\n                  // Since denominator < 0, we have to flip the inequality:\r\n                  // lower < numerator / denominator <==> denominator * lower > numerator.\r\n                  if (denominator < 0 && numerator < lower * denominator) {\r\n                      // Increase lower.\r\n                      // The segment enters this half-space.\r\n                      lower = numerator / denominator;\r\n                      index = i;\r\n                  }\r\n                  else if (denominator > 0 && numerator < upper * denominator) {\r\n                      // Decrease upper.\r\n                      // The segment exits this half-space.\r\n                      upper = numerator / denominator;\r\n                  }\r\n              }\r\n              // The use of epsilon here causes the assert on lower to trip\r\n              // in some cases. Apparently the use of epsilon was to make edge\r\n              // shapes work, but now those are handled separately.\r\n              // if (upper < lower - b2_epsilon)\r\n              if (upper < lower) {\r\n                  return false;\r\n              }\r\n          }\r\n          // DEBUG: b2Assert(0 <= lower && lower <= input.maxFraction);\r\n          if (index >= 0) {\r\n              output.fraction = lower;\r\n              b2Rot.MulRV(xf.q, this.m_normals[index], output.normal);\r\n              return true;\r\n          }\r\n          return false;\r\n      }\r\n      ComputeAABB(aabb, xf, childIndex) {\r\n          const lower = b2Transform.MulXV(xf, this.m_vertices[0], aabb.lowerBound);\r\n          const upper = aabb.upperBound.Copy(lower);\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const v = b2Transform.MulXV(xf, this.m_vertices[i], b2PolygonShape.ComputeAABB_s_v);\r\n              b2Vec2.MinV(v, lower, lower);\r\n              b2Vec2.MaxV(v, upper, upper);\r\n          }\r\n          const r = this.m_radius;\r\n          lower.SelfSubXY(r, r);\r\n          upper.SelfAddXY(r, r);\r\n      }\r\n      ComputeMass(massData, density) {\r\n          // Polygon mass, centroid, and inertia.\r\n          // Let rho be the polygon density in mass per unit area.\r\n          // Then:\r\n          // mass = rho * int(dA)\r\n          // centroid.x = (1/mass) * rho * int(x * dA)\r\n          // centroid.y = (1/mass) * rho * int(y * dA)\r\n          // I = rho * int((x*x + y*y) * dA)\r\n          //\r\n          // We can compute these integrals by summing all the integrals\r\n          // for each triangle of the polygon. To evaluate the integral\r\n          // for a single triangle, we make a change of variables to\r\n          // the (u,v) coordinates of the triangle:\r\n          // x = x0 + e1x * u + e2x * v\r\n          // y = y0 + e1y * u + e2y * v\r\n          // where 0 <= u && 0 <= v && u + v <= 1.\r\n          //\r\n          // We integrate u from [0,1-v] and then v from [0,1].\r\n          // We also need to use the Jacobian of the transformation:\r\n          // D = cross(e1, e2)\r\n          //\r\n          // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\r\n          //\r\n          // The rest of the derivation is handled by computer algebra.\r\n          // DEBUG: b2Assert(this.m_count >= 3);\r\n          const center = b2PolygonShape.ComputeMass_s_center.SetZero();\r\n          let area = 0;\r\n          let I = 0;\r\n          // s is the reference point for forming triangles.\r\n          // It's location doesn't change the result (except for rounding error).\r\n          const s = b2PolygonShape.ComputeMass_s_s.SetZero();\r\n          // This code would put the reference point inside the polygon.\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              s.SelfAdd(this.m_vertices[i]);\r\n          }\r\n          s.SelfMul(1 / this.m_count);\r\n          const k_inv3 = 1 / 3;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              // Triangle vertices.\r\n              const e1 = b2Vec2.SubVV(this.m_vertices[i], s, b2PolygonShape.ComputeMass_s_e1);\r\n              const e2 = b2Vec2.SubVV(this.m_vertices[(i + 1) % this.m_count], s, b2PolygonShape.ComputeMass_s_e2);\r\n              const D = b2Vec2.CrossVV(e1, e2);\r\n              const triangleArea = 0.5 * D;\r\n              area += triangleArea;\r\n              // Area weighted centroid\r\n              center.SelfAdd(b2Vec2.MulSV(triangleArea * k_inv3, b2Vec2.AddVV(e1, e2, b2Vec2.s_t0), b2Vec2.s_t1));\r\n              const ex1 = e1.x;\r\n              const ey1 = e1.y;\r\n              const ex2 = e2.x;\r\n              const ey2 = e2.y;\r\n              const intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\r\n              const inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\r\n              I += (0.25 * k_inv3 * D) * (intx2 + inty2);\r\n          }\r\n          // Total mass\r\n          massData.mass = density * area;\r\n          // Center of mass\r\n          // DEBUG: b2Assert(area > b2_epsilon);\r\n          center.SelfMul(1 / area);\r\n          b2Vec2.AddVV(center, s, massData.center);\r\n          // Inertia tensor relative to the local origin (point s).\r\n          massData.I = density * I;\r\n          // Shift to center of mass then to original body origin.\r\n          massData.I += massData.mass * (b2Vec2.DotVV(massData.center, massData.center) - b2Vec2.DotVV(center, center));\r\n      }\r\n      Validate() {\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const i1 = i;\r\n              const i2 = (i + 1) % this.m_count;\r\n              const p = this.m_vertices[i1];\r\n              const e = b2Vec2.SubVV(this.m_vertices[i2], p, b2PolygonShape.Validate_s_e);\r\n              for (let j = 0; j < this.m_count; ++j) {\r\n                  if (j === i1 || j === i2) {\r\n                      continue;\r\n                  }\r\n                  const v = b2Vec2.SubVV(this.m_vertices[j], p, b2PolygonShape.Validate_s_v);\r\n                  const c = b2Vec2.CrossVV(e, v);\r\n                  if (c < 0) {\r\n                      return false;\r\n                  }\r\n              }\r\n          }\r\n          return true;\r\n      }\r\n      SetupDistanceProxy(proxy, index) {\r\n          proxy.m_vertices = this.m_vertices;\r\n          proxy.m_count = this.m_count;\r\n          proxy.m_radius = this.m_radius;\r\n      }\r\n      ComputeSubmergedArea(normal, offset, xf, c) {\r\n          // Transform plane into shape co-ordinates\r\n          const normalL = b2Rot.MulTRV(xf.q, normal, b2PolygonShape.ComputeSubmergedArea_s_normalL);\r\n          const offsetL = offset - b2Vec2.DotVV(normal, xf.p);\r\n          const depths = [];\r\n          let diveCount = 0;\r\n          let intoIndex = -1;\r\n          let outoIndex = -1;\r\n          let lastSubmerged = false;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              depths[i] = b2Vec2.DotVV(normalL, this.m_vertices[i]) - offsetL;\r\n              const isSubmerged = depths[i] < (-b2_epsilon);\r\n              if (i > 0) {\r\n                  if (isSubmerged) {\r\n                      if (!lastSubmerged) {\r\n                          intoIndex = i - 1;\r\n                          diveCount++;\r\n                      }\r\n                  }\r\n                  else {\r\n                      if (lastSubmerged) {\r\n                          outoIndex = i - 1;\r\n                          diveCount++;\r\n                      }\r\n                  }\r\n              }\r\n              lastSubmerged = isSubmerged;\r\n          }\r\n          switch (diveCount) {\r\n              case 0:\r\n                  if (lastSubmerged) {\r\n                      // Completely submerged\r\n                      const md = b2PolygonShape.ComputeSubmergedArea_s_md;\r\n                      this.ComputeMass(md, 1);\r\n                      b2Transform.MulXV(xf, md.center, c);\r\n                      return md.mass;\r\n                  }\r\n                  else {\r\n                      // Completely dry\r\n                      return 0;\r\n                  }\r\n              case 1:\r\n                  if (intoIndex === (-1)) {\r\n                      intoIndex = this.m_count - 1;\r\n                  }\r\n                  else {\r\n                      outoIndex = this.m_count - 1;\r\n                  }\r\n                  break;\r\n          }\r\n          const intoIndex2 = ((intoIndex + 1) % this.m_count);\r\n          const outoIndex2 = ((outoIndex + 1) % this.m_count);\r\n          const intoLamdda = (0 - depths[intoIndex]) / (depths[intoIndex2] - depths[intoIndex]);\r\n          const outoLamdda = (0 - depths[outoIndex]) / (depths[outoIndex2] - depths[outoIndex]);\r\n          const intoVec = b2PolygonShape.ComputeSubmergedArea_s_intoVec.Set(this.m_vertices[intoIndex].x * (1 - intoLamdda) + this.m_vertices[intoIndex2].x * intoLamdda, this.m_vertices[intoIndex].y * (1 - intoLamdda) + this.m_vertices[intoIndex2].y * intoLamdda);\r\n          const outoVec = b2PolygonShape.ComputeSubmergedArea_s_outoVec.Set(this.m_vertices[outoIndex].x * (1 - outoLamdda) + this.m_vertices[outoIndex2].x * outoLamdda, this.m_vertices[outoIndex].y * (1 - outoLamdda) + this.m_vertices[outoIndex2].y * outoLamdda);\r\n          // Initialize accumulator\r\n          let area = 0;\r\n          const center = b2PolygonShape.ComputeSubmergedArea_s_center.SetZero();\r\n          let p2 = this.m_vertices[intoIndex2];\r\n          let p3;\r\n          // An awkward loop from intoIndex2+1 to outIndex2\r\n          let i = intoIndex2;\r\n          while (i !== outoIndex2) {\r\n              i = (i + 1) % this.m_count;\r\n              if (i === outoIndex2) {\r\n                  p3 = outoVec;\r\n              }\r\n              else {\r\n                  p3 = this.m_vertices[i];\r\n              }\r\n              const triangleArea = 0.5 * ((p2.x - intoVec.x) * (p3.y - intoVec.y) - (p2.y - intoVec.y) * (p3.x - intoVec.x));\r\n              area += triangleArea;\r\n              // Area weighted centroid\r\n              center.x += triangleArea * (intoVec.x + p2.x + p3.x) / 3;\r\n              center.y += triangleArea * (intoVec.y + p2.y + p3.y) / 3;\r\n              p2 = p3;\r\n          }\r\n          // Normalize and transform centroid\r\n          center.SelfMul(1 / area);\r\n          b2Transform.MulXV(xf, center, c);\r\n          return area;\r\n      }\r\n      Dump(log) {\r\n          log(\"    const shape: b2PolygonShape = new b2PolygonShape();\\n\");\r\n          log(\"    const vs: b2Vec2[] = [];\\n\");\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              log(\"    vs[%d] = new b2Vec2(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n          }\r\n          log(\"    shape.Set(vs, %d);\\n\", this.m_count);\r\n      }\r\n      static ComputeCentroid(vs, count, out) {\r\n          // DEBUG: b2Assert(count >= 3);\r\n          const c = out;\r\n          c.SetZero();\r\n          let area = 0;\r\n          // s is the reference point for forming triangles.\r\n          // It's location doesn't change the result (except for rounding error).\r\n          const pRef = b2PolygonShape.ComputeCentroid_s_pRef.SetZero();\r\n          /*\r\n      #if 0\r\n          // This code would put the reference point inside the polygon.\r\n          for (let i: number = 0; i < count; ++i) {\r\n            pRef.SelfAdd(vs[i]);\r\n          }\r\n          pRef.SelfMul(1 / count);\r\n      #endif\r\n          */\r\n          const inv3 = 1 / 3;\r\n          for (let i = 0; i < count; ++i) {\r\n              // Triangle vertices.\r\n              const p1 = pRef;\r\n              const p2 = vs[i];\r\n              const p3 = vs[(i + 1) % count];\r\n              const e1 = b2Vec2.SubVV(p2, p1, b2PolygonShape.ComputeCentroid_s_e1);\r\n              const e2 = b2Vec2.SubVV(p3, p1, b2PolygonShape.ComputeCentroid_s_e2);\r\n              const D = b2Vec2.CrossVV(e1, e2);\r\n              const triangleArea = 0.5 * D;\r\n              area += triangleArea;\r\n              // Area weighted centroid\r\n              c.x += triangleArea * inv3 * (p1.x + p2.x + p3.x);\r\n              c.y += triangleArea * inv3 * (p1.y + p2.y + p3.y);\r\n          }\r\n          // Centroid\r\n          // DEBUG: b2Assert(area > b2_epsilon);\r\n          c.SelfMul(1 / area);\r\n          return c;\r\n      }\r\n  }\r\n  /// Create a convex hull from the given array of points.\r\n  /// @warning the points may be re-ordered, even if they form a convex polygon\r\n  /// @warning collinear points are handled but not removed. Collinear points\r\n  /// may lead to poor stacking behavior.\r\n  b2PolygonShape.Set_s_r = new b2Vec2();\r\n  b2PolygonShape.Set_s_v = new b2Vec2();\r\n  /// @see b2Shape::TestPoint\r\n  b2PolygonShape.TestPoint_s_pLocal = new b2Vec2();\r\n  // #if B2_ENABLE_PARTICLE\r\n  /// @see b2Shape::ComputeDistance\r\n  b2PolygonShape.ComputeDistance_s_pLocal = new b2Vec2();\r\n  b2PolygonShape.ComputeDistance_s_normalForMaxDistance = new b2Vec2();\r\n  b2PolygonShape.ComputeDistance_s_minDistance = new b2Vec2();\r\n  b2PolygonShape.ComputeDistance_s_distance = new b2Vec2();\r\n  // #endif\r\n  /// Implement b2Shape.\r\n  b2PolygonShape.RayCast_s_p1 = new b2Vec2();\r\n  b2PolygonShape.RayCast_s_p2 = new b2Vec2();\r\n  b2PolygonShape.RayCast_s_d = new b2Vec2();\r\n  /// @see b2Shape::ComputeAABB\r\n  b2PolygonShape.ComputeAABB_s_v = new b2Vec2();\r\n  /// @see b2Shape::ComputeMass\r\n  b2PolygonShape.ComputeMass_s_center = new b2Vec2();\r\n  b2PolygonShape.ComputeMass_s_s = new b2Vec2();\r\n  b2PolygonShape.ComputeMass_s_e1 = new b2Vec2();\r\n  b2PolygonShape.ComputeMass_s_e2 = new b2Vec2();\r\n  b2PolygonShape.Validate_s_e = new b2Vec2();\r\n  b2PolygonShape.Validate_s_v = new b2Vec2();\r\n  b2PolygonShape.ComputeSubmergedArea_s_normalL = new b2Vec2();\r\n  b2PolygonShape.ComputeSubmergedArea_s_md = new b2MassData();\r\n  b2PolygonShape.ComputeSubmergedArea_s_intoVec = new b2Vec2();\r\n  b2PolygonShape.ComputeSubmergedArea_s_outoVec = new b2Vec2();\r\n  b2PolygonShape.ComputeSubmergedArea_s_center = new b2Vec2();\r\n  b2PolygonShape.ComputeCentroid_s_pRef = new b2Vec2();\r\n  b2PolygonShape.ComputeCentroid_s_e1 = new b2Vec2();\r\n  b2PolygonShape.ComputeCentroid_s_e2 = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// A line segment (edge) shape. These can be connected in chains or loops\r\n  /// to other edge shapes. The connectivity information is used to ensure\r\n  /// correct contact normals.\r\n  class b2EdgeShape extends b2Shape {\r\n      constructor() {\r\n          super(exports.b2ShapeType.e_edgeShape, b2_polygonRadius);\r\n          this.m_vertex1 = new b2Vec2();\r\n          this.m_vertex2 = new b2Vec2();\r\n          this.m_vertex0 = new b2Vec2();\r\n          this.m_vertex3 = new b2Vec2();\r\n          this.m_hasVertex0 = false;\r\n          this.m_hasVertex3 = false;\r\n      }\r\n      /// Set this as an isolated edge.\r\n      Set(v1, v2) {\r\n          this.m_vertex1.Copy(v1);\r\n          this.m_vertex2.Copy(v2);\r\n          this.m_hasVertex0 = false;\r\n          this.m_hasVertex3 = false;\r\n          return this;\r\n      }\r\n      /// Implement b2Shape.\r\n      Clone() {\r\n          return new b2EdgeShape().Copy(this);\r\n      }\r\n      Copy(other) {\r\n          super.Copy(other);\r\n          // DEBUG: b2Assert(other instanceof b2EdgeShape);\r\n          this.m_vertex1.Copy(other.m_vertex1);\r\n          this.m_vertex2.Copy(other.m_vertex2);\r\n          this.m_vertex0.Copy(other.m_vertex0);\r\n          this.m_vertex3.Copy(other.m_vertex3);\r\n          this.m_hasVertex0 = other.m_hasVertex0;\r\n          this.m_hasVertex3 = other.m_hasVertex3;\r\n          return this;\r\n      }\r\n      /// @see b2Shape::GetChildCount\r\n      GetChildCount() {\r\n          return 1;\r\n      }\r\n      /// @see b2Shape::TestPoint\r\n      TestPoint(xf, p) {\r\n          return false;\r\n      }\r\n      ComputeDistance(xf, p, normal, childIndex) {\r\n          const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeDistance_s_v1);\r\n          const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeDistance_s_v2);\r\n          const d = b2Vec2.SubVV(p, v1, b2EdgeShape.ComputeDistance_s_d);\r\n          const s = b2Vec2.SubVV(v2, v1, b2EdgeShape.ComputeDistance_s_s);\r\n          const ds = b2Vec2.DotVV(d, s);\r\n          if (ds > 0) {\r\n              const s2 = b2Vec2.DotVV(s, s);\r\n              if (ds > s2) {\r\n                  b2Vec2.SubVV(p, v2, d);\r\n              }\r\n              else {\r\n                  d.SelfMulSub(ds / s2, s);\r\n              }\r\n          }\r\n          normal.Copy(d);\r\n          return normal.Normalize();\r\n      }\r\n      RayCast(output, input, xf, childIndex) {\r\n          // Put the ray into the edge's frame of reference.\r\n          const p1 = b2Transform.MulTXV(xf, input.p1, b2EdgeShape.RayCast_s_p1);\r\n          const p2 = b2Transform.MulTXV(xf, input.p2, b2EdgeShape.RayCast_s_p2);\r\n          const d = b2Vec2.SubVV(p2, p1, b2EdgeShape.RayCast_s_d);\r\n          const v1 = this.m_vertex1;\r\n          const v2 = this.m_vertex2;\r\n          const e = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_e);\r\n          const normal = output.normal.Set(e.y, -e.x).SelfNormalize();\r\n          // q = p1 + t * d\r\n          // dot(normal, q - v1) = 0\r\n          // dot(normal, p1 - v1) + t * dot(normal, d) = 0\r\n          const numerator = b2Vec2.DotVV(normal, b2Vec2.SubVV(v1, p1, b2Vec2.s_t0));\r\n          const denominator = b2Vec2.DotVV(normal, d);\r\n          if (denominator === 0) {\r\n              return false;\r\n          }\r\n          const t = numerator / denominator;\r\n          if (t < 0 || input.maxFraction < t) {\r\n              return false;\r\n          }\r\n          const q = b2Vec2.AddVMulSV(p1, t, d, b2EdgeShape.RayCast_s_q);\r\n          // q = v1 + s * r\r\n          // s = dot(q - v1, r) / dot(r, r)\r\n          const r = b2Vec2.SubVV(v2, v1, b2EdgeShape.RayCast_s_r);\r\n          const rr = b2Vec2.DotVV(r, r);\r\n          if (rr === 0) {\r\n              return false;\r\n          }\r\n          const s = b2Vec2.DotVV(b2Vec2.SubVV(q, v1, b2Vec2.s_t0), r) / rr;\r\n          if (s < 0 || 1 < s) {\r\n              return false;\r\n          }\r\n          output.fraction = t;\r\n          b2Rot.MulRV(xf.q, output.normal, output.normal);\r\n          if (numerator > 0) {\r\n              output.normal.SelfNeg();\r\n          }\r\n          return true;\r\n      }\r\n      ComputeAABB(aabb, xf, childIndex) {\r\n          const v1 = b2Transform.MulXV(xf, this.m_vertex1, b2EdgeShape.ComputeAABB_s_v1);\r\n          const v2 = b2Transform.MulXV(xf, this.m_vertex2, b2EdgeShape.ComputeAABB_s_v2);\r\n          b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n          b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n          const r = this.m_radius;\r\n          aabb.lowerBound.SelfSubXY(r, r);\r\n          aabb.upperBound.SelfAddXY(r, r);\r\n      }\r\n      /// @see b2Shape::ComputeMass\r\n      ComputeMass(massData, density) {\r\n          massData.mass = 0;\r\n          b2Vec2.MidVV(this.m_vertex1, this.m_vertex2, massData.center);\r\n          massData.I = 0;\r\n      }\r\n      SetupDistanceProxy(proxy, index) {\r\n          proxy.m_vertices = proxy.m_buffer;\r\n          proxy.m_vertices[0].Copy(this.m_vertex1);\r\n          proxy.m_vertices[1].Copy(this.m_vertex2);\r\n          proxy.m_count = 2;\r\n          proxy.m_radius = this.m_radius;\r\n      }\r\n      ComputeSubmergedArea(normal, offset, xf, c) {\r\n          c.SetZero();\r\n          return 0;\r\n      }\r\n      Dump(log) {\r\n          log(\"    const shape: b2EdgeShape = new b2EdgeShape();\\n\");\r\n          log(\"    shape.m_radius = %.15f;\\n\", this.m_radius);\r\n          log(\"    shape.m_vertex0.Set(%.15f, %.15f);\\n\", this.m_vertex0.x, this.m_vertex0.y);\r\n          log(\"    shape.m_vertex1.Set(%.15f, %.15f);\\n\", this.m_vertex1.x, this.m_vertex1.y);\r\n          log(\"    shape.m_vertex2.Set(%.15f, %.15f);\\n\", this.m_vertex2.x, this.m_vertex2.y);\r\n          log(\"    shape.m_vertex3.Set(%.15f, %.15f);\\n\", this.m_vertex3.x, this.m_vertex3.y);\r\n          log(\"    shape.m_hasVertex0 = %s;\\n\", this.m_hasVertex0);\r\n          log(\"    shape.m_hasVertex3 = %s;\\n\", this.m_hasVertex3);\r\n      }\r\n  }\r\n  // #if B2_ENABLE_PARTICLE\r\n  /// @see b2Shape::ComputeDistance\r\n  b2EdgeShape.ComputeDistance_s_v1 = new b2Vec2();\r\n  b2EdgeShape.ComputeDistance_s_v2 = new b2Vec2();\r\n  b2EdgeShape.ComputeDistance_s_d = new b2Vec2();\r\n  b2EdgeShape.ComputeDistance_s_s = new b2Vec2();\r\n  // #endif\r\n  /// Implement b2Shape.\r\n  // p = p1 + t * d\r\n  // v = v1 + s * e\r\n  // p1 + t * d = v1 + s * e\r\n  // s * e - t * d = p1 - v1\r\n  b2EdgeShape.RayCast_s_p1 = new b2Vec2();\r\n  b2EdgeShape.RayCast_s_p2 = new b2Vec2();\r\n  b2EdgeShape.RayCast_s_d = new b2Vec2();\r\n  b2EdgeShape.RayCast_s_e = new b2Vec2();\r\n  b2EdgeShape.RayCast_s_q = new b2Vec2();\r\n  b2EdgeShape.RayCast_s_r = new b2Vec2();\r\n  /// @see b2Shape::ComputeAABB\r\n  b2EdgeShape.ComputeAABB_s_v1 = new b2Vec2();\r\n  b2EdgeShape.ComputeAABB_s_v2 = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2010 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// A chain shape is a free form sequence of line segments.\r\n  /// The chain has two-sided collision, so you can use inside and outside collision.\r\n  /// Therefore, you may use any winding order.\r\n  /// Since there may be many vertices, they are allocated using b2Alloc.\r\n  /// Connectivity information is used to create smooth collisions.\r\n  /// WARNING: The chain will not collide properly if there are self-intersections.\r\n  class b2ChainShape extends b2Shape {\r\n      constructor() {\r\n          super(exports.b2ShapeType.e_chainShape, b2_polygonRadius);\r\n          this.m_vertices = [];\r\n          this.m_count = 0;\r\n          this.m_prevVertex = new b2Vec2();\r\n          this.m_nextVertex = new b2Vec2();\r\n          this.m_hasPrevVertex = false;\r\n          this.m_hasNextVertex = false;\r\n      }\r\n      /// Create a loop. This automatically adjusts connectivity.\r\n      /// @param vertices an array of vertices, these are copied\r\n      /// @param count the vertex count\r\n      CreateLoop(vertices, count = vertices.length, start = 0) {\r\n          // DEBUG: b2Assert(count >= 3);\r\n          if (count < 3) {\r\n              return this;\r\n          }\r\n          // DEBUG: for (let i: number = 1; i < count; ++i) {\r\n          // DEBUG:   const v1 = vertices[start + i - 1];\r\n          // DEBUG:   const v2 = vertices[start + i];\r\n          // DEBUG:   // If the code crashes here, it means your vertices are too close together.\r\n          // DEBUG:   b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n          // DEBUG: }\r\n          this.m_count = count + 1;\r\n          this.m_vertices = b2Vec2.MakeArray(this.m_count);\r\n          for (let i = 0; i < count; ++i) {\r\n              this.m_vertices[i].Copy(vertices[start + i]);\r\n          }\r\n          this.m_vertices[count].Copy(this.m_vertices[0]);\r\n          this.m_prevVertex.Copy(this.m_vertices[this.m_count - 2]);\r\n          this.m_nextVertex.Copy(this.m_vertices[1]);\r\n          this.m_hasPrevVertex = true;\r\n          this.m_hasNextVertex = true;\r\n          return this;\r\n      }\r\n      /// Create a chain with isolated end vertices.\r\n      /// @param vertices an array of vertices, these are copied\r\n      /// @param count the vertex count\r\n      CreateChain(vertices, count = vertices.length, start = 0) {\r\n          // DEBUG: b2Assert(count >= 2);\r\n          // DEBUG: for (let i: number = 1; i < count; ++i) {\r\n          // DEBUG:   const v1 = vertices[start + i - 1];\r\n          // DEBUG:   const v2 = vertices[start + i];\r\n          // DEBUG:   // If the code crashes here, it means your vertices are too close together.\r\n          // DEBUG:   b2Assert(b2Vec2.DistanceSquaredVV(v1, v2) > b2_linearSlop * b2_linearSlop);\r\n          // DEBUG: }\r\n          this.m_count = count;\r\n          this.m_vertices = b2Vec2.MakeArray(count);\r\n          for (let i = 0; i < count; ++i) {\r\n              this.m_vertices[i].Copy(vertices[start + i]);\r\n          }\r\n          this.m_hasPrevVertex = false;\r\n          this.m_hasNextVertex = false;\r\n          this.m_prevVertex.SetZero();\r\n          this.m_nextVertex.SetZero();\r\n          return this;\r\n      }\r\n      /// Establish connectivity to a vertex that precedes the first vertex.\r\n      /// Don't call this for loops.\r\n      SetPrevVertex(prevVertex) {\r\n          this.m_prevVertex.Copy(prevVertex);\r\n          this.m_hasPrevVertex = true;\r\n          return this;\r\n      }\r\n      /// Establish connectivity to a vertex that follows the last vertex.\r\n      /// Don't call this for loops.\r\n      SetNextVertex(nextVertex) {\r\n          this.m_nextVertex.Copy(nextVertex);\r\n          this.m_hasNextVertex = true;\r\n          return this;\r\n      }\r\n      /// Implement b2Shape. Vertices are cloned using b2Alloc.\r\n      Clone() {\r\n          return new b2ChainShape().Copy(this);\r\n      }\r\n      Copy(other) {\r\n          super.Copy(other);\r\n          // DEBUG: b2Assert(other instanceof b2ChainShape);\r\n          this.CreateChain(other.m_vertices, other.m_count);\r\n          this.m_prevVertex.Copy(other.m_prevVertex);\r\n          this.m_nextVertex.Copy(other.m_nextVertex);\r\n          this.m_hasPrevVertex = other.m_hasPrevVertex;\r\n          this.m_hasNextVertex = other.m_hasNextVertex;\r\n          return this;\r\n      }\r\n      /// @see b2Shape::GetChildCount\r\n      GetChildCount() {\r\n          // edge count = vertex count - 1\r\n          return this.m_count - 1;\r\n      }\r\n      /// Get a child edge.\r\n      GetChildEdge(edge, index) {\r\n          // DEBUG: b2Assert(0 <= index && index < this.m_count - 1);\r\n          edge.m_type = exports.b2ShapeType.e_edgeShape;\r\n          edge.m_radius = this.m_radius;\r\n          edge.m_vertex1.Copy(this.m_vertices[index]);\r\n          edge.m_vertex2.Copy(this.m_vertices[index + 1]);\r\n          if (index > 0) {\r\n              edge.m_vertex0.Copy(this.m_vertices[index - 1]);\r\n              edge.m_hasVertex0 = true;\r\n          }\r\n          else {\r\n              edge.m_vertex0.Copy(this.m_prevVertex);\r\n              edge.m_hasVertex0 = this.m_hasPrevVertex;\r\n          }\r\n          if (index < this.m_count - 2) {\r\n              edge.m_vertex3.Copy(this.m_vertices[index + 2]);\r\n              edge.m_hasVertex3 = true;\r\n          }\r\n          else {\r\n              edge.m_vertex3.Copy(this.m_nextVertex);\r\n              edge.m_hasVertex3 = this.m_hasNextVertex;\r\n          }\r\n      }\r\n      /// This always return false.\r\n      /// @see b2Shape::TestPoint\r\n      TestPoint(xf, p) {\r\n          return false;\r\n      }\r\n      ComputeDistance(xf, p, normal, childIndex) {\r\n          const edge = b2ChainShape.ComputeDistance_s_edgeShape;\r\n          this.GetChildEdge(edge, childIndex);\r\n          return edge.ComputeDistance(xf, p, normal, 0);\r\n      }\r\n      RayCast(output, input, xf, childIndex) {\r\n          // DEBUG: b2Assert(childIndex < this.m_count);\r\n          const edgeShape = b2ChainShape.RayCast_s_edgeShape;\r\n          edgeShape.m_vertex1.Copy(this.m_vertices[childIndex]);\r\n          edgeShape.m_vertex2.Copy(this.m_vertices[(childIndex + 1) % this.m_count]);\r\n          return edgeShape.RayCast(output, input, xf, 0);\r\n      }\r\n      ComputeAABB(aabb, xf, childIndex) {\r\n          // DEBUG: b2Assert(childIndex < this.m_count);\r\n          const vertexi1 = this.m_vertices[childIndex];\r\n          const vertexi2 = this.m_vertices[(childIndex + 1) % this.m_count];\r\n          const v1 = b2Transform.MulXV(xf, vertexi1, b2ChainShape.ComputeAABB_s_v1);\r\n          const v2 = b2Transform.MulXV(xf, vertexi2, b2ChainShape.ComputeAABB_s_v2);\r\n          b2Vec2.MinV(v1, v2, aabb.lowerBound);\r\n          b2Vec2.MaxV(v1, v2, aabb.upperBound);\r\n      }\r\n      /// Chains have zero mass.\r\n      /// @see b2Shape::ComputeMass\r\n      ComputeMass(massData, density) {\r\n          massData.mass = 0;\r\n          massData.center.SetZero();\r\n          massData.I = 0;\r\n      }\r\n      SetupDistanceProxy(proxy, index) {\r\n          // DEBUG: b2Assert(0 <= index && index < this.m_count);\r\n          proxy.m_vertices = proxy.m_buffer;\r\n          proxy.m_vertices[0].Copy(this.m_vertices[index]);\r\n          if (index + 1 < this.m_count) {\r\n              proxy.m_vertices[1].Copy(this.m_vertices[index + 1]);\r\n          }\r\n          else {\r\n              proxy.m_vertices[1].Copy(this.m_vertices[0]);\r\n          }\r\n          proxy.m_count = 2;\r\n          proxy.m_radius = this.m_radius;\r\n      }\r\n      ComputeSubmergedArea(normal, offset, xf, c) {\r\n          c.SetZero();\r\n          return 0;\r\n      }\r\n      Dump(log) {\r\n          log(\"    const shape: b2ChainShape = new b2ChainShape();\\n\");\r\n          log(\"    const vs: b2Vec2[] = [];\\n\");\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              log(\"    vs[%d] = new bVec2(%.15f, %.15f);\\n\", i, this.m_vertices[i].x, this.m_vertices[i].y);\r\n          }\r\n          log(\"    shape.CreateChain(vs, %d);\\n\", this.m_count);\r\n          log(\"    shape.m_prevVertex.Set(%.15f, %.15f);\\n\", this.m_prevVertex.x, this.m_prevVertex.y);\r\n          log(\"    shape.m_nextVertex.Set(%.15f, %.15f);\\n\", this.m_nextVertex.x, this.m_nextVertex.y);\r\n          log(\"    shape.m_hasPrevVertex = %s;\\n\", (this.m_hasPrevVertex) ? (\"true\") : (\"false\"));\r\n          log(\"    shape.m_hasNextVertex = %s;\\n\", (this.m_hasNextVertex) ? (\"true\") : (\"false\"));\r\n      }\r\n  }\r\n  // #if B2_ENABLE_PARTICLE\r\n  /// @see b2Shape::ComputeDistance\r\n  b2ChainShape.ComputeDistance_s_edgeShape = new b2EdgeShape();\r\n  // #endif\r\n  /// Implement b2Shape.\r\n  b2ChainShape.RayCast_s_edgeShape = new b2EdgeShape();\r\n  /// @see b2Shape::ComputeAABB\r\n  b2ChainShape.ComputeAABB_s_v1 = new b2Vec2();\r\n  b2ChainShape.ComputeAABB_s_v2 = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// This holds contact filtering data.\r\n  class b2Filter {\r\n      constructor() {\r\n          /// The collision category bits. Normally you would just set one bit.\r\n          this.categoryBits = 0x0001;\r\n          /// The collision mask bits. This states the categories that this\r\n          /// shape would accept for collision.\r\n          this.maskBits = 0xFFFF;\r\n          /// Collision groups allow a certain group of objects to never collide (negative)\r\n          /// or always collide (positive). Zero means no collision group. Non-zero group\r\n          /// filtering always wins against the mask bits.\r\n          this.groupIndex = 0;\r\n      }\r\n      Clone() {\r\n          return new b2Filter().Copy(this);\r\n      }\r\n      Copy(other) {\r\n          // DEBUG: b2Assert(this !== other);\r\n          this.categoryBits = other.categoryBits;\r\n          this.maskBits = other.maskBits;\r\n          this.groupIndex = other.groupIndex || 0;\r\n          return this;\r\n      }\r\n  }\r\n  b2Filter.DEFAULT = new b2Filter();\r\n  /// A fixture definition is used to create a fixture. This class defines an\r\n  /// abstract fixture definition. You can reuse fixture definitions safely.\r\n  class b2FixtureDef {\r\n      constructor() {\r\n          /// Use this to store application specific fixture data.\r\n          this.userData = null;\r\n          /// The friction coefficient, usually in the range [0,1].\r\n          this.friction = 0.2;\r\n          /// The restitution (elasticity) usually in the range [0,1].\r\n          this.restitution = 0;\r\n          /// The density, usually in kg/m^2.\r\n          this.density = 0;\r\n          /// A sensor shape collects contact information but never generates a collision\r\n          /// response.\r\n          this.isSensor = false;\r\n          /// Contact filtering data.\r\n          this.filter = new b2Filter();\r\n      }\r\n  }\r\n  /// This proxy is used internally to connect fixtures to the broad-phase.\r\n  class b2FixtureProxy {\r\n      constructor(fixture) {\r\n          this.aabb = new b2AABB();\r\n          this.childIndex = 0;\r\n          this.fixture = fixture;\r\n      }\r\n  }\r\n  /// A fixture is used to attach a shape to a body for collision detection. A fixture\r\n  /// inherits its transform from its parent. Fixtures hold additional non-geometric data\r\n  /// such as friction, collision filters, etc.\r\n  /// Fixtures are created via b2Body::CreateFixture.\r\n  /// @warning you cannot reuse fixtures.\r\n  class b2Fixture {\r\n      constructor(def, body) {\r\n          this.m_density = 0;\r\n          this.m_next = null;\r\n          this.m_friction = 0;\r\n          this.m_restitution = 0;\r\n          this.m_proxies = [];\r\n          this.m_proxyCount = 0;\r\n          this.m_filter = new b2Filter();\r\n          this.m_isSensor = false;\r\n          this.m_userData = null;\r\n          this.m_body = body;\r\n          this.m_shape = def.shape.Clone();\r\n      }\r\n      /// Get the type of the child shape. You can use this to down cast to the concrete shape.\r\n      /// @return the shape type.\r\n      GetType() {\r\n          return this.m_shape.GetType();\r\n      }\r\n      /// Get the child shape. You can modify the child shape, however you should not change the\r\n      /// number of vertices because this will crash some collision caching mechanisms.\r\n      /// Manipulating the shape may lead to non-physical behavior.\r\n      GetShape() {\r\n          return this.m_shape;\r\n      }\r\n      /// Set if this fixture is a sensor.\r\n      SetSensor(sensor) {\r\n          if (sensor !== this.m_isSensor) {\r\n              this.m_body.SetAwake(true);\r\n              this.m_isSensor = sensor;\r\n          }\r\n      }\r\n      /// Is this fixture a sensor (non-solid)?\r\n      /// @return the true if the shape is a sensor.\r\n      IsSensor() {\r\n          return this.m_isSensor;\r\n      }\r\n      /// Set the contact filtering data. This will not update contacts until the next time\r\n      /// step when either parent body is active and awake.\r\n      /// This automatically calls Refilter.\r\n      SetFilterData(filter) {\r\n          this.m_filter.Copy(filter);\r\n          this.Refilter();\r\n      }\r\n      /// Get the contact filtering data.\r\n      GetFilterData() {\r\n          return this.m_filter;\r\n      }\r\n      /// Call this if you want to establish collision that was previously disabled by b2ContactFilter::ShouldCollide.\r\n      Refilter() {\r\n          // Flag associated contacts for filtering.\r\n          let edge = this.m_body.GetContactList();\r\n          while (edge) {\r\n              const contact = edge.contact;\r\n              const fixtureA = contact.GetFixtureA();\r\n              const fixtureB = contact.GetFixtureB();\r\n              if (fixtureA === this || fixtureB === this) {\r\n                  contact.FlagForFiltering();\r\n              }\r\n              edge = edge.next;\r\n          }\r\n          const world = this.m_body.GetWorld();\r\n          if (world === null) {\r\n              return;\r\n          }\r\n          // Touch each proxy so that new pairs may be created\r\n          const broadPhase = world.m_contactManager.m_broadPhase;\r\n          for (let i = 0; i < this.m_proxyCount; ++i) {\r\n              broadPhase.TouchProxy(this.m_proxies[i].treeNode);\r\n          }\r\n      }\r\n      /// Get the parent body of this fixture. This is NULL if the fixture is not attached.\r\n      /// @return the parent body.\r\n      GetBody() {\r\n          return this.m_body;\r\n      }\r\n      /// Get the next fixture in the parent body's fixture list.\r\n      /// @return the next shape.\r\n      GetNext() {\r\n          return this.m_next;\r\n      }\r\n      /// Get the user data that was assigned in the fixture definition. Use this to\r\n      /// store your application specific data.\r\n      GetUserData() {\r\n          return this.m_userData;\r\n      }\r\n      /// Set the user data. Use this to store your application specific data.\r\n      SetUserData(data) {\r\n          this.m_userData = data;\r\n      }\r\n      /// Test a point for containment in this fixture.\r\n      /// @param p a point in world coordinates.\r\n      TestPoint(p) {\r\n          return this.m_shape.TestPoint(this.m_body.GetTransform(), p);\r\n      }\r\n      // #if B2_ENABLE_PARTICLE\r\n      ComputeDistance(p, normal, childIndex) {\r\n          return this.m_shape.ComputeDistance(this.m_body.GetTransform(), p, normal, childIndex);\r\n      }\r\n      // #endif\r\n      /// Cast a ray against this shape.\r\n      /// @param output the ray-cast results.\r\n      /// @param input the ray-cast input parameters.\r\n      RayCast(output, input, childIndex) {\r\n          return this.m_shape.RayCast(output, input, this.m_body.GetTransform(), childIndex);\r\n      }\r\n      /// Get the mass data for this fixture. The mass data is based on the density and\r\n      /// the shape. The rotational inertia is about the shape's origin. This operation\r\n      /// may be expensive.\r\n      GetMassData(massData = new b2MassData()) {\r\n          this.m_shape.ComputeMass(massData, this.m_density);\r\n          return massData;\r\n      }\r\n      /// Set the density of this fixture. This will _not_ automatically adjust the mass\r\n      /// of the body. You must call b2Body::ResetMassData to update the body's mass.\r\n      SetDensity(density) {\r\n          this.m_density = density;\r\n      }\r\n      /// Get the density of this fixture.\r\n      GetDensity() {\r\n          return this.m_density;\r\n      }\r\n      /// Get the coefficient of friction.\r\n      GetFriction() {\r\n          return this.m_friction;\r\n      }\r\n      /// Set the coefficient of friction. This will _not_ change the friction of\r\n      /// existing contacts.\r\n      SetFriction(friction) {\r\n          this.m_friction = friction;\r\n      }\r\n      /// Get the coefficient of restitution.\r\n      GetRestitution() {\r\n          return this.m_restitution;\r\n      }\r\n      /// Set the coefficient of restitution. This will _not_ change the restitution of\r\n      /// existing contacts.\r\n      SetRestitution(restitution) {\r\n          this.m_restitution = restitution;\r\n      }\r\n      /// Get the fixture's AABB. This AABB may be enlarge and/or stale.\r\n      /// If you need a more accurate AABB, compute it using the shape and\r\n      /// the body transform.\r\n      GetAABB(childIndex) {\r\n          // DEBUG: b2Assert(0 <= childIndex && childIndex < this.m_proxyCount);\r\n          return this.m_proxies[childIndex].aabb;\r\n      }\r\n      /// Dump this fixture to the log file.\r\n      Dump(log, bodyIndex) {\r\n          log(\"    const fd: b2FixtureDef = new b2FixtureDef();\\n\");\r\n          log(\"    fd.friction = %.15f;\\n\", this.m_friction);\r\n          log(\"    fd.restitution = %.15f;\\n\", this.m_restitution);\r\n          log(\"    fd.density = %.15f;\\n\", this.m_density);\r\n          log(\"    fd.isSensor = %s;\\n\", (this.m_isSensor) ? (\"true\") : (\"false\"));\r\n          log(\"    fd.filter.categoryBits = %d;\\n\", this.m_filter.categoryBits);\r\n          log(\"    fd.filter.maskBits = %d;\\n\", this.m_filter.maskBits);\r\n          log(\"    fd.filter.groupIndex = %d;\\n\", this.m_filter.groupIndex);\r\n          this.m_shape.Dump(log);\r\n          log(\"\\n\");\r\n          log(\"    fd.shape = shape;\\n\");\r\n          log(\"\\n\");\r\n          log(\"    bodies[%d].CreateFixture(fd);\\n\", bodyIndex);\r\n      }\r\n      // We need separation create/destroy functions from the constructor/destructor because\r\n      // the destructor cannot access the allocator (no destructor arguments allowed by C++).\r\n      Create(def) {\r\n          this.m_userData = def.userData;\r\n          this.m_friction = b2Maybe(def.friction, 0.2);\r\n          this.m_restitution = b2Maybe(def.restitution, 0);\r\n          // this.m_body = body;\r\n          this.m_next = null;\r\n          this.m_filter.Copy(b2Maybe(def.filter, b2Filter.DEFAULT));\r\n          this.m_isSensor = b2Maybe(def.isSensor, false);\r\n          // Reserve proxy space\r\n          // const childCount = m_shape->GetChildCount();\r\n          // m_proxies = (b2FixtureProxy*)allocator->Allocate(childCount * sizeof(b2FixtureProxy));\r\n          // for (int32 i = 0; i < childCount; ++i)\r\n          // {\r\n          //   m_proxies[i].fixture = NULL;\r\n          //   m_proxies[i].proxyId = b2BroadPhase::e_nullProxy;\r\n          // }\r\n          // this.m_proxies = b2FixtureProxy.MakeArray(this.m_shape.GetChildCount());\r\n          this.m_proxies = b2MakeArray(this.m_shape.GetChildCount(), (i) => new b2FixtureProxy(this));\r\n          this.m_proxyCount = 0;\r\n          this.m_density = b2Maybe(def.density, 0);\r\n      }\r\n      Destroy() {\r\n          // The proxies must be destroyed before calling this.\r\n          // DEBUG: b2Assert(this.m_proxyCount === 0);\r\n          // Free the proxy array.\r\n          // int32 childCount = m_shape->GetChildCount();\r\n          // allocator->Free(m_proxies, childCount * sizeof(b2FixtureProxy));\r\n          // m_proxies = NULL;\r\n          // this.m_shape = null;\r\n      }\r\n      // These support body activation/deactivation.\r\n      CreateProxies(xf) {\r\n          const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n          // DEBUG: b2Assert(this.m_proxyCount === 0);\r\n          // Create proxies in the broad-phase.\r\n          this.m_proxyCount = this.m_shape.GetChildCount();\r\n          for (let i = 0; i < this.m_proxyCount; ++i) {\r\n              const proxy = this.m_proxies[i] = new b2FixtureProxy(this);\r\n              this.m_shape.ComputeAABB(proxy.aabb, xf, i);\r\n              proxy.treeNode = broadPhase.CreateProxy(proxy.aabb, proxy);\r\n              proxy.childIndex = i;\r\n          }\r\n      }\r\n      DestroyProxies() {\r\n          const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n          // Destroy proxies in the broad-phase.\r\n          for (let i = 0; i < this.m_proxyCount; ++i) {\r\n              const proxy = this.m_proxies[i];\r\n              delete proxy.treeNode.userData;\r\n              broadPhase.DestroyProxy(proxy.treeNode);\r\n              delete proxy.treeNode;\r\n          }\r\n          this.m_proxyCount = 0;\r\n      }\r\n      TouchProxies() {\r\n          const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n          const proxyCount = this.m_proxyCount;\r\n          for (let i = 0; i < proxyCount; ++i) {\r\n              broadPhase.TouchProxy(this.m_proxies[i].treeNode);\r\n          }\r\n      }\r\n      Synchronize(transform1, transform2) {\r\n          if (this.m_proxyCount === 0) {\r\n              return;\r\n          }\r\n          const broadPhase = this.m_body.m_world.m_contactManager.m_broadPhase;\r\n          for (let i = 0; i < this.m_proxyCount; ++i) {\r\n              const proxy = this.m_proxies[i];\r\n              // Compute an AABB that covers the swept shape (may miss some rotation effect).\r\n              const aabb1 = b2Fixture.Synchronize_s_aabb1;\r\n              const aabb2 = b2Fixture.Synchronize_s_aabb2;\r\n              this.m_shape.ComputeAABB(aabb1, transform1, i);\r\n              this.m_shape.ComputeAABB(aabb2, transform2, i);\r\n              proxy.aabb.Combine2(aabb1, aabb2);\r\n              const displacement = b2Vec2.SubVV(transform2.p, transform1.p, b2Fixture.Synchronize_s_displacement);\r\n              broadPhase.MoveProxy(proxy.treeNode, proxy.aabb, displacement);\r\n          }\r\n      }\r\n  }\r\n  b2Fixture.Synchronize_s_aabb1 = new b2AABB();\r\n  b2Fixture.Synchronize_s_aabb2 = new b2AABB();\r\n  b2Fixture.Synchronize_s_displacement = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  (function (b2BodyType) {\r\n      b2BodyType[b2BodyType[\"b2_unknown\"] = -1] = \"b2_unknown\";\r\n      b2BodyType[b2BodyType[\"b2_staticBody\"] = 0] = \"b2_staticBody\";\r\n      b2BodyType[b2BodyType[\"b2_kinematicBody\"] = 1] = \"b2_kinematicBody\";\r\n      b2BodyType[b2BodyType[\"b2_dynamicBody\"] = 2] = \"b2_dynamicBody\";\r\n      // TODO_ERIN\r\n      // b2_bulletBody = 3\r\n  })(exports.b2BodyType || (exports.b2BodyType = {}));\r\n  /// A body definition holds all the data needed to construct a rigid body.\r\n  /// You can safely re-use body definitions. Shapes are added to a body after construction.\r\n  class b2BodyDef {\r\n      constructor() {\r\n          /// The body type: static, kinematic, or dynamic.\r\n          /// Note: if a dynamic body would have zero mass, the mass is set to one.\r\n          this.type = exports.b2BodyType.b2_staticBody;\r\n          /// The world position of the body. Avoid creating bodies at the origin\r\n          /// since this can lead to many overlapping shapes.\r\n          this.position = new b2Vec2(0, 0);\r\n          /// The world angle of the body in radians.\r\n          this.angle = 0;\r\n          /// The linear velocity of the body's origin in world co-ordinates.\r\n          this.linearVelocity = new b2Vec2(0, 0);\r\n          /// The angular velocity of the body.\r\n          this.angularVelocity = 0;\r\n          /// Linear damping is use to reduce the linear velocity. The damping parameter\r\n          /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n          /// time step when the damping parameter is large.\r\n          this.linearDamping = 0;\r\n          /// Angular damping is use to reduce the angular velocity. The damping parameter\r\n          /// can be larger than 1.0f but the damping effect becomes sensitive to the\r\n          /// time step when the damping parameter is large.\r\n          this.angularDamping = 0;\r\n          /// Set this flag to false if this body should never fall asleep. Note that\r\n          /// this increases CPU usage.\r\n          this.allowSleep = true;\r\n          /// Is this body initially awake or sleeping?\r\n          this.awake = true;\r\n          /// Should this body be prevented from rotating? Useful for characters.\r\n          this.fixedRotation = false;\r\n          /// Is this a fast moving body that should be prevented from tunneling through\r\n          /// other moving bodies? Note that all bodies are prevented from tunneling through\r\n          /// kinematic and static bodies. This setting is only considered on dynamic bodies.\r\n          /// @warning You should use this flag sparingly since it increases processing time.\r\n          this.bullet = false;\r\n          /// Does this body start out active?\r\n          this.active = true;\r\n          /// Use this to store application specific body data.\r\n          this.userData = null;\r\n          /// Scale the gravity applied to this body.\r\n          this.gravityScale = 1;\r\n      }\r\n  }\r\n  /// A rigid body. These are created via b2World::CreateBody.\r\n  class b2Body {\r\n      // #endif\r\n      constructor(bd, world) {\r\n          this.m_type = exports.b2BodyType.b2_staticBody;\r\n          this.m_islandFlag = false;\r\n          this.m_awakeFlag = false;\r\n          this.m_autoSleepFlag = false;\r\n          this.m_bulletFlag = false;\r\n          this.m_fixedRotationFlag = false;\r\n          this.m_activeFlag = false;\r\n          this.m_toiFlag = false;\r\n          this.m_islandIndex = 0;\r\n          this.m_xf = new b2Transform(); // the body origin transform\r\n          // #if B2_ENABLE_PARTICLE\r\n          this.m_xf0 = new b2Transform();\r\n          // #endif\r\n          this.m_sweep = new b2Sweep(); // the swept motion for CCD\r\n          this.m_linearVelocity = new b2Vec2();\r\n          this.m_angularVelocity = 0;\r\n          this.m_force = new b2Vec2();\r\n          this.m_torque = 0;\r\n          this.m_prev = null;\r\n          this.m_next = null;\r\n          this.m_fixtureList = null;\r\n          this.m_fixtureCount = 0;\r\n          this.m_jointList = null;\r\n          this.m_contactList = null;\r\n          this.m_mass = 1;\r\n          this.m_invMass = 1;\r\n          // Rotational inertia about the center of mass.\r\n          this.m_I = 0;\r\n          this.m_invI = 0;\r\n          this.m_linearDamping = 0;\r\n          this.m_angularDamping = 0;\r\n          this.m_gravityScale = 1;\r\n          this.m_sleepTime = 0;\r\n          this.m_userData = null;\r\n          // #if B2_ENABLE_CONTROLLER\r\n          this.m_controllerList = null;\r\n          this.m_controllerCount = 0;\r\n          this.m_bulletFlag = b2Maybe(bd.bullet, false);\r\n          this.m_fixedRotationFlag = b2Maybe(bd.fixedRotation, false);\r\n          this.m_autoSleepFlag = b2Maybe(bd.allowSleep, true);\r\n          this.m_awakeFlag = b2Maybe(bd.awake, true);\r\n          this.m_activeFlag = b2Maybe(bd.active, true);\r\n          this.m_world = world;\r\n          this.m_xf.p.Copy(b2Maybe(bd.position, b2Vec2.ZERO));\r\n          // DEBUG: b2Assert(this.m_xf.p.IsValid());\r\n          this.m_xf.q.SetAngle(b2Maybe(bd.angle, 0));\r\n          // DEBUG: b2Assert(b2IsValid(this.m_xf.q.GetAngle()));\r\n          // #if B2_ENABLE_PARTICLE\r\n          this.m_xf0.Copy(this.m_xf);\r\n          // #endif\r\n          this.m_sweep.localCenter.SetZero();\r\n          this.m_sweep.c0.Copy(this.m_xf.p);\r\n          this.m_sweep.c.Copy(this.m_xf.p);\r\n          this.m_sweep.a0 = this.m_sweep.a = this.m_xf.q.GetAngle();\r\n          this.m_sweep.alpha0 = 0;\r\n          this.m_linearVelocity.Copy(b2Maybe(bd.linearVelocity, b2Vec2.ZERO));\r\n          // DEBUG: b2Assert(this.m_linearVelocity.IsValid());\r\n          this.m_angularVelocity = b2Maybe(bd.angularVelocity, 0);\r\n          // DEBUG: b2Assert(b2IsValid(this.m_angularVelocity));\r\n          this.m_linearDamping = b2Maybe(bd.linearDamping, 0);\r\n          this.m_angularDamping = b2Maybe(bd.angularDamping, 0);\r\n          this.m_gravityScale = b2Maybe(bd.gravityScale, 1);\r\n          // DEBUG: b2Assert(b2IsValid(this.m_gravityScale) && this.m_gravityScale >= 0);\r\n          // DEBUG: b2Assert(b2IsValid(this.m_angularDamping) && this.m_angularDamping >= 0);\r\n          // DEBUG: b2Assert(b2IsValid(this.m_linearDamping) && this.m_linearDamping >= 0);\r\n          this.m_force.SetZero();\r\n          this.m_torque = 0;\r\n          this.m_sleepTime = 0;\r\n          this.m_type = b2Maybe(bd.type, exports.b2BodyType.b2_staticBody);\r\n          if (bd.type === exports.b2BodyType.b2_dynamicBody) {\r\n              this.m_mass = 1;\r\n              this.m_invMass = 1;\r\n          }\r\n          else {\r\n              this.m_mass = 0;\r\n              this.m_invMass = 0;\r\n          }\r\n          this.m_I = 0;\r\n          this.m_invI = 0;\r\n          this.m_userData = bd.userData;\r\n          this.m_fixtureList = null;\r\n          this.m_fixtureCount = 0;\r\n          // #if B2_ENABLE_CONTROLLER\r\n          this.m_controllerList = null;\r\n          this.m_controllerCount = 0;\r\n          // #endif\r\n      }\r\n      CreateFixture(a, b = 0) {\r\n          if (a instanceof b2Shape) {\r\n              return this.CreateFixtureShapeDensity(a, b);\r\n          }\r\n          else {\r\n              return this.CreateFixtureDef(a);\r\n          }\r\n      }\r\n      /// Creates a fixture and attach it to this body. Use this function if you need\r\n      /// to set some fixture parameters, like friction. Otherwise you can create the\r\n      /// fixture directly from a shape.\r\n      /// If the density is non-zero, this function automatically updates the mass of the body.\r\n      /// Contacts are not created until the next time step.\r\n      /// @param def the fixture definition.\r\n      /// @warning This function is locked during callbacks.\r\n      CreateFixtureDef(def) {\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          const fixture = new b2Fixture(def, this);\r\n          fixture.Create(def);\r\n          if (this.m_activeFlag) {\r\n              fixture.CreateProxies(this.m_xf);\r\n          }\r\n          fixture.m_next = this.m_fixtureList;\r\n          this.m_fixtureList = fixture;\r\n          ++this.m_fixtureCount;\r\n          // fixture.m_body = this;\r\n          // Adjust mass properties if needed.\r\n          if (fixture.m_density > 0) {\r\n              this.ResetMassData();\r\n          }\r\n          // Let the world know we have a new fixture. This will cause new contacts\r\n          // to be created at the beginning of the next time step.\r\n          this.m_world.m_newFixture = true;\r\n          return fixture;\r\n      }\r\n      CreateFixtureShapeDensity(shape, density = 0) {\r\n          const def = b2Body.CreateFixtureShapeDensity_s_def;\r\n          def.shape = shape;\r\n          def.density = density;\r\n          return this.CreateFixtureDef(def);\r\n      }\r\n      /// Destroy a fixture. This removes the fixture from the broad-phase and\r\n      /// destroys all contacts associated with this fixture. This will\r\n      /// automatically adjust the mass of the body if the body is dynamic and the\r\n      /// fixture has positive density.\r\n      /// All fixtures attached to a body are implicitly destroyed when the body is destroyed.\r\n      /// @param fixture the fixture to be removed.\r\n      /// @warning This function is locked during callbacks.\r\n      DestroyFixture(fixture) {\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          // DEBUG: b2Assert(fixture.m_body === this);\r\n          // Remove the fixture from this body's singly linked list.\r\n          // DEBUG: b2Assert(this.m_fixtureCount > 0);\r\n          let node = this.m_fixtureList;\r\n          let ppF = null;\r\n          // DEBUG: let found: boolean = false;\r\n          while (node !== null) {\r\n              if (node === fixture) {\r\n                  if (ppF) {\r\n                      ppF.m_next = fixture.m_next;\r\n                  }\r\n                  else {\r\n                      this.m_fixtureList = fixture.m_next;\r\n                  }\r\n                  // DEBUG: found = true;\r\n                  break;\r\n              }\r\n              ppF = node;\r\n              node = node.m_next;\r\n          }\r\n          // You tried to remove a shape that is not attached to this body.\r\n          // DEBUG: b2Assert(found);\r\n          // Destroy any contacts associated with the fixture.\r\n          let edge = this.m_contactList;\r\n          while (edge) {\r\n              const c = edge.contact;\r\n              edge = edge.next;\r\n              const fixtureA = c.GetFixtureA();\r\n              const fixtureB = c.GetFixtureB();\r\n              if (fixture === fixtureA || fixture === fixtureB) {\r\n                  // This destroys the contact and removes it from\r\n                  // this body's contact list.\r\n                  this.m_world.m_contactManager.Destroy(c);\r\n              }\r\n          }\r\n          if (this.m_activeFlag) {\r\n              fixture.DestroyProxies();\r\n          }\r\n          // fixture.m_body = null;\r\n          fixture.m_next = null;\r\n          fixture.Destroy();\r\n          --this.m_fixtureCount;\r\n          // Reset the mass data.\r\n          this.ResetMassData();\r\n      }\r\n      /// Set the position of the body's origin and rotation.\r\n      /// This breaks any contacts and wakes the other bodies.\r\n      /// Manipulating a body's transform may cause non-physical behavior.\r\n      /// @param position the world position of the body's local origin.\r\n      /// @param angle the world rotation in radians.\r\n      SetTransformVec(position, angle) {\r\n          this.SetTransformXY(position.x, position.y, angle);\r\n      }\r\n      SetTransformXY(x, y, angle) {\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          this.m_xf.q.SetAngle(angle);\r\n          this.m_xf.p.Set(x, y);\r\n          // #if B2_ENABLE_PARTICLE\r\n          this.m_xf0.Copy(this.m_xf);\r\n          // #endif\r\n          b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n          this.m_sweep.a = angle;\r\n          this.m_sweep.c0.Copy(this.m_sweep.c);\r\n          this.m_sweep.a0 = angle;\r\n          for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n              f.Synchronize(this.m_xf, this.m_xf);\r\n          }\r\n          this.m_world.m_contactManager.FindNewContacts();\r\n      }\r\n      SetTransform(xf) {\r\n          this.SetTransformVec(xf.p, xf.GetAngle());\r\n      }\r\n      /// Get the body transform for the body's origin.\r\n      /// @return the world transform of the body's origin.\r\n      GetTransform() {\r\n          return this.m_xf;\r\n      }\r\n      /// Get the world body origin position.\r\n      /// @return the world position of the body's origin.\r\n      GetPosition() {\r\n          return this.m_xf.p;\r\n      }\r\n      SetPosition(position) {\r\n          this.SetTransformVec(position, this.GetAngle());\r\n      }\r\n      SetPositionXY(x, y) {\r\n          this.SetTransformXY(x, y, this.GetAngle());\r\n      }\r\n      /// Get the angle in radians.\r\n      /// @return the current world rotation angle in radians.\r\n      GetAngle() {\r\n          return this.m_sweep.a;\r\n      }\r\n      SetAngle(angle) {\r\n          this.SetTransformVec(this.GetPosition(), angle);\r\n      }\r\n      /// Get the world position of the center of mass.\r\n      GetWorldCenter() {\r\n          return this.m_sweep.c;\r\n      }\r\n      /// Get the local position of the center of mass.\r\n      GetLocalCenter() {\r\n          return this.m_sweep.localCenter;\r\n      }\r\n      /// Set the linear velocity of the center of mass.\r\n      /// @param v the new linear velocity of the center of mass.\r\n      SetLinearVelocity(v) {\r\n          if (this.m_type === exports.b2BodyType.b2_staticBody) {\r\n              return;\r\n          }\r\n          if (b2Vec2.DotVV(v, v) > 0) {\r\n              this.SetAwake(true);\r\n          }\r\n          this.m_linearVelocity.Copy(v);\r\n      }\r\n      /// Get the linear velocity of the center of mass.\r\n      /// @return the linear velocity of the center of mass.\r\n      GetLinearVelocity() {\r\n          return this.m_linearVelocity;\r\n      }\r\n      /// Set the angular velocity.\r\n      /// @param omega the new angular velocity in radians/second.\r\n      SetAngularVelocity(w) {\r\n          if (this.m_type === exports.b2BodyType.b2_staticBody) {\r\n              return;\r\n          }\r\n          if (w * w > 0) {\r\n              this.SetAwake(true);\r\n          }\r\n          this.m_angularVelocity = w;\r\n      }\r\n      /// Get the angular velocity.\r\n      /// @return the angular velocity in radians/second.\r\n      GetAngularVelocity() {\r\n          return this.m_angularVelocity;\r\n      }\r\n      GetDefinition(bd) {\r\n          bd.type = this.GetType();\r\n          bd.allowSleep = this.m_autoSleepFlag;\r\n          bd.angle = this.GetAngle();\r\n          bd.angularDamping = this.m_angularDamping;\r\n          bd.gravityScale = this.m_gravityScale;\r\n          bd.angularVelocity = this.m_angularVelocity;\r\n          bd.fixedRotation = this.m_fixedRotationFlag;\r\n          bd.bullet = this.m_bulletFlag;\r\n          bd.awake = this.m_awakeFlag;\r\n          bd.linearDamping = this.m_linearDamping;\r\n          bd.linearVelocity.Copy(this.GetLinearVelocity());\r\n          bd.position.Copy(this.GetPosition());\r\n          bd.userData = this.GetUserData();\r\n          return bd;\r\n      }\r\n      /// Apply a force at a world point. If the force is not\r\n      /// applied at the center of mass, it will generate a torque and\r\n      /// affect the angular velocity. This wakes up the body.\r\n      /// @param force the world force vector, usually in Newtons (N).\r\n      /// @param point the world position of the point of application.\r\n      /// @param wake also wake up the body\r\n      ApplyForce(force, point, wake = true) {\r\n          if (this.m_type !== exports.b2BodyType.b2_dynamicBody) {\r\n              return;\r\n          }\r\n          if (wake && !this.m_awakeFlag) {\r\n              this.SetAwake(true);\r\n          }\r\n          // Don't accumulate a force if the body is sleeping.\r\n          if (this.m_awakeFlag) {\r\n              this.m_force.x += force.x;\r\n              this.m_force.y += force.y;\r\n              this.m_torque += ((point.x - this.m_sweep.c.x) * force.y - (point.y - this.m_sweep.c.y) * force.x);\r\n          }\r\n      }\r\n      /// Apply a force to the center of mass. This wakes up the body.\r\n      /// @param force the world force vector, usually in Newtons (N).\r\n      /// @param wake also wake up the body\r\n      ApplyForceToCenter(force, wake = true) {\r\n          if (this.m_type !== exports.b2BodyType.b2_dynamicBody) {\r\n              return;\r\n          }\r\n          if (wake && !this.m_awakeFlag) {\r\n              this.SetAwake(true);\r\n          }\r\n          // Don't accumulate a force if the body is sleeping.\r\n          if (this.m_awakeFlag) {\r\n              this.m_force.x += force.x;\r\n              this.m_force.y += force.y;\r\n          }\r\n      }\r\n      /// Apply a torque. This affects the angular velocity\r\n      /// without affecting the linear velocity of the center of mass.\r\n      /// @param torque about the z-axis (out of the screen), usually in N-m.\r\n      /// @param wake also wake up the body\r\n      ApplyTorque(torque, wake = true) {\r\n          if (this.m_type !== exports.b2BodyType.b2_dynamicBody) {\r\n              return;\r\n          }\r\n          if (wake && !this.m_awakeFlag) {\r\n              this.SetAwake(true);\r\n          }\r\n          // Don't accumulate a force if the body is sleeping.\r\n          if (this.m_awakeFlag) {\r\n              this.m_torque += torque;\r\n          }\r\n      }\r\n      /// Apply an impulse at a point. This immediately modifies the velocity.\r\n      /// It also modifies the angular velocity if the point of application\r\n      /// is not at the center of mass. This wakes up the body.\r\n      /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n      /// @param point the world position of the point of application.\r\n      /// @param wake also wake up the body\r\n      ApplyLinearImpulse(impulse, point, wake = true) {\r\n          if (this.m_type !== exports.b2BodyType.b2_dynamicBody) {\r\n              return;\r\n          }\r\n          if (wake && !this.m_awakeFlag) {\r\n              this.SetAwake(true);\r\n          }\r\n          // Don't accumulate a force if the body is sleeping.\r\n          if (this.m_awakeFlag) {\r\n              this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n              this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n              this.m_angularVelocity += this.m_invI * ((point.x - this.m_sweep.c.x) * impulse.y - (point.y - this.m_sweep.c.y) * impulse.x);\r\n          }\r\n      }\r\n      /// Apply an impulse at the center of gravity. This immediately modifies the velocity.\r\n      /// @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n      /// @param wake also wake up the body\r\n      ApplyLinearImpulseToCenter(impulse, wake = true) {\r\n          if (this.m_type !== exports.b2BodyType.b2_dynamicBody) {\r\n              return;\r\n          }\r\n          if (wake && !this.m_awakeFlag) {\r\n              this.SetAwake(true);\r\n          }\r\n          // Don't accumulate a force if the body is sleeping.\r\n          if (this.m_awakeFlag) {\r\n              this.m_linearVelocity.x += this.m_invMass * impulse.x;\r\n              this.m_linearVelocity.y += this.m_invMass * impulse.y;\r\n          }\r\n      }\r\n      /// Apply an angular impulse.\r\n      /// @param impulse the angular impulse in units of kg*m*m/s\r\n      /// @param wake also wake up the body\r\n      ApplyAngularImpulse(impulse, wake = true) {\r\n          if (this.m_type !== exports.b2BodyType.b2_dynamicBody) {\r\n              return;\r\n          }\r\n          if (wake && !this.m_awakeFlag) {\r\n              this.SetAwake(true);\r\n          }\r\n          // Don't accumulate a force if the body is sleeping.\r\n          if (this.m_awakeFlag) {\r\n              this.m_angularVelocity += this.m_invI * impulse;\r\n          }\r\n      }\r\n      /// Get the total mass of the body.\r\n      /// @return the mass, usually in kilograms (kg).\r\n      GetMass() {\r\n          return this.m_mass;\r\n      }\r\n      /// Get the rotational inertia of the body about the local origin.\r\n      /// @return the rotational inertia, usually in kg-m^2.\r\n      GetInertia() {\r\n          return this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n      }\r\n      /// Get the mass data of the body.\r\n      /// @return a struct containing the mass, inertia and center of the body.\r\n      GetMassData(data) {\r\n          data.mass = this.m_mass;\r\n          data.I = this.m_I + this.m_mass * b2Vec2.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);\r\n          data.center.Copy(this.m_sweep.localCenter);\r\n          return data;\r\n      }\r\n      SetMassData(massData) {\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          if (this.m_type !== exports.b2BodyType.b2_dynamicBody) {\r\n              return;\r\n          }\r\n          this.m_invMass = 0;\r\n          this.m_I = 0;\r\n          this.m_invI = 0;\r\n          this.m_mass = massData.mass;\r\n          if (this.m_mass <= 0) {\r\n              this.m_mass = 1;\r\n          }\r\n          this.m_invMass = 1 / this.m_mass;\r\n          if (massData.I > 0 && !this.m_fixedRotationFlag) {\r\n              this.m_I = massData.I - this.m_mass * b2Vec2.DotVV(massData.center, massData.center);\r\n              // DEBUG: b2Assert(this.m_I > 0);\r\n              this.m_invI = 1 / this.m_I;\r\n          }\r\n          // Move center of mass.\r\n          const oldCenter = b2Body.SetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n          this.m_sweep.localCenter.Copy(massData.center);\r\n          b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n          this.m_sweep.c0.Copy(this.m_sweep.c);\r\n          // Update center of mass velocity.\r\n          b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n      }\r\n      ResetMassData() {\r\n          // Compute mass data from shapes. Each shape has its own density.\r\n          this.m_mass = 0;\r\n          this.m_invMass = 0;\r\n          this.m_I = 0;\r\n          this.m_invI = 0;\r\n          this.m_sweep.localCenter.SetZero();\r\n          // Static and kinematic bodies have zero mass.\r\n          if (this.m_type === exports.b2BodyType.b2_staticBody || this.m_type === exports.b2BodyType.b2_kinematicBody) {\r\n              this.m_sweep.c0.Copy(this.m_xf.p);\r\n              this.m_sweep.c.Copy(this.m_xf.p);\r\n              this.m_sweep.a0 = this.m_sweep.a;\r\n              return;\r\n          }\r\n          // DEBUG: b2Assert(this.m_type === b2BodyType.b2_dynamicBody);\r\n          // Accumulate mass over all fixtures.\r\n          const localCenter = b2Body.ResetMassData_s_localCenter.SetZero();\r\n          for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n              if (f.m_density === 0) {\r\n                  continue;\r\n              }\r\n              const massData = f.GetMassData(b2Body.ResetMassData_s_massData);\r\n              this.m_mass += massData.mass;\r\n              localCenter.x += massData.center.x * massData.mass;\r\n              localCenter.y += massData.center.y * massData.mass;\r\n              this.m_I += massData.I;\r\n          }\r\n          // Compute center of mass.\r\n          if (this.m_mass > 0) {\r\n              this.m_invMass = 1 / this.m_mass;\r\n              localCenter.x *= this.m_invMass;\r\n              localCenter.y *= this.m_invMass;\r\n          }\r\n          else {\r\n              // Force all dynamic bodies to have a positive mass.\r\n              this.m_mass = 1;\r\n              this.m_invMass = 1;\r\n          }\r\n          if (this.m_I > 0 && !this.m_fixedRotationFlag) {\r\n              // Center the inertia about the center of mass.\r\n              this.m_I -= this.m_mass * b2Vec2.DotVV(localCenter, localCenter);\r\n              // DEBUG: b2Assert(this.m_I > 0);\r\n              this.m_invI = 1 / this.m_I;\r\n          }\r\n          else {\r\n              this.m_I = 0;\r\n              this.m_invI = 0;\r\n          }\r\n          // Move center of mass.\r\n          const oldCenter = b2Body.ResetMassData_s_oldCenter.Copy(this.m_sweep.c);\r\n          this.m_sweep.localCenter.Copy(localCenter);\r\n          b2Transform.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);\r\n          this.m_sweep.c0.Copy(this.m_sweep.c);\r\n          // Update center of mass velocity.\r\n          b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(this.m_sweep.c, oldCenter, b2Vec2.s_t0), this.m_linearVelocity);\r\n      }\r\n      /// Get the world coordinates of a point given the local coordinates.\r\n      /// @param localPoint a point on the body measured relative the the body's origin.\r\n      /// @return the same point expressed in world coordinates.\r\n      GetWorldPoint(localPoint, out) {\r\n          return b2Transform.MulXV(this.m_xf, localPoint, out);\r\n      }\r\n      /// Get the world coordinates of a vector given the local coordinates.\r\n      /// @param localVector a vector fixed in the body.\r\n      /// @return the same vector expressed in world coordinates.\r\n      GetWorldVector(localVector, out) {\r\n          return b2Rot.MulRV(this.m_xf.q, localVector, out);\r\n      }\r\n      /// Gets a local point relative to the body's origin given a world point.\r\n      /// @param a point in world coordinates.\r\n      /// @return the corresponding local point relative to the body's origin.\r\n      GetLocalPoint(worldPoint, out) {\r\n          return b2Transform.MulTXV(this.m_xf, worldPoint, out);\r\n      }\r\n      /// Gets a local vector given a world vector.\r\n      /// @param a vector in world coordinates.\r\n      /// @return the corresponding local vector.\r\n      GetLocalVector(worldVector, out) {\r\n          return b2Rot.MulTRV(this.m_xf.q, worldVector, out);\r\n      }\r\n      /// Get the world linear velocity of a world point attached to this body.\r\n      /// @param a point in world coordinates.\r\n      /// @return the world velocity of a point.\r\n      GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n          return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_sweep.c, b2Vec2.s_t0), out);\r\n      }\r\n      /// Get the world velocity of a local point.\r\n      /// @param a point in local coordinates.\r\n      /// @return the world velocity of a point.\r\n      GetLinearVelocityFromLocalPoint(localPoint, out) {\r\n          return this.GetLinearVelocityFromWorldPoint(this.GetWorldPoint(localPoint, out), out);\r\n      }\r\n      /// Get the linear damping of the body.\r\n      GetLinearDamping() {\r\n          return this.m_linearDamping;\r\n      }\r\n      /// Set the linear damping of the body.\r\n      SetLinearDamping(linearDamping) {\r\n          this.m_linearDamping = linearDamping;\r\n      }\r\n      /// Get the angular damping of the body.\r\n      GetAngularDamping() {\r\n          return this.m_angularDamping;\r\n      }\r\n      /// Set the angular damping of the body.\r\n      SetAngularDamping(angularDamping) {\r\n          this.m_angularDamping = angularDamping;\r\n      }\r\n      /// Get the gravity scale of the body.\r\n      GetGravityScale() {\r\n          return this.m_gravityScale;\r\n      }\r\n      /// Set the gravity scale of the body.\r\n      SetGravityScale(scale) {\r\n          this.m_gravityScale = scale;\r\n      }\r\n      /// Set the type of this body. This may alter the mass and velocity.\r\n      SetType(type) {\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          if (this.m_type === type) {\r\n              return;\r\n          }\r\n          this.m_type = type;\r\n          this.ResetMassData();\r\n          if (this.m_type === exports.b2BodyType.b2_staticBody) {\r\n              this.m_linearVelocity.SetZero();\r\n              this.m_angularVelocity = 0;\r\n              this.m_sweep.a0 = this.m_sweep.a;\r\n              this.m_sweep.c0.Copy(this.m_sweep.c);\r\n              this.SynchronizeFixtures();\r\n          }\r\n          this.SetAwake(true);\r\n          this.m_force.SetZero();\r\n          this.m_torque = 0;\r\n          // Delete the attached contacts.\r\n          let ce = this.m_contactList;\r\n          while (ce) {\r\n              const ce0 = ce;\r\n              ce = ce.next;\r\n              this.m_world.m_contactManager.Destroy(ce0.contact);\r\n          }\r\n          this.m_contactList = null;\r\n          // Touch the proxies so that new contacts will be created (when appropriate)\r\n          for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n              f.TouchProxies();\r\n          }\r\n      }\r\n      /// Get the type of this body.\r\n      GetType() {\r\n          return this.m_type;\r\n      }\r\n      /// Should this body be treated like a bullet for continuous collision detection?\r\n      SetBullet(flag) {\r\n          this.m_bulletFlag = flag;\r\n      }\r\n      /// Is this body treated like a bullet for continuous collision detection?\r\n      IsBullet() {\r\n          return this.m_bulletFlag;\r\n      }\r\n      /// You can disable sleeping on this body. If you disable sleeping, the\r\n      /// body will be woken.\r\n      SetSleepingAllowed(flag) {\r\n          this.m_autoSleepFlag = flag;\r\n          if (!flag) {\r\n              this.SetAwake(true);\r\n          }\r\n      }\r\n      /// Is this body allowed to sleep\r\n      IsSleepingAllowed() {\r\n          return this.m_autoSleepFlag;\r\n      }\r\n      /// Set the sleep state of the body. A sleeping body has very\r\n      /// low CPU cost.\r\n      /// @param flag set to true to wake the body, false to put it to sleep.\r\n      SetAwake(flag) {\r\n          if (flag) {\r\n              this.m_awakeFlag = true;\r\n              this.m_sleepTime = 0;\r\n          }\r\n          else {\r\n              this.m_awakeFlag = false;\r\n              this.m_sleepTime = 0;\r\n              this.m_linearVelocity.SetZero();\r\n              this.m_angularVelocity = 0;\r\n              this.m_force.SetZero();\r\n              this.m_torque = 0;\r\n          }\r\n      }\r\n      /// Get the sleeping state of this body.\r\n      /// @return true if the body is sleeping.\r\n      IsAwake() {\r\n          return this.m_awakeFlag;\r\n      }\r\n      /// Set the active state of the body. An inactive body is not\r\n      /// simulated and cannot be collided with or woken up.\r\n      /// If you pass a flag of true, all fixtures will be added to the\r\n      /// broad-phase.\r\n      /// If you pass a flag of false, all fixtures will be removed from\r\n      /// the broad-phase and all contacts will be destroyed.\r\n      /// Fixtures and joints are otherwise unaffected. You may continue\r\n      /// to create/destroy fixtures and joints on inactive bodies.\r\n      /// Fixtures on an inactive body are implicitly inactive and will\r\n      /// not participate in collisions, ray-casts, or queries.\r\n      /// Joints connected to an inactive body are implicitly inactive.\r\n      /// An inactive body is still owned by a b2World object and remains\r\n      /// in the body list.\r\n      SetActive(flag) {\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          if (flag === this.IsActive()) {\r\n              return;\r\n          }\r\n          this.m_activeFlag = flag;\r\n          if (flag) {\r\n              // Create all proxies.\r\n              for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                  f.CreateProxies(this.m_xf);\r\n              }\r\n              // Contacts are created the next time step.\r\n          }\r\n          else {\r\n              // Destroy all proxies.\r\n              for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n                  f.DestroyProxies();\r\n              }\r\n              // Destroy the attached contacts.\r\n              let ce = this.m_contactList;\r\n              while (ce) {\r\n                  const ce0 = ce;\r\n                  ce = ce.next;\r\n                  this.m_world.m_contactManager.Destroy(ce0.contact);\r\n              }\r\n              this.m_contactList = null;\r\n          }\r\n      }\r\n      /// Get the active state of the body.\r\n      IsActive() {\r\n          return this.m_activeFlag;\r\n      }\r\n      /// Set this body to have fixed rotation. This causes the mass\r\n      /// to be reset.\r\n      SetFixedRotation(flag) {\r\n          if (this.m_fixedRotationFlag === flag) {\r\n              return;\r\n          }\r\n          this.m_fixedRotationFlag = flag;\r\n          this.m_angularVelocity = 0;\r\n          this.ResetMassData();\r\n      }\r\n      /// Does this body have fixed rotation?\r\n      IsFixedRotation() {\r\n          return this.m_fixedRotationFlag;\r\n      }\r\n      /// Get the list of all fixtures attached to this body.\r\n      GetFixtureList() {\r\n          return this.m_fixtureList;\r\n      }\r\n      /// Get the list of all joints attached to this body.\r\n      GetJointList() {\r\n          return this.m_jointList;\r\n      }\r\n      /// Get the list of all contacts attached to this body.\r\n      /// @warning this list changes during the time step and you may\r\n      /// miss some collisions if you don't use b2ContactListener.\r\n      GetContactList() {\r\n          return this.m_contactList;\r\n      }\r\n      /// Get the next body in the world's body list.\r\n      GetNext() {\r\n          return this.m_next;\r\n      }\r\n      /// Get the user data pointer that was provided in the body definition.\r\n      GetUserData() {\r\n          return this.m_userData;\r\n      }\r\n      /// Set the user data. Use this to store your application specific data.\r\n      SetUserData(data) {\r\n          this.m_userData = data;\r\n      }\r\n      /// Get the parent world of this body.\r\n      GetWorld() {\r\n          return this.m_world;\r\n      }\r\n      /// Dump this body to a log file\r\n      Dump(log) {\r\n          const bodyIndex = this.m_islandIndex;\r\n          log(\"{\\n\");\r\n          log(\"  const bd: b2BodyDef = new b2BodyDef();\\n\");\r\n          let type_str = \"\";\r\n          switch (this.m_type) {\r\n              case exports.b2BodyType.b2_staticBody:\r\n                  type_str = \"b2BodyType.b2_staticBody\";\r\n                  break;\r\n              case exports.b2BodyType.b2_kinematicBody:\r\n                  type_str = \"b2BodyType.b2_kinematicBody\";\r\n                  break;\r\n              case exports.b2BodyType.b2_dynamicBody:\r\n                  type_str = \"b2BodyType.b2_dynamicBody\";\r\n                  break;\r\n              default:\r\n                  // DEBUG: b2Assert(false);\r\n                  break;\r\n          }\r\n          log(\"  bd.type = %s;\\n\", type_str);\r\n          log(\"  bd.position.Set(%.15f, %.15f);\\n\", this.m_xf.p.x, this.m_xf.p.y);\r\n          log(\"  bd.angle = %.15f;\\n\", this.m_sweep.a);\r\n          log(\"  bd.linearVelocity.Set(%.15f, %.15f);\\n\", this.m_linearVelocity.x, this.m_linearVelocity.y);\r\n          log(\"  bd.angularVelocity = %.15f;\\n\", this.m_angularVelocity);\r\n          log(\"  bd.linearDamping = %.15f;\\n\", this.m_linearDamping);\r\n          log(\"  bd.angularDamping = %.15f;\\n\", this.m_angularDamping);\r\n          log(\"  bd.allowSleep = %s;\\n\", (this.m_autoSleepFlag) ? (\"true\") : (\"false\"));\r\n          log(\"  bd.awake = %s;\\n\", (this.m_awakeFlag) ? (\"true\") : (\"false\"));\r\n          log(\"  bd.fixedRotation = %s;\\n\", (this.m_fixedRotationFlag) ? (\"true\") : (\"false\"));\r\n          log(\"  bd.bullet = %s;\\n\", (this.m_bulletFlag) ? (\"true\") : (\"false\"));\r\n          log(\"  bd.active = %s;\\n\", (this.m_activeFlag) ? (\"true\") : (\"false\"));\r\n          log(\"  bd.gravityScale = %.15f;\\n\", this.m_gravityScale);\r\n          log(\"\\n\");\r\n          log(\"  bodies[%d] = this.m_world.CreateBody(bd);\\n\", this.m_islandIndex);\r\n          log(\"\\n\");\r\n          for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n              log(\"  {\\n\");\r\n              f.Dump(log, bodyIndex);\r\n              log(\"  }\\n\");\r\n          }\r\n          log(\"}\\n\");\r\n      }\r\n      SynchronizeFixtures() {\r\n          const xf1 = b2Body.SynchronizeFixtures_s_xf1;\r\n          xf1.q.SetAngle(this.m_sweep.a0);\r\n          b2Rot.MulRV(xf1.q, this.m_sweep.localCenter, xf1.p);\r\n          b2Vec2.SubVV(this.m_sweep.c0, xf1.p, xf1.p);\r\n          for (let f = this.m_fixtureList; f; f = f.m_next) {\r\n              f.Synchronize(xf1, this.m_xf);\r\n          }\r\n      }\r\n      SynchronizeTransform() {\r\n          this.m_xf.q.SetAngle(this.m_sweep.a);\r\n          b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n          b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n      }\r\n      // This is used to prevent connected bodies from colliding.\r\n      // It may lie, depending on the collideConnected flag.\r\n      ShouldCollide(other) {\r\n          // At least one body should be dynamic or kinematic.\r\n          if (this.m_type === exports.b2BodyType.b2_staticBody && other.m_type === exports.b2BodyType.b2_staticBody) {\r\n              return false;\r\n          }\r\n          return this.ShouldCollideConnected(other);\r\n      }\r\n      ShouldCollideConnected(other) {\r\n          // Does a joint prevent collision?\r\n          for (let jn = this.m_jointList; jn; jn = jn.next) {\r\n              if (jn.other === other) {\r\n                  if (!jn.joint.m_collideConnected) {\r\n                      return false;\r\n                  }\r\n              }\r\n          }\r\n          return true;\r\n      }\r\n      Advance(alpha) {\r\n          // Advance to the new safe time. This doesn't sync the broad-phase.\r\n          this.m_sweep.Advance(alpha);\r\n          this.m_sweep.c.Copy(this.m_sweep.c0);\r\n          this.m_sweep.a = this.m_sweep.a0;\r\n          this.m_xf.q.SetAngle(this.m_sweep.a);\r\n          b2Rot.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);\r\n          b2Vec2.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);\r\n      }\r\n      // #if B2_ENABLE_CONTROLLER\r\n      GetControllerList() {\r\n          return this.m_controllerList;\r\n      }\r\n      GetControllerCount() {\r\n          return this.m_controllerCount;\r\n      }\r\n  }\r\n  /// Creates a fixture from a shape and attach it to this body.\r\n  /// This is a convenience function. Use b2FixtureDef if you need to set parameters\r\n  /// like friction, restitution, user data, or filtering.\r\n  /// If the density is non-zero, this function automatically updates the mass of the body.\r\n  /// @param shape the shape to be cloned.\r\n  /// @param density the shape density (set to zero for static bodies).\r\n  /// @warning This function is locked during callbacks.\r\n  b2Body.CreateFixtureShapeDensity_s_def = new b2FixtureDef();\r\n  /// Set the mass properties to override the mass properties of the fixtures.\r\n  /// Note that this changes the center of mass position.\r\n  /// Note that creating or destroying fixtures can also alter the mass.\r\n  /// This function has no effect if the body isn't dynamic.\r\n  /// @param massData the mass properties.\r\n  b2Body.SetMassData_s_oldCenter = new b2Vec2();\r\n  /// This resets the mass properties to the sum of the mass properties of the fixtures.\r\n  /// This normally does not need to be called unless you called SetMassData to override\r\n  /// the mass and you later want to reset the mass.\r\n  b2Body.ResetMassData_s_localCenter = new b2Vec2();\r\n  b2Body.ResetMassData_s_oldCenter = new b2Vec2();\r\n  b2Body.ResetMassData_s_massData = new b2MassData();\r\n  b2Body.SynchronizeFixtures_s_xf1 = new b2Transform();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  (function (b2JointType) {\r\n      b2JointType[b2JointType[\"e_unknownJoint\"] = 0] = \"e_unknownJoint\";\r\n      b2JointType[b2JointType[\"e_revoluteJoint\"] = 1] = \"e_revoluteJoint\";\r\n      b2JointType[b2JointType[\"e_prismaticJoint\"] = 2] = \"e_prismaticJoint\";\r\n      b2JointType[b2JointType[\"e_distanceJoint\"] = 3] = \"e_distanceJoint\";\r\n      b2JointType[b2JointType[\"e_pulleyJoint\"] = 4] = \"e_pulleyJoint\";\r\n      b2JointType[b2JointType[\"e_mouseJoint\"] = 5] = \"e_mouseJoint\";\r\n      b2JointType[b2JointType[\"e_gearJoint\"] = 6] = \"e_gearJoint\";\r\n      b2JointType[b2JointType[\"e_wheelJoint\"] = 7] = \"e_wheelJoint\";\r\n      b2JointType[b2JointType[\"e_weldJoint\"] = 8] = \"e_weldJoint\";\r\n      b2JointType[b2JointType[\"e_frictionJoint\"] = 9] = \"e_frictionJoint\";\r\n      b2JointType[b2JointType[\"e_ropeJoint\"] = 10] = \"e_ropeJoint\";\r\n      b2JointType[b2JointType[\"e_motorJoint\"] = 11] = \"e_motorJoint\";\r\n      b2JointType[b2JointType[\"e_areaJoint\"] = 12] = \"e_areaJoint\";\r\n  })(exports.b2JointType || (exports.b2JointType = {}));\r\n  (function (b2LimitState) {\r\n      b2LimitState[b2LimitState[\"e_inactiveLimit\"] = 0] = \"e_inactiveLimit\";\r\n      b2LimitState[b2LimitState[\"e_atLowerLimit\"] = 1] = \"e_atLowerLimit\";\r\n      b2LimitState[b2LimitState[\"e_atUpperLimit\"] = 2] = \"e_atUpperLimit\";\r\n      b2LimitState[b2LimitState[\"e_equalLimits\"] = 3] = \"e_equalLimits\";\r\n  })(exports.b2LimitState || (exports.b2LimitState = {}));\r\n  class b2Jacobian {\r\n      constructor() {\r\n          this.linear = new b2Vec2();\r\n          this.angularA = 0;\r\n          this.angularB = 0;\r\n      }\r\n      SetZero() {\r\n          this.linear.SetZero();\r\n          this.angularA = 0;\r\n          this.angularB = 0;\r\n          return this;\r\n      }\r\n      Set(x, a1, a2) {\r\n          this.linear.Copy(x);\r\n          this.angularA = a1;\r\n          this.angularB = a2;\r\n          return this;\r\n      }\r\n  }\r\n  /// A joint edge is used to connect bodies and joints together\r\n  /// in a joint graph where each body is a node and each joint\r\n  /// is an edge. A joint edge belongs to a doubly linked list\r\n  /// maintained in each attached body. Each joint has two joint\r\n  /// nodes, one for each attached body.\r\n  class b2JointEdge {\r\n      constructor(joint, other) {\r\n          this.prev = null; ///< the previous joint edge in the body's joint list\r\n          this.next = null; ///< the next joint edge in the body's joint list\r\n          this.joint = joint;\r\n          this.other = other;\r\n      }\r\n  }\r\n  /// Joint definitions are used to construct joints.\r\n  class b2JointDef {\r\n      constructor(type) {\r\n          /// The joint type is set automatically for concrete joint types.\r\n          this.type = exports.b2JointType.e_unknownJoint;\r\n          /// Use this to attach application specific data to your joints.\r\n          this.userData = null;\r\n          /// Set this flag to true if the attached bodies should collide.\r\n          this.collideConnected = false;\r\n          this.type = type;\r\n      }\r\n  }\r\n  /// The base joint class. Joints are used to constraint two bodies together in\r\n  /// various fashions. Some joints also feature limits and motors.\r\n  class b2Joint {\r\n      constructor(def) {\r\n          // DEBUG: b2Assert(def.bodyA !== def.bodyB);\r\n          this.m_type = exports.b2JointType.e_unknownJoint;\r\n          this.m_prev = null;\r\n          this.m_next = null;\r\n          this.m_index = 0;\r\n          this.m_islandFlag = false;\r\n          this.m_collideConnected = false;\r\n          this.m_userData = null;\r\n          this.m_type = def.type;\r\n          this.m_edgeA = new b2JointEdge(this, def.bodyB);\r\n          this.m_edgeB = new b2JointEdge(this, def.bodyA);\r\n          this.m_bodyA = def.bodyA;\r\n          this.m_bodyB = def.bodyB;\r\n          this.m_collideConnected = b2Maybe(def.collideConnected, false);\r\n          this.m_userData = def.userData;\r\n      }\r\n      /// Get the type of the concrete joint.\r\n      GetType() {\r\n          return this.m_type;\r\n      }\r\n      /// Get the first body attached to this joint.\r\n      GetBodyA() {\r\n          return this.m_bodyA;\r\n      }\r\n      /// Get the second body attached to this joint.\r\n      GetBodyB() {\r\n          return this.m_bodyB;\r\n      }\r\n      /// Get the next joint the world joint list.\r\n      GetNext() {\r\n          return this.m_next;\r\n      }\r\n      /// Get the user data pointer.\r\n      GetUserData() {\r\n          return this.m_userData;\r\n      }\r\n      /// Set the user data pointer.\r\n      SetUserData(data) {\r\n          this.m_userData = data;\r\n      }\r\n      /// Short-cut function to determine if either body is inactive.\r\n      IsActive() {\r\n          return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();\r\n      }\r\n      /// Get collide connected.\r\n      /// Note: modifying the collide connect flag won't work correctly because\r\n      /// the flag is only checked when fixture AABBs begin to overlap.\r\n      GetCollideConnected() {\r\n          return this.m_collideConnected;\r\n      }\r\n      /// Dump this joint to the log file.\r\n      Dump(log) {\r\n          log(\"// Dump is not supported for this joint type.\\n\");\r\n      }\r\n      /// Shift the origin for any points stored in world coordinates.\r\n      ShiftOrigin(newOrigin) {\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Distance joint definition. This requires defining an\r\n  /// anchor point on both bodies and the non-zero length of the\r\n  /// distance joint. The definition uses local anchor points\r\n  /// so that the initial configuration can violate the constraint\r\n  /// slightly. This helps when saving and loading a game.\r\n  /// @warning Do not use a zero or short length.\r\n  class b2DistanceJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_distanceJoint);\r\n          this.localAnchorA = new b2Vec2();\r\n          this.localAnchorB = new b2Vec2();\r\n          this.length = 1;\r\n          this.frequencyHz = 0;\r\n          this.dampingRatio = 0;\r\n      }\r\n      Initialize(b1, b2, anchor1, anchor2) {\r\n          this.bodyA = b1;\r\n          this.bodyB = b2;\r\n          this.bodyA.GetLocalPoint(anchor1, this.localAnchorA);\r\n          this.bodyB.GetLocalPoint(anchor2, this.localAnchorB);\r\n          this.length = b2Vec2.DistanceVV(anchor1, anchor2);\r\n          this.frequencyHz = 0;\r\n          this.dampingRatio = 0;\r\n      }\r\n  }\r\n  class b2DistanceJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          this.m_frequencyHz = 0;\r\n          this.m_dampingRatio = 0;\r\n          this.m_bias = 0;\r\n          // Solver shared\r\n          this.m_localAnchorA = new b2Vec2();\r\n          this.m_localAnchorB = new b2Vec2();\r\n          this.m_gamma = 0;\r\n          this.m_impulse = 0;\r\n          this.m_length = 0;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_u = new b2Vec2();\r\n          this.m_rA = new b2Vec2();\r\n          this.m_rB = new b2Vec2();\r\n          this.m_localCenterA = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_invMassA = 0;\r\n          this.m_invMassB = 0;\r\n          this.m_invIA = 0;\r\n          this.m_invIB = 0;\r\n          this.m_mass = 0;\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_lalcA = new b2Vec2();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n          this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n          this.m_localAnchorA.Copy(def.localAnchorA);\r\n          this.m_localAnchorB.Copy(def.localAnchorB);\r\n          this.m_length = def.length;\r\n      }\r\n      GetAnchorA(out) {\r\n          return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          out.x = inv_dt * this.m_impulse * this.m_u.x;\r\n          out.y = inv_dt * this.m_impulse * this.m_u.y;\r\n          return out;\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return 0;\r\n      }\r\n      GetLocalAnchorA() { return this.m_localAnchorA; }\r\n      GetLocalAnchorB() { return this.m_localAnchorB; }\r\n      SetLength(length) {\r\n          this.m_length = length;\r\n      }\r\n      Length() {\r\n          return this.m_length;\r\n      }\r\n      SetFrequency(hz) {\r\n          this.m_frequencyHz = hz;\r\n      }\r\n      GetFrequency() {\r\n          return this.m_frequencyHz;\r\n      }\r\n      SetDampingRatio(ratio) {\r\n          this.m_dampingRatio = ratio;\r\n      }\r\n      GetDampingRatio() {\r\n          return this.m_dampingRatio;\r\n      }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          log(\"  const jd: b2DistanceJointDef = new b2DistanceJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n          log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n          log(\"  jd.length = %.15f;\\n\", this.m_length);\r\n          log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n          log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassA = this.m_bodyA.m_invMass;\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIA = this.m_bodyA.m_invI;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          const cA = data.positions[this.m_indexA].c;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // m_u = cB + m_rB - cA - m_rA;\r\n          this.m_u.x = cB.x + this.m_rB.x - cA.x - this.m_rA.x;\r\n          this.m_u.y = cB.y + this.m_rB.y - cA.y - this.m_rA.y;\r\n          // Handle singularity.\r\n          const length = this.m_u.Length();\r\n          if (length > b2_linearSlop) {\r\n              this.m_u.SelfMul(1 / length);\r\n          }\r\n          else {\r\n              this.m_u.SetZero();\r\n          }\r\n          // float32 crAu = b2Cross(m_rA, m_u);\r\n          const crAu = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n          // float32 crBu = b2Cross(m_rB, m_u);\r\n          const crBu = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n          // float32 invMass = m_invMassA + m_invIA * crAu * crAu + m_invMassB + m_invIB * crBu * crBu;\r\n          let invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB + this.m_invIB * crBu * crBu;\r\n          // Compute the effective mass matrix.\r\n          this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n          if (this.m_frequencyHz > 0) {\r\n              const C = length - this.m_length;\r\n              // Frequency\r\n              const omega = 2 * b2_pi * this.m_frequencyHz;\r\n              // Damping coefficient\r\n              const d = 2 * this.m_mass * this.m_dampingRatio * omega;\r\n              // Spring stiffness\r\n              const k = this.m_mass * omega * omega;\r\n              // magic formulas\r\n              const h = data.step.dt;\r\n              this.m_gamma = h * (d + h * k);\r\n              this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n              this.m_bias = C * h * k * this.m_gamma;\r\n              invMass += this.m_gamma;\r\n              this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n          }\r\n          else {\r\n              this.m_gamma = 0;\r\n              this.m_bias = 0;\r\n          }\r\n          if (data.step.warmStarting) {\r\n              // Scale the impulse to support a variable time step.\r\n              this.m_impulse *= data.step.dtRatio;\r\n              // b2Vec2 P = m_impulse * m_u;\r\n              const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2DistanceJoint.InitVelocityConstraints_s_P);\r\n              // vA -= m_invMassA * P;\r\n              vA.SelfMulSub(this.m_invMassA, P);\r\n              // wA -= m_invIA * b2Cross(m_rA, P);\r\n              wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n              // vB += m_invMassB * P;\r\n              vB.SelfMulAdd(this.m_invMassB, P);\r\n              // wB += m_invIB * b2Cross(m_rB, P);\r\n              wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n          }\r\n          else {\r\n              this.m_impulse = 0;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n          const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2DistanceJoint.SolveVelocityConstraints_s_vpA);\r\n          // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n          const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2DistanceJoint.SolveVelocityConstraints_s_vpB);\r\n          // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n          const Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n          const impulse = (-this.m_mass * (Cdot + this.m_bias + this.m_gamma * this.m_impulse));\r\n          this.m_impulse += impulse;\r\n          // b2Vec2 P = impulse * m_u;\r\n          const P = b2Vec2.MulSV(impulse, this.m_u, b2DistanceJoint.SolveVelocityConstraints_s_P);\r\n          // vA -= m_invMassA * P;\r\n          vA.SelfMulSub(this.m_invMassA, P);\r\n          // wA -= m_invIA * b2Cross(m_rA, P);\r\n          wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n          // vB += m_invMassB * P;\r\n          vB.SelfMulAdd(this.m_invMassB, P);\r\n          // wB += m_invIB * b2Cross(m_rB, P);\r\n          wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          if (this.m_frequencyHz > 0) {\r\n              // There is no position correction for soft distance constraints.\r\n              return true;\r\n          }\r\n          const cA = data.positions[this.m_indexA].c;\r\n          let aA = data.positions[this.m_indexA].a;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          let aB = data.positions[this.m_indexB].a;\r\n          // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA); // use m_rA\r\n          // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB); // use m_rB\r\n          // b2Vec2 u = cB + rB - cA - rA;\r\n          const u = this.m_u; // use m_u\r\n          u.x = cB.x + rB.x - cA.x - rA.x;\r\n          u.y = cB.y + rB.y - cA.y - rA.y;\r\n          // float32 length = u.Normalize();\r\n          const length = this.m_u.Normalize();\r\n          // float32 C = length - m_length;\r\n          let C = length - this.m_length;\r\n          C = b2Clamp(C, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n          const impulse = (-this.m_mass * C);\r\n          // b2Vec2 P = impulse * u;\r\n          const P = b2Vec2.MulSV(impulse, u, b2DistanceJoint.SolvePositionConstraints_s_P);\r\n          // cA -= m_invMassA * P;\r\n          cA.SelfMulSub(this.m_invMassA, P);\r\n          // aA -= m_invIA * b2Cross(rA, P);\r\n          aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n          // cB += m_invMassB * P;\r\n          cB.SelfMulAdd(this.m_invMassB, P);\r\n          // aB += m_invIB * b2Cross(rB, P);\r\n          aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n          // data.positions[this.m_indexA].c = cA;\r\n          data.positions[this.m_indexA].a = aA;\r\n          // data.positions[this.m_indexB].c = cB;\r\n          data.positions[this.m_indexB].a = aB;\r\n          return b2Abs(C) < b2_linearSlop;\r\n      }\r\n  }\r\n  b2DistanceJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\n  b2DistanceJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\n  b2DistanceJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\n  b2DistanceJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\n  b2DistanceJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n\r\n  // DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\n  class b2AreaJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_areaJoint);\r\n          this.bodies = [];\r\n          this.frequencyHz = 0;\r\n          this.dampingRatio = 0;\r\n      }\r\n      AddBody(body) {\r\n          this.bodies.push(body);\r\n          if (this.bodies.length === 1) {\r\n              this.bodyA = body;\r\n          }\r\n          else if (this.bodies.length === 2) {\r\n              this.bodyB = body;\r\n          }\r\n      }\r\n  }\r\n  class b2AreaJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          this.m_frequencyHz = 0;\r\n          this.m_dampingRatio = 0;\r\n          // Solver shared\r\n          this.m_impulse = 0;\r\n          this.m_targetArea = 0;\r\n          // DEBUG: b2Assert(def.bodies.length >= 3, \"You cannot create an area joint with less than three bodies.\");\r\n          this.m_bodies = def.bodies;\r\n          this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n          this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n          this.m_targetLengths = b2MakeNumberArray(def.bodies.length);\r\n          this.m_normals = b2Vec2.MakeArray(def.bodies.length);\r\n          this.m_joints = []; // b2MakeNullArray(def.bodies.length);\r\n          this.m_deltas = b2Vec2.MakeArray(def.bodies.length);\r\n          this.m_delta = new b2Vec2();\r\n          const djd = new b2DistanceJointDef();\r\n          djd.frequencyHz = this.m_frequencyHz;\r\n          djd.dampingRatio = this.m_dampingRatio;\r\n          this.m_targetArea = 0;\r\n          for (let i = 0; i < this.m_bodies.length; ++i) {\r\n              const body = this.m_bodies[i];\r\n              const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n              const body_c = body.GetWorldCenter();\r\n              const next_c = next.GetWorldCenter();\r\n              this.m_targetLengths[i] = b2Vec2.DistanceVV(body_c, next_c);\r\n              this.m_targetArea += b2Vec2.CrossVV(body_c, next_c);\r\n              djd.Initialize(body, next, body_c, next_c);\r\n              this.m_joints[i] = body.GetWorld().CreateJoint(djd);\r\n          }\r\n          this.m_targetArea *= 0.5;\r\n      }\r\n      GetAnchorA(out) {\r\n          return out;\r\n      }\r\n      GetAnchorB(out) {\r\n          return out;\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          return out;\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return 0;\r\n      }\r\n      SetFrequency(hz) {\r\n          this.m_frequencyHz = hz;\r\n          for (let i = 0; i < this.m_joints.length; ++i) {\r\n              this.m_joints[i].SetFrequency(hz);\r\n          }\r\n      }\r\n      GetFrequency() {\r\n          return this.m_frequencyHz;\r\n      }\r\n      SetDampingRatio(ratio) {\r\n          this.m_dampingRatio = ratio;\r\n          for (let i = 0; i < this.m_joints.length; ++i) {\r\n              this.m_joints[i].SetDampingRatio(ratio);\r\n          }\r\n      }\r\n      GetDampingRatio() {\r\n          return this.m_dampingRatio;\r\n      }\r\n      Dump(log) {\r\n          log(\"Area joint dumping is not supported.\\n\");\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          for (let i = 0; i < this.m_bodies.length; ++i) {\r\n              const prev = this.m_bodies[(i + this.m_bodies.length - 1) % this.m_bodies.length];\r\n              const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n              const prev_c = data.positions[prev.m_islandIndex].c;\r\n              const next_c = data.positions[next.m_islandIndex].c;\r\n              const delta = this.m_deltas[i];\r\n              b2Vec2.SubVV(next_c, prev_c, delta);\r\n          }\r\n          if (data.step.warmStarting) {\r\n              this.m_impulse *= data.step.dtRatio;\r\n              for (let i = 0; i < this.m_bodies.length; ++i) {\r\n                  const body = this.m_bodies[i];\r\n                  const body_v = data.velocities[body.m_islandIndex].v;\r\n                  const delta = this.m_deltas[i];\r\n                  body_v.x += body.m_invMass * delta.y * 0.5 * this.m_impulse;\r\n                  body_v.y += body.m_invMass * -delta.x * 0.5 * this.m_impulse;\r\n              }\r\n          }\r\n          else {\r\n              this.m_impulse = 0;\r\n          }\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          let dotMassSum = 0;\r\n          let crossMassSum = 0;\r\n          for (let i = 0; i < this.m_bodies.length; ++i) {\r\n              const body = this.m_bodies[i];\r\n              const body_v = data.velocities[body.m_islandIndex].v;\r\n              const delta = this.m_deltas[i];\r\n              dotMassSum += delta.LengthSquared() / body.GetMass();\r\n              crossMassSum += b2Vec2.CrossVV(body_v, delta);\r\n          }\r\n          const lambda = -2 * crossMassSum / dotMassSum;\r\n          // lambda = b2Clamp(lambda, -b2_maxLinearCorrection, b2_maxLinearCorrection);\r\n          this.m_impulse += lambda;\r\n          for (let i = 0; i < this.m_bodies.length; ++i) {\r\n              const body = this.m_bodies[i];\r\n              const body_v = data.velocities[body.m_islandIndex].v;\r\n              const delta = this.m_deltas[i];\r\n              body_v.x += body.m_invMass * delta.y * 0.5 * lambda;\r\n              body_v.y += body.m_invMass * -delta.x * 0.5 * lambda;\r\n          }\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          let perimeter = 0;\r\n          let area = 0;\r\n          for (let i = 0; i < this.m_bodies.length; ++i) {\r\n              const body = this.m_bodies[i];\r\n              const next = this.m_bodies[(i + 1) % this.m_bodies.length];\r\n              const body_c = data.positions[body.m_islandIndex].c;\r\n              const next_c = data.positions[next.m_islandIndex].c;\r\n              const delta = b2Vec2.SubVV(next_c, body_c, this.m_delta);\r\n              let dist = delta.Length();\r\n              if (dist < b2_epsilon) {\r\n                  dist = 1;\r\n              }\r\n              this.m_normals[i].x = delta.y / dist;\r\n              this.m_normals[i].y = -delta.x / dist;\r\n              perimeter += dist;\r\n              area += b2Vec2.CrossVV(body_c, next_c);\r\n          }\r\n          area *= 0.5;\r\n          const deltaArea = this.m_targetArea - area;\r\n          const toExtrude = 0.5 * deltaArea / perimeter;\r\n          let done = true;\r\n          for (let i = 0; i < this.m_bodies.length; ++i) {\r\n              const body = this.m_bodies[i];\r\n              const body_c = data.positions[body.m_islandIndex].c;\r\n              const next_i = (i + 1) % this.m_bodies.length;\r\n              const delta = b2Vec2.AddVV(this.m_normals[i], this.m_normals[next_i], this.m_delta);\r\n              delta.SelfMul(toExtrude);\r\n              const norm_sq = delta.LengthSquared();\r\n              if (norm_sq > b2Sq(b2_maxLinearCorrection)) {\r\n                  delta.SelfMul(b2_maxLinearCorrection / b2Sqrt(norm_sq));\r\n              }\r\n              if (norm_sq > b2Sq(b2_linearSlop)) {\r\n                  done = false;\r\n              }\r\n              body_c.x += delta.x;\r\n              body_c.y += delta.y;\r\n          }\r\n          return done;\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Friction joint definition.\r\n  class b2FrictionJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_frictionJoint);\r\n          this.localAnchorA = new b2Vec2();\r\n          this.localAnchorB = new b2Vec2();\r\n          this.maxForce = 0;\r\n          this.maxTorque = 0;\r\n      }\r\n      Initialize(bA, bB, anchor) {\r\n          this.bodyA = bA;\r\n          this.bodyB = bB;\r\n          this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n          this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n      }\r\n  }\r\n  class b2FrictionJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          this.m_localAnchorA = new b2Vec2();\r\n          this.m_localAnchorB = new b2Vec2();\r\n          // Solver shared\r\n          this.m_linearImpulse = new b2Vec2();\r\n          this.m_angularImpulse = 0;\r\n          this.m_maxForce = 0;\r\n          this.m_maxTorque = 0;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_rA = new b2Vec2();\r\n          this.m_rB = new b2Vec2();\r\n          this.m_localCenterA = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_invMassA = 0;\r\n          this.m_invMassB = 0;\r\n          this.m_invIA = 0;\r\n          this.m_invIB = 0;\r\n          this.m_linearMass = new b2Mat22();\r\n          this.m_angularMass = 0;\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_lalcA = new b2Vec2();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_K = new b2Mat22();\r\n          this.m_localAnchorA.Copy(def.localAnchorA);\r\n          this.m_localAnchorB.Copy(def.localAnchorB);\r\n          this.m_linearImpulse.SetZero();\r\n          this.m_maxForce = b2Maybe(def.maxForce, 0);\r\n          this.m_maxTorque = b2Maybe(def.maxTorque, 0);\r\n          this.m_linearMass.SetZero();\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassA = this.m_bodyA.m_invMass;\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIA = this.m_bodyA.m_invI;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          // const cA: b2Vec2 = data.positions[this.m_indexA].c;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          // const cB: b2Vec2 = data.positions[this.m_indexB].c;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          // const qA: b2Rot = new b2Rot(aA), qB: b2Rot = new b2Rot(aB);\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // Compute the effective mass matrix.\r\n          // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // J = [-I -r1_skew I r2_skew]\r\n          //     [ 0       -1 0       1]\r\n          // r_skew = [-ry; rx]\r\n          // Matlab\r\n          // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n          //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n          //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          const K = this.m_K; // new b2Mat22();\r\n          K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n          K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n          K.ey.x = K.ex.y;\r\n          K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n          K.GetInverse(this.m_linearMass);\r\n          this.m_angularMass = iA + iB;\r\n          if (this.m_angularMass > 0) {\r\n              this.m_angularMass = 1 / this.m_angularMass;\r\n          }\r\n          if (data.step.warmStarting) {\r\n              // Scale impulses to support a variable time step.\r\n              // m_linearImpulse *= data.step.dtRatio;\r\n              this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n              this.m_angularImpulse *= data.step.dtRatio;\r\n              // const P: b2Vec2(m_linearImpulse.x, m_linearImpulse.y);\r\n              const P = this.m_linearImpulse;\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              // wA -= iA * (b2Cross(m_rA, P) + m_angularImpulse);\r\n              wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_angularImpulse);\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              // wB += iB * (b2Cross(m_rB, P) + m_angularImpulse);\r\n              wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_angularImpulse);\r\n          }\r\n          else {\r\n              this.m_linearImpulse.SetZero();\r\n              this.m_angularImpulse = 0;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          const h = data.step.dt;\r\n          // Solve angular friction\r\n          {\r\n              const Cdot = wB - wA;\r\n              let impulse = (-this.m_angularMass * Cdot);\r\n              const oldImpulse = this.m_angularImpulse;\r\n              const maxImpulse = h * this.m_maxTorque;\r\n              this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, (-maxImpulse), maxImpulse);\r\n              impulse = this.m_angularImpulse - oldImpulse;\r\n              wA -= iA * impulse;\r\n              wB += iB * impulse;\r\n          }\r\n          // Solve linear friction\r\n          {\r\n              // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n              const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n              // b2Vec2 impulse = -b2Mul(m_linearMass, Cdot);\r\n              const impulseV = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2FrictionJoint.SolveVelocityConstraints_s_impulseV).SelfNeg();\r\n              // b2Vec2 oldImpulse = m_linearImpulse;\r\n              const oldImpulseV = b2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV.Copy(this.m_linearImpulse);\r\n              // m_linearImpulse += impulse;\r\n              this.m_linearImpulse.SelfAdd(impulseV);\r\n              const maxImpulse = h * this.m_maxForce;\r\n              if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                  this.m_linearImpulse.Normalize();\r\n                  this.m_linearImpulse.SelfMul(maxImpulse);\r\n              }\r\n              // impulse = m_linearImpulse - oldImpulse;\r\n              b2Vec2.SubVV(this.m_linearImpulse, oldImpulseV, impulseV);\r\n              // vA -= mA * impulse;\r\n              vA.SelfMulSub(mA, impulseV);\r\n              // wA -= iA * b2Cross(m_rA, impulse);\r\n              wA -= iA * b2Vec2.CrossVV(this.m_rA, impulseV);\r\n              // vB += mB * impulse;\r\n              vB.SelfMulAdd(mB, impulseV);\r\n              // wB += iB * b2Cross(m_rB, impulse);\r\n              wB += iB * b2Vec2.CrossVV(this.m_rB, impulseV);\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          return true;\r\n      }\r\n      GetAnchorA(out) {\r\n          return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          out.x = inv_dt * this.m_linearImpulse.x;\r\n          out.y = inv_dt * this.m_linearImpulse.y;\r\n          return out;\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return inv_dt * this.m_angularImpulse;\r\n      }\r\n      GetLocalAnchorA() { return this.m_localAnchorA; }\r\n      GetLocalAnchorB() { return this.m_localAnchorB; }\r\n      SetMaxForce(force) {\r\n          this.m_maxForce = force;\r\n      }\r\n      GetMaxForce() {\r\n          return this.m_maxForce;\r\n      }\r\n      SetMaxTorque(torque) {\r\n          this.m_maxTorque = torque;\r\n      }\r\n      GetMaxTorque() {\r\n          return this.m_maxTorque;\r\n      }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          log(\"  const jd: b2FrictionJointDef = new b2FrictionJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n          log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n          log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n          log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n  }\r\n  b2FrictionJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\n  b2FrictionJoint.SolveVelocityConstraints_s_impulseV = new b2Vec2();\r\n  b2FrictionJoint.SolveVelocityConstraints_s_oldImpulseV = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Gear joint definition. This definition requires two existing\r\n  /// revolute or prismatic joints (any combination will work).\r\n  class b2GearJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_gearJoint);\r\n          this.ratio = 1;\r\n      }\r\n  }\r\n  class b2GearJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          this.m_typeA = exports.b2JointType.e_unknownJoint;\r\n          this.m_typeB = exports.b2JointType.e_unknownJoint;\r\n          // Solver shared\r\n          this.m_localAnchorA = new b2Vec2();\r\n          this.m_localAnchorB = new b2Vec2();\r\n          this.m_localAnchorC = new b2Vec2();\r\n          this.m_localAnchorD = new b2Vec2();\r\n          this.m_localAxisC = new b2Vec2();\r\n          this.m_localAxisD = new b2Vec2();\r\n          this.m_referenceAngleA = 0;\r\n          this.m_referenceAngleB = 0;\r\n          this.m_constant = 0;\r\n          this.m_ratio = 0;\r\n          this.m_impulse = 0;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_indexC = 0;\r\n          this.m_indexD = 0;\r\n          this.m_lcA = new b2Vec2();\r\n          this.m_lcB = new b2Vec2();\r\n          this.m_lcC = new b2Vec2();\r\n          this.m_lcD = new b2Vec2();\r\n          this.m_mA = 0;\r\n          this.m_mB = 0;\r\n          this.m_mC = 0;\r\n          this.m_mD = 0;\r\n          this.m_iA = 0;\r\n          this.m_iB = 0;\r\n          this.m_iC = 0;\r\n          this.m_iD = 0;\r\n          this.m_JvAC = new b2Vec2();\r\n          this.m_JvBD = new b2Vec2();\r\n          this.m_JwA = 0;\r\n          this.m_JwB = 0;\r\n          this.m_JwC = 0;\r\n          this.m_JwD = 0;\r\n          this.m_mass = 0;\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_qC = new b2Rot();\r\n          this.m_qD = new b2Rot();\r\n          this.m_lalcA = new b2Vec2();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_lalcC = new b2Vec2();\r\n          this.m_lalcD = new b2Vec2();\r\n          this.m_joint1 = def.joint1;\r\n          this.m_joint2 = def.joint2;\r\n          this.m_typeA = this.m_joint1.GetType();\r\n          this.m_typeB = this.m_joint2.GetType();\r\n          // DEBUG: b2Assert(this.m_typeA === b2JointType.e_revoluteJoint || this.m_typeA === b2JointType.e_prismaticJoint);\r\n          // DEBUG: b2Assert(this.m_typeB === b2JointType.e_revoluteJoint || this.m_typeB === b2JointType.e_prismaticJoint);\r\n          let coordinateA, coordinateB;\r\n          // TODO_ERIN there might be some problem with the joint edges in b2Joint.\r\n          this.m_bodyC = this.m_joint1.GetBodyA();\r\n          this.m_bodyA = this.m_joint1.GetBodyB();\r\n          // Get geometry of joint1\r\n          const xfA = this.m_bodyA.m_xf;\r\n          const aA = this.m_bodyA.m_sweep.a;\r\n          const xfC = this.m_bodyC.m_xf;\r\n          const aC = this.m_bodyC.m_sweep.a;\r\n          if (this.m_typeA === exports.b2JointType.e_revoluteJoint) {\r\n              const revolute = def.joint1;\r\n              this.m_localAnchorC.Copy(revolute.m_localAnchorA);\r\n              this.m_localAnchorA.Copy(revolute.m_localAnchorB);\r\n              this.m_referenceAngleA = revolute.m_referenceAngle;\r\n              this.m_localAxisC.SetZero();\r\n              coordinateA = aA - aC - this.m_referenceAngleA;\r\n          }\r\n          else {\r\n              const prismatic = def.joint1;\r\n              this.m_localAnchorC.Copy(prismatic.m_localAnchorA);\r\n              this.m_localAnchorA.Copy(prismatic.m_localAnchorB);\r\n              this.m_referenceAngleA = prismatic.m_referenceAngle;\r\n              this.m_localAxisC.Copy(prismatic.m_localXAxisA);\r\n              // b2Vec2 pC = m_localAnchorC;\r\n              const pC = this.m_localAnchorC;\r\n              // b2Vec2 pA = b2MulT(xfC.q, b2Mul(xfA.q, m_localAnchorA) + (xfA.p - xfC.p));\r\n              const pA = b2Rot.MulTRV(xfC.q, b2Vec2.AddVV(b2Rot.MulRV(xfA.q, this.m_localAnchorA, b2Vec2.s_t0), b2Vec2.SubVV(xfA.p, xfC.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n              // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n              coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n          }\r\n          this.m_bodyD = this.m_joint2.GetBodyA();\r\n          this.m_bodyB = this.m_joint2.GetBodyB();\r\n          // Get geometry of joint2\r\n          const xfB = this.m_bodyB.m_xf;\r\n          const aB = this.m_bodyB.m_sweep.a;\r\n          const xfD = this.m_bodyD.m_xf;\r\n          const aD = this.m_bodyD.m_sweep.a;\r\n          if (this.m_typeB === exports.b2JointType.e_revoluteJoint) {\r\n              const revolute = def.joint2;\r\n              this.m_localAnchorD.Copy(revolute.m_localAnchorA);\r\n              this.m_localAnchorB.Copy(revolute.m_localAnchorB);\r\n              this.m_referenceAngleB = revolute.m_referenceAngle;\r\n              this.m_localAxisD.SetZero();\r\n              coordinateB = aB - aD - this.m_referenceAngleB;\r\n          }\r\n          else {\r\n              const prismatic = def.joint2;\r\n              this.m_localAnchorD.Copy(prismatic.m_localAnchorA);\r\n              this.m_localAnchorB.Copy(prismatic.m_localAnchorB);\r\n              this.m_referenceAngleB = prismatic.m_referenceAngle;\r\n              this.m_localAxisD.Copy(prismatic.m_localXAxisA);\r\n              // b2Vec2 pD = m_localAnchorD;\r\n              const pD = this.m_localAnchorD;\r\n              // b2Vec2 pB = b2MulT(xfD.q, b2Mul(xfB.q, m_localAnchorB) + (xfB.p - xfD.p));\r\n              const pB = b2Rot.MulTRV(xfD.q, b2Vec2.AddVV(b2Rot.MulRV(xfB.q, this.m_localAnchorB, b2Vec2.s_t0), b2Vec2.SubVV(xfB.p, xfD.p, b2Vec2.s_t1), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n              // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n              coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n          }\r\n          this.m_ratio = b2Maybe(def.ratio, 1);\r\n          this.m_constant = coordinateA + this.m_ratio * coordinateB;\r\n          this.m_impulse = 0;\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_indexC = this.m_bodyC.m_islandIndex;\r\n          this.m_indexD = this.m_bodyD.m_islandIndex;\r\n          this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);\r\n          this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);\r\n          this.m_mA = this.m_bodyA.m_invMass;\r\n          this.m_mB = this.m_bodyB.m_invMass;\r\n          this.m_mC = this.m_bodyC.m_invMass;\r\n          this.m_mD = this.m_bodyD.m_invMass;\r\n          this.m_iA = this.m_bodyA.m_invI;\r\n          this.m_iB = this.m_bodyB.m_invI;\r\n          this.m_iC = this.m_bodyC.m_invI;\r\n          this.m_iD = this.m_bodyD.m_invI;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const aC = data.positions[this.m_indexC].a;\r\n          const vC = data.velocities[this.m_indexC].v;\r\n          let wC = data.velocities[this.m_indexC].w;\r\n          const aD = data.positions[this.m_indexD].a;\r\n          const vD = data.velocities[this.m_indexD].v;\r\n          let wD = data.velocities[this.m_indexD].w;\r\n          // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n          this.m_mass = 0;\r\n          if (this.m_typeA === exports.b2JointType.e_revoluteJoint) {\r\n              this.m_JvAC.SetZero();\r\n              this.m_JwA = 1;\r\n              this.m_JwC = 1;\r\n              this.m_mass += this.m_iA + this.m_iC;\r\n          }\r\n          else {\r\n              // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n              const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.InitVelocityConstraints_s_u);\r\n              // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n              b2Vec2.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);\r\n              const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.InitVelocityConstraints_s_rC);\r\n              // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n              b2Vec2.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);\r\n              const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.InitVelocityConstraints_s_rA);\r\n              // m_JvAC = u;\r\n              this.m_JvAC.Copy(u);\r\n              // m_JwC = b2Cross(rC, u);\r\n              this.m_JwC = b2Vec2.CrossVV(rC, u);\r\n              // m_JwA = b2Cross(rA, u);\r\n              this.m_JwA = b2Vec2.CrossVV(rA, u);\r\n              this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\r\n          }\r\n          if (this.m_typeB === exports.b2JointType.e_revoluteJoint) {\r\n              this.m_JvBD.SetZero();\r\n              this.m_JwB = this.m_ratio;\r\n              this.m_JwD = this.m_ratio;\r\n              this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n          }\r\n          else {\r\n              // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n              const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.InitVelocityConstraints_s_u);\r\n              // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n              b2Vec2.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);\r\n              const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.InitVelocityConstraints_s_rD);\r\n              // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n              b2Vec2.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);\r\n              const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.InitVelocityConstraints_s_rB);\r\n              // m_JvBD = m_ratio * u;\r\n              b2Vec2.MulSV(this.m_ratio, u, this.m_JvBD);\r\n              // m_JwD = m_ratio * b2Cross(rD, u);\r\n              this.m_JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n              // m_JwB = m_ratio * b2Cross(rB, u);\r\n              this.m_JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n              this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\r\n          }\r\n          // Compute effective mass.\r\n          this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;\r\n          if (data.step.warmStarting) {\r\n              // vA += (m_mA * m_impulse) * m_JvAC;\r\n              vA.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);\r\n              wA += this.m_iA * this.m_impulse * this.m_JwA;\r\n              // vB += (m_mB * m_impulse) * m_JvBD;\r\n              vB.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);\r\n              wB += this.m_iB * this.m_impulse * this.m_JwB;\r\n              // vC -= (m_mC * m_impulse) * m_JvAC;\r\n              vC.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);\r\n              wC -= this.m_iC * this.m_impulse * this.m_JwC;\r\n              // vD -= (m_mD * m_impulse) * m_JvBD;\r\n              vD.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);\r\n              wD -= this.m_iD * this.m_impulse * this.m_JwD;\r\n          }\r\n          else {\r\n              this.m_impulse = 0;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n          // data.velocities[this.m_indexC].v = vC;\r\n          data.velocities[this.m_indexC].w = wC;\r\n          // data.velocities[this.m_indexD].v = vD;\r\n          data.velocities[this.m_indexD].w = wD;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const vC = data.velocities[this.m_indexC].v;\r\n          let wC = data.velocities[this.m_indexC].w;\r\n          const vD = data.velocities[this.m_indexD].v;\r\n          let wD = data.velocities[this.m_indexD].w;\r\n          // float32 Cdot = b2Dot(m_JvAC, vA - vC) + b2Dot(m_JvBD, vB - vD);\r\n          let Cdot = b2Vec2.DotVV(this.m_JvAC, b2Vec2.SubVV(vA, vC, b2Vec2.s_t0)) +\r\n              b2Vec2.DotVV(this.m_JvBD, b2Vec2.SubVV(vB, vD, b2Vec2.s_t0));\r\n          Cdot += (this.m_JwA * wA - this.m_JwC * wC) + (this.m_JwB * wB - this.m_JwD * wD);\r\n          const impulse = -this.m_mass * Cdot;\r\n          this.m_impulse += impulse;\r\n          // vA += (m_mA * impulse) * m_JvAC;\r\n          vA.SelfMulAdd((this.m_mA * impulse), this.m_JvAC);\r\n          wA += this.m_iA * impulse * this.m_JwA;\r\n          // vB += (m_mB * impulse) * m_JvBD;\r\n          vB.SelfMulAdd((this.m_mB * impulse), this.m_JvBD);\r\n          wB += this.m_iB * impulse * this.m_JwB;\r\n          // vC -= (m_mC * impulse) * m_JvAC;\r\n          vC.SelfMulSub((this.m_mC * impulse), this.m_JvAC);\r\n          wC -= this.m_iC * impulse * this.m_JwC;\r\n          // vD -= (m_mD * impulse) * m_JvBD;\r\n          vD.SelfMulSub((this.m_mD * impulse), this.m_JvBD);\r\n          wD -= this.m_iD * impulse * this.m_JwD;\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n          // data.velocities[this.m_indexC].v = vC;\r\n          data.velocities[this.m_indexC].w = wC;\r\n          // data.velocities[this.m_indexD].v = vD;\r\n          data.velocities[this.m_indexD].w = wD;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          const cA = data.positions[this.m_indexA].c;\r\n          let aA = data.positions[this.m_indexA].a;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          let aB = data.positions[this.m_indexB].a;\r\n          const cC = data.positions[this.m_indexC].c;\r\n          let aC = data.positions[this.m_indexC].a;\r\n          const cD = data.positions[this.m_indexD].c;\r\n          let aD = data.positions[this.m_indexD].a;\r\n          // b2Rot qA(aA), qB(aB), qC(aC), qD(aD);\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB), qC = this.m_qC.SetAngle(aC), qD = this.m_qD.SetAngle(aD);\r\n          const linearError = 0;\r\n          let coordinateA, coordinateB;\r\n          const JvAC = this.m_JvAC, JvBD = this.m_JvBD;\r\n          let JwA, JwB, JwC, JwD;\r\n          let mass = 0;\r\n          if (this.m_typeA === exports.b2JointType.e_revoluteJoint) {\r\n              JvAC.SetZero();\r\n              JwA = 1;\r\n              JwC = 1;\r\n              mass += this.m_iA + this.m_iC;\r\n              coordinateA = aA - aC - this.m_referenceAngleA;\r\n          }\r\n          else {\r\n              // b2Vec2 u = b2Mul(qC, m_localAxisC);\r\n              const u = b2Rot.MulRV(qC, this.m_localAxisC, b2GearJoint.SolvePositionConstraints_s_u);\r\n              // b2Vec2 rC = b2Mul(qC, m_localAnchorC - m_lcC);\r\n              const rC = b2Rot.MulRV(qC, this.m_lalcC, b2GearJoint.SolvePositionConstraints_s_rC);\r\n              // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_lcA);\r\n              const rA = b2Rot.MulRV(qA, this.m_lalcA, b2GearJoint.SolvePositionConstraints_s_rA);\r\n              // JvAC = u;\r\n              JvAC.Copy(u);\r\n              // JwC = b2Cross(rC, u);\r\n              JwC = b2Vec2.CrossVV(rC, u);\r\n              // JwA = b2Cross(rA, u);\r\n              JwA = b2Vec2.CrossVV(rA, u);\r\n              mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\r\n              // b2Vec2 pC = m_localAnchorC - m_lcC;\r\n              const pC = this.m_lalcC;\r\n              // b2Vec2 pA = b2MulT(qC, rA + (cA - cC));\r\n              const pA = b2Rot.MulTRV(qC, b2Vec2.AddVV(rA, b2Vec2.SubVV(cA, cC, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pA uses s_t0\r\n              // coordinateA = b2Dot(pA - pC, m_localAxisC);\r\n              coordinateA = b2Vec2.DotVV(b2Vec2.SubVV(pA, pC, b2Vec2.s_t0), this.m_localAxisC);\r\n          }\r\n          if (this.m_typeB === exports.b2JointType.e_revoluteJoint) {\r\n              JvBD.SetZero();\r\n              JwB = this.m_ratio;\r\n              JwD = this.m_ratio;\r\n              mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\r\n              coordinateB = aB - aD - this.m_referenceAngleB;\r\n          }\r\n          else {\r\n              // b2Vec2 u = b2Mul(qD, m_localAxisD);\r\n              const u = b2Rot.MulRV(qD, this.m_localAxisD, b2GearJoint.SolvePositionConstraints_s_u);\r\n              // b2Vec2 rD = b2Mul(qD, m_localAnchorD - m_lcD);\r\n              const rD = b2Rot.MulRV(qD, this.m_lalcD, b2GearJoint.SolvePositionConstraints_s_rD);\r\n              // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_lcB);\r\n              const rB = b2Rot.MulRV(qB, this.m_lalcB, b2GearJoint.SolvePositionConstraints_s_rB);\r\n              // JvBD = m_ratio * u;\r\n              b2Vec2.MulSV(this.m_ratio, u, JvBD);\r\n              // JwD = m_ratio * b2Cross(rD, u);\r\n              JwD = this.m_ratio * b2Vec2.CrossVV(rD, u);\r\n              // JwB = m_ratio * b2Cross(rB, u);\r\n              JwB = this.m_ratio * b2Vec2.CrossVV(rB, u);\r\n              mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * JwD * JwD + this.m_iB * JwB * JwB;\r\n              // b2Vec2 pD = m_localAnchorD - m_lcD;\r\n              const pD = this.m_lalcD;\r\n              // b2Vec2 pB = b2MulT(qD, rB + (cB - cD));\r\n              const pB = b2Rot.MulTRV(qD, b2Vec2.AddVV(rB, b2Vec2.SubVV(cB, cD, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0); // pB uses s_t0\r\n              // coordinateB = b2Dot(pB - pD, m_localAxisD);\r\n              coordinateB = b2Vec2.DotVV(b2Vec2.SubVV(pB, pD, b2Vec2.s_t0), this.m_localAxisD);\r\n          }\r\n          const C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant;\r\n          let impulse = 0;\r\n          if (mass > 0) {\r\n              impulse = -C / mass;\r\n          }\r\n          // cA += m_mA * impulse * JvAC;\r\n          cA.SelfMulAdd(this.m_mA * impulse, JvAC);\r\n          aA += this.m_iA * impulse * JwA;\r\n          // cB += m_mB * impulse * JvBD;\r\n          cB.SelfMulAdd(this.m_mB * impulse, JvBD);\r\n          aB += this.m_iB * impulse * JwB;\r\n          // cC -= m_mC * impulse * JvAC;\r\n          cC.SelfMulSub(this.m_mC * impulse, JvAC);\r\n          aC -= this.m_iC * impulse * JwC;\r\n          // cD -= m_mD * impulse * JvBD;\r\n          cD.SelfMulSub(this.m_mD * impulse, JvBD);\r\n          aD -= this.m_iD * impulse * JwD;\r\n          // data.positions[this.m_indexA].c = cA;\r\n          data.positions[this.m_indexA].a = aA;\r\n          // data.positions[this.m_indexB].c = cB;\r\n          data.positions[this.m_indexB].a = aB;\r\n          // data.positions[this.m_indexC].c = cC;\r\n          data.positions[this.m_indexC].a = aC;\r\n          // data.positions[this.m_indexD].c = cD;\r\n          data.positions[this.m_indexD].a = aD;\r\n          // TODO_ERIN not implemented\r\n          return linearError < b2_linearSlop;\r\n      }\r\n      GetAnchorA(out) {\r\n          return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          // b2Vec2 P = m_impulse * m_JvAC;\r\n          // return inv_dt * P;\r\n          return b2Vec2.MulSV(inv_dt * this.m_impulse, this.m_JvAC, out);\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          // float32 L = m_impulse * m_JwA;\r\n          // return inv_dt * L;\r\n          return inv_dt * this.m_impulse * this.m_JwA;\r\n      }\r\n      GetJoint1() { return this.m_joint1; }\r\n      GetJoint2() { return this.m_joint2; }\r\n      GetRatio() {\r\n          return this.m_ratio;\r\n      }\r\n      SetRatio(ratio) {\r\n          // DEBUG: b2Assert(b2IsValid(ratio));\r\n          this.m_ratio = ratio;\r\n      }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          const index1 = this.m_joint1.m_index;\r\n          const index2 = this.m_joint2.m_index;\r\n          log(\"  const jd: b2GearJointDef = new b2GearJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.joint1 = joints[%d];\\n\", index1);\r\n          log(\"  jd.joint2 = joints[%d];\\n\", index2);\r\n          log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n  }\r\n  b2GearJoint.InitVelocityConstraints_s_u = new b2Vec2();\r\n  b2GearJoint.InitVelocityConstraints_s_rA = new b2Vec2();\r\n  b2GearJoint.InitVelocityConstraints_s_rB = new b2Vec2();\r\n  b2GearJoint.InitVelocityConstraints_s_rC = new b2Vec2();\r\n  b2GearJoint.InitVelocityConstraints_s_rD = new b2Vec2();\r\n  b2GearJoint.SolvePositionConstraints_s_u = new b2Vec2();\r\n  b2GearJoint.SolvePositionConstraints_s_rA = new b2Vec2();\r\n  b2GearJoint.SolvePositionConstraints_s_rB = new b2Vec2();\r\n  b2GearJoint.SolvePositionConstraints_s_rC = new b2Vec2();\r\n  b2GearJoint.SolvePositionConstraints_s_rD = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2012 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2MotorJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_motorJoint);\r\n          this.linearOffset = new b2Vec2(0, 0);\r\n          this.angularOffset = 0;\r\n          this.maxForce = 1;\r\n          this.maxTorque = 1;\r\n          this.correctionFactor = 0.3;\r\n      }\r\n      Initialize(bA, bB) {\r\n          this.bodyA = bA;\r\n          this.bodyB = bB;\r\n          // b2Vec2 xB = bodyB->GetPosition();\r\n          // linearOffset = bodyA->GetLocalPoint(xB);\r\n          this.bodyA.GetLocalPoint(this.bodyB.GetPosition(), this.linearOffset);\r\n          const angleA = this.bodyA.GetAngle();\r\n          const angleB = this.bodyB.GetAngle();\r\n          this.angularOffset = angleB - angleA;\r\n      }\r\n  }\r\n  class b2MotorJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          // Solver shared\r\n          this.m_linearOffset = new b2Vec2();\r\n          this.m_angularOffset = 0;\r\n          this.m_linearImpulse = new b2Vec2();\r\n          this.m_angularImpulse = 0;\r\n          this.m_maxForce = 0;\r\n          this.m_maxTorque = 0;\r\n          this.m_correctionFactor = 0.3;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_rA = new b2Vec2();\r\n          this.m_rB = new b2Vec2();\r\n          this.m_localCenterA = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_linearError = new b2Vec2();\r\n          this.m_angularError = 0;\r\n          this.m_invMassA = 0;\r\n          this.m_invMassB = 0;\r\n          this.m_invIA = 0;\r\n          this.m_invIB = 0;\r\n          this.m_linearMass = new b2Mat22();\r\n          this.m_angularMass = 0;\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_K = new b2Mat22();\r\n          this.m_linearOffset.Copy(b2Maybe(def.linearOffset, b2Vec2.ZERO));\r\n          this.m_linearImpulse.SetZero();\r\n          this.m_maxForce = b2Maybe(def.maxForce, 0);\r\n          this.m_maxTorque = b2Maybe(def.maxTorque, 0);\r\n          this.m_correctionFactor = b2Maybe(def.correctionFactor, 0.3);\r\n      }\r\n      GetAnchorA(out) {\r\n          const pos = this.m_bodyA.GetPosition();\r\n          out.x = pos.x;\r\n          out.y = pos.y;\r\n          return out;\r\n      }\r\n      GetAnchorB(out) {\r\n          const pos = this.m_bodyB.GetPosition();\r\n          out.x = pos.x;\r\n          out.y = pos.y;\r\n          return out;\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          // return inv_dt * m_linearImpulse;\r\n          return b2Vec2.MulSV(inv_dt, this.m_linearImpulse, out);\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return inv_dt * this.m_angularImpulse;\r\n      }\r\n      SetLinearOffset(linearOffset) {\r\n          if (!b2Vec2.IsEqualToV(linearOffset, this.m_linearOffset)) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_linearOffset.Copy(linearOffset);\r\n          }\r\n      }\r\n      GetLinearOffset() {\r\n          return this.m_linearOffset;\r\n      }\r\n      SetAngularOffset(angularOffset) {\r\n          if (angularOffset !== this.m_angularOffset) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_angularOffset = angularOffset;\r\n          }\r\n      }\r\n      GetAngularOffset() {\r\n          return this.m_angularOffset;\r\n      }\r\n      SetMaxForce(force) {\r\n          // DEBUG: b2Assert(b2IsValid(force) && force >= 0);\r\n          this.m_maxForce = force;\r\n      }\r\n      GetMaxForce() {\r\n          return this.m_maxForce;\r\n      }\r\n      SetMaxTorque(torque) {\r\n          // DEBUG: b2Assert(b2IsValid(torque) && torque >= 0);\r\n          this.m_maxTorque = torque;\r\n      }\r\n      GetMaxTorque() {\r\n          return this.m_maxTorque;\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassA = this.m_bodyA.m_invMass;\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIA = this.m_bodyA.m_invI;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          const cA = data.positions[this.m_indexA].c;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // Compute the effective mass matrix.\r\n          // this.m_rA = b2Mul(qA, m_linearOffset - this.m_localCenterA);\r\n          const rA = b2Rot.MulRV(qA, b2Vec2.SubVV(this.m_linearOffset, this.m_localCenterA, b2Vec2.s_t0), this.m_rA);\r\n          // this.m_rB = b2Mul(qB, -this.m_localCenterB);\r\n          const rB = b2Rot.MulRV(qB, b2Vec2.NegV(this.m_localCenterB, b2Vec2.s_t0), this.m_rB);\r\n          // J = [-I -r1_skew I r2_skew]\r\n          // r_skew = [-ry; rx]\r\n          // Matlab\r\n          // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n          //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n          //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          // Upper 2 by 2 of K for point to point\r\n          const K = this.m_K;\r\n          K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n          K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n          K.ey.x = K.ex.y;\r\n          K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n          // this.m_linearMass = K.GetInverse();\r\n          K.GetInverse(this.m_linearMass);\r\n          this.m_angularMass = iA + iB;\r\n          if (this.m_angularMass > 0) {\r\n              this.m_angularMass = 1 / this.m_angularMass;\r\n          }\r\n          // this.m_linearError = cB + rB - cA - rA;\r\n          b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), this.m_linearError);\r\n          this.m_angularError = aB - aA - this.m_angularOffset;\r\n          if (data.step.warmStarting) {\r\n              // Scale impulses to support a variable time step.\r\n              // this.m_linearImpulse *= data.step.dtRatio;\r\n              this.m_linearImpulse.SelfMul(data.step.dtRatio);\r\n              this.m_angularImpulse *= data.step.dtRatio;\r\n              // b2Vec2 P(this.m_linearImpulse.x, this.m_linearImpulse.y);\r\n              const P = this.m_linearImpulse;\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * (b2Vec2.CrossVV(rA, P) + this.m_angularImpulse);\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * (b2Vec2.CrossVV(rB, P) + this.m_angularImpulse);\r\n          }\r\n          else {\r\n              this.m_linearImpulse.SetZero();\r\n              this.m_angularImpulse = 0;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          const h = data.step.dt;\r\n          const inv_h = data.step.inv_dt;\r\n          // Solve angular friction\r\n          {\r\n              const Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\r\n              let impulse = -this.m_angularMass * Cdot;\r\n              const oldImpulse = this.m_angularImpulse;\r\n              const maxImpulse = h * this.m_maxTorque;\r\n              this.m_angularImpulse = b2Clamp(this.m_angularImpulse + impulse, -maxImpulse, maxImpulse);\r\n              impulse = this.m_angularImpulse - oldImpulse;\r\n              wA -= iA * impulse;\r\n              wB += iB * impulse;\r\n          }\r\n          // Solve linear friction\r\n          {\r\n              const rA = this.m_rA;\r\n              const rB = this.m_rB;\r\n              // b2Vec2 Cdot = vB + b2Vec2.CrossSV(wB, rB) - vA - b2Vec2.CrossSV(wA, rA) + inv_h * this.m_correctionFactor * this.m_linearError;\r\n              const Cdot_v2 = b2Vec2.AddVV(b2Vec2.SubVV(b2Vec2.AddVV(vB, b2Vec2.CrossSV(wB, rB, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.AddVV(vA, b2Vec2.CrossSV(wA, rA, b2Vec2.s_t1), b2Vec2.s_t1), b2Vec2.s_t2), b2Vec2.MulSV(inv_h * this.m_correctionFactor, this.m_linearError, b2Vec2.s_t3), b2MotorJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n              // b2Vec2 impulse = -b2Mul(this.m_linearMass, Cdot);\r\n              const impulse_v2 = b2Mat22.MulMV(this.m_linearMass, Cdot_v2, b2MotorJoint.SolveVelocityConstraints_s_impulse_v2).SelfNeg();\r\n              // b2Vec2 oldImpulse = this.m_linearImpulse;\r\n              const oldImpulse_v2 = b2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2.Copy(this.m_linearImpulse);\r\n              // this.m_linearImpulse += impulse;\r\n              this.m_linearImpulse.SelfAdd(impulse_v2);\r\n              const maxImpulse = h * this.m_maxForce;\r\n              if (this.m_linearImpulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n                  this.m_linearImpulse.Normalize();\r\n                  // this.m_linearImpulse *= maxImpulse;\r\n                  this.m_linearImpulse.SelfMul(maxImpulse);\r\n              }\r\n              // impulse = this.m_linearImpulse - oldImpulse;\r\n              b2Vec2.SubVV(this.m_linearImpulse, oldImpulse_v2, impulse_v2);\r\n              // vA -= mA * impulse;\r\n              vA.SelfMulSub(mA, impulse_v2);\r\n              // wA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n              wA -= iA * b2Vec2.CrossVV(rA, impulse_v2);\r\n              // vB += mB * impulse;\r\n              vB.SelfMulAdd(mB, impulse_v2);\r\n              // wB += iB * b2Vec2.CrossVV(rB, impulse);\r\n              wB += iB * b2Vec2.CrossVV(rB, impulse_v2);\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA; // vA is a reference\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB; // vB is a reference\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          return true;\r\n      }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          log(\"  const jd: b2MotorJointDef = new b2MotorJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.linearOffset.Set(%.15f, %.15f);\\n\", this.m_linearOffset.x, this.m_linearOffset.y);\r\n          log(\"  jd.angularOffset = %.15f;\\n\", this.m_angularOffset);\r\n          log(\"  jd.maxForce = %.15f;\\n\", this.m_maxForce);\r\n          log(\"  jd.maxTorque = %.15f;\\n\", this.m_maxTorque);\r\n          log(\"  jd.correctionFactor = %.15f;\\n\", this.m_correctionFactor);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n  }\r\n  b2MotorJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\n  b2MotorJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\n  b2MotorJoint.SolveVelocityConstraints_s_oldImpulse_v2 = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Mouse joint definition. This requires a world target point,\r\n  /// tuning parameters, and the time step.\r\n  class b2MouseJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_mouseJoint);\r\n          this.target = new b2Vec2();\r\n          this.maxForce = 0;\r\n          this.frequencyHz = 5;\r\n          this.dampingRatio = 0.7;\r\n      }\r\n  }\r\n  class b2MouseJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          this.m_localAnchorB = new b2Vec2();\r\n          this.m_targetA = new b2Vec2();\r\n          this.m_frequencyHz = 0;\r\n          this.m_dampingRatio = 0;\r\n          this.m_beta = 0;\r\n          // Solver shared\r\n          this.m_impulse = new b2Vec2();\r\n          this.m_maxForce = 0;\r\n          this.m_gamma = 0;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_rB = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_invMassB = 0;\r\n          this.m_invIB = 0;\r\n          this.m_mass = new b2Mat22();\r\n          this.m_C = new b2Vec2();\r\n          this.m_qB = new b2Rot();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_K = new b2Mat22();\r\n          this.m_targetA.Copy(b2Maybe(def.target, b2Vec2.ZERO));\r\n          // DEBUG: b2Assert(this.m_targetA.IsValid());\r\n          b2Transform.MulTXV(this.m_bodyB.GetTransform(), this.m_targetA, this.m_localAnchorB);\r\n          this.m_maxForce = b2Maybe(def.maxForce, 0);\r\n          // DEBUG: b2Assert(b2IsValid(this.m_maxForce) && this.m_maxForce >= 0);\r\n          this.m_impulse.SetZero();\r\n          this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n          // DEBUG: b2Assert(b2IsValid(this.m_frequencyHz) && this.m_frequencyHz >= 0);\r\n          this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n          // DEBUG: b2Assert(b2IsValid(this.m_dampingRatio) && this.m_dampingRatio >= 0);\r\n          this.m_beta = 0;\r\n          this.m_gamma = 0;\r\n      }\r\n      SetTarget(target) {\r\n          if (!this.m_bodyB.IsAwake()) {\r\n              this.m_bodyB.SetAwake(true);\r\n          }\r\n          this.m_targetA.Copy(target);\r\n      }\r\n      GetTarget() {\r\n          return this.m_targetA;\r\n      }\r\n      SetMaxForce(maxForce) {\r\n          this.m_maxForce = maxForce;\r\n      }\r\n      GetMaxForce() {\r\n          return this.m_maxForce;\r\n      }\r\n      SetFrequency(hz) {\r\n          this.m_frequencyHz = hz;\r\n      }\r\n      GetFrequency() {\r\n          return this.m_frequencyHz;\r\n      }\r\n      SetDampingRatio(ratio) {\r\n          this.m_dampingRatio = ratio;\r\n      }\r\n      GetDampingRatio() {\r\n          return this.m_dampingRatio;\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const qB = this.m_qB.SetAngle(aB);\r\n          const mass = this.m_bodyB.GetMass();\r\n          // Frequency\r\n          const omega = 2 * b2_pi * this.m_frequencyHz;\r\n          // Damping coefficient\r\n          const d = 2 * mass * this.m_dampingRatio * omega;\r\n          // Spring stiffness\r\n          const k = mass * (omega * omega);\r\n          // magic formulas\r\n          // gamma has units of inverse mass.\r\n          // beta has units of inverse time.\r\n          const h = data.step.dt;\r\n          // DEBUG: b2Assert(d + h * k > b2_epsilon);\r\n          this.m_gamma = h * (d + h * k);\r\n          if (this.m_gamma !== 0) {\r\n              this.m_gamma = 1 / this.m_gamma;\r\n          }\r\n          this.m_beta = h * k * this.m_gamma;\r\n          // Compute the effective mass matrix.\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // K    = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) * invI2 * skew(r2)]\r\n          //      = [1/m1+1/m2     0    ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y -r1.x*r1.y]\r\n          //        [    0     1/m1+1/m2]           [-r1.x*r1.y r1.x*r1.x]           [-r1.x*r1.y r1.x*r1.x]\r\n          const K = this.m_K;\r\n          K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y + this.m_gamma;\r\n          K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\r\n          K.ey.x = K.ex.y;\r\n          K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x + this.m_gamma;\r\n          K.GetInverse(this.m_mass);\r\n          // m_C = cB + m_rB - m_targetA;\r\n          this.m_C.x = cB.x + this.m_rB.x - this.m_targetA.x;\r\n          this.m_C.y = cB.y + this.m_rB.y - this.m_targetA.y;\r\n          // m_C *= m_beta;\r\n          this.m_C.SelfMul(this.m_beta);\r\n          // Cheat with some damping\r\n          wB *= 0.98;\r\n          if (data.step.warmStarting) {\r\n              this.m_impulse.SelfMul(data.step.dtRatio);\r\n              // vB += m_invMassB * m_impulse;\r\n              vB.x += this.m_invMassB * this.m_impulse.x;\r\n              vB.y += this.m_invMassB * this.m_impulse.y;\r\n              wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, this.m_impulse);\r\n          }\r\n          else {\r\n              this.m_impulse.SetZero();\r\n          }\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          // Cdot = v + cross(w, r)\r\n          // b2Vec2 Cdot = vB + b2Cross(wB, m_rB);\r\n          const Cdot = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2MouseJoint.SolveVelocityConstraints_s_Cdot);\r\n          //  b2Vec2 impulse = b2Mul(m_mass, -(Cdot + m_C + m_gamma * m_impulse));\r\n          const impulse = b2Mat22.MulMV(this.m_mass, b2Vec2.AddVV(Cdot, b2Vec2.AddVV(this.m_C, b2Vec2.MulSV(this.m_gamma, this.m_impulse, b2Vec2.s_t0), b2Vec2.s_t0), b2Vec2.s_t0).SelfNeg(), b2MouseJoint.SolveVelocityConstraints_s_impulse);\r\n          // b2Vec2 oldImpulse = m_impulse;\r\n          const oldImpulse = b2MouseJoint.SolveVelocityConstraints_s_oldImpulse.Copy(this.m_impulse);\r\n          // m_impulse += impulse;\r\n          this.m_impulse.SelfAdd(impulse);\r\n          const maxImpulse = data.step.dt * this.m_maxForce;\r\n          if (this.m_impulse.LengthSquared() > maxImpulse * maxImpulse) {\r\n              this.m_impulse.SelfMul(maxImpulse / this.m_impulse.Length());\r\n          }\r\n          // impulse = m_impulse - oldImpulse;\r\n          b2Vec2.SubVV(this.m_impulse, oldImpulse, impulse);\r\n          // vB += m_invMassB * impulse;\r\n          vB.SelfMulAdd(this.m_invMassB, impulse);\r\n          wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, impulse);\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          return true;\r\n      }\r\n      GetAnchorA(out) {\r\n          out.x = this.m_targetA.x;\r\n          out.y = this.m_targetA.y;\r\n          return out;\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          return b2Vec2.MulSV(inv_dt, this.m_impulse, out);\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return 0;\r\n      }\r\n      Dump(log) {\r\n          log(\"Mouse joint dumping is not supported.\\n\");\r\n      }\r\n      ShiftOrigin(newOrigin) {\r\n          this.m_targetA.SelfSub(newOrigin);\r\n      }\r\n  }\r\n  b2MouseJoint.SolveVelocityConstraints_s_Cdot = new b2Vec2();\r\n  b2MouseJoint.SolveVelocityConstraints_s_impulse = new b2Vec2();\r\n  b2MouseJoint.SolveVelocityConstraints_s_oldImpulse = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Prismatic joint definition. This requires defining a line of\r\n  /// motion using an axis and an anchor point. The definition uses local\r\n  /// anchor points and a local axis so that the initial configuration\r\n  /// can violate the constraint slightly. The joint translation is zero\r\n  /// when the local anchor points coincide in world space. Using local\r\n  /// anchors and a local axis helps when saving and loading a game.\r\n  class b2PrismaticJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_prismaticJoint);\r\n          this.localAnchorA = new b2Vec2();\r\n          this.localAnchorB = new b2Vec2();\r\n          this.localAxisA = new b2Vec2(1, 0);\r\n          this.referenceAngle = 0;\r\n          this.enableLimit = false;\r\n          this.lowerTranslation = 0;\r\n          this.upperTranslation = 0;\r\n          this.enableMotor = false;\r\n          this.maxMotorForce = 0;\r\n          this.motorSpeed = 0;\r\n      }\r\n      Initialize(bA, bB, anchor, axis) {\r\n          this.bodyA = bA;\r\n          this.bodyB = bB;\r\n          this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n          this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n          this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n          this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n      }\r\n  }\r\n  class b2PrismaticJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          // Solver shared\r\n          this.m_localAnchorA = new b2Vec2();\r\n          this.m_localAnchorB = new b2Vec2();\r\n          this.m_localXAxisA = new b2Vec2();\r\n          this.m_localYAxisA = new b2Vec2();\r\n          this.m_referenceAngle = 0;\r\n          this.m_impulse = new b2Vec3(0, 0, 0);\r\n          this.m_motorImpulse = 0;\r\n          this.m_lowerTranslation = 0;\r\n          this.m_upperTranslation = 0;\r\n          this.m_maxMotorForce = 0;\r\n          this.m_motorSpeed = 0;\r\n          this.m_enableLimit = false;\r\n          this.m_enableMotor = false;\r\n          this.m_limitState = exports.b2LimitState.e_inactiveLimit;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_localCenterA = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_invMassA = 0;\r\n          this.m_invMassB = 0;\r\n          this.m_invIA = 0;\r\n          this.m_invIB = 0;\r\n          this.m_axis = new b2Vec2(0, 0);\r\n          this.m_perp = new b2Vec2(0, 0);\r\n          this.m_s1 = 0;\r\n          this.m_s2 = 0;\r\n          this.m_a1 = 0;\r\n          this.m_a2 = 0;\r\n          this.m_K = new b2Mat33();\r\n          this.m_K3 = new b2Mat33();\r\n          this.m_K2 = new b2Mat22();\r\n          this.m_motorMass = 0;\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_lalcA = new b2Vec2();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_rA = new b2Vec2();\r\n          this.m_rB = new b2Vec2();\r\n          this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n          this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n          this.m_localXAxisA.Copy(b2Maybe(def.localAxisA, new b2Vec2(1, 0))).SelfNormalize();\r\n          b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n          this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\r\n          this.m_lowerTranslation = b2Maybe(def.lowerTranslation, 0);\r\n          this.m_upperTranslation = b2Maybe(def.upperTranslation, 0);\r\n          this.m_maxMotorForce = b2Maybe(def.maxMotorForce, 0);\r\n          this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\r\n          this.m_enableLimit = b2Maybe(def.enableLimit, false);\r\n          this.m_enableMotor = b2Maybe(def.enableMotor, false);\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassA = this.m_bodyA.m_invMass;\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIA = this.m_bodyA.m_invI;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          const cA = data.positions[this.m_indexA].c;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // Compute the effective masses.\r\n          // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // b2Vec2 d = (cB - cA) + rB - rA;\r\n          const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_d);\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          // Compute motor Jacobian and effective mass.\r\n          {\r\n              // m_axis = b2Mul(qA, m_localXAxisA);\r\n              b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n              // m_a1 = b2Cross(d + rA, m_axis);\r\n              this.m_a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_axis);\r\n              // m_a2 = b2Cross(rB, m_axis);\r\n              this.m_a2 = b2Vec2.CrossVV(rB, this.m_axis);\r\n              this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n              if (this.m_motorMass > 0) {\r\n                  this.m_motorMass = 1 / this.m_motorMass;\r\n              }\r\n          }\r\n          // Prismatic constraint.\r\n          {\r\n              // m_perp = b2Mul(qA, m_localYAxisA);\r\n              b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n              // m_s1 = b2Cross(d + rA, m_perp);\r\n              this.m_s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_perp);\r\n              // m_s2 = b2Cross(rB, m_perp);\r\n              this.m_s2 = b2Vec2.CrossVV(rB, this.m_perp);\r\n              // float32 k11 = mA + mB + iA * m_s1 * m_s1 + iB * m_s2 * m_s2;\r\n              this.m_K.ex.x = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\r\n              // float32 k12 = iA * m_s1 + iB * m_s2;\r\n              this.m_K.ex.y = iA * this.m_s1 + iB * this.m_s2;\r\n              // float32 k13 = iA * m_s1 * m_a1 + iB * m_s2 * m_a2;\r\n              this.m_K.ex.z = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\r\n              this.m_K.ey.x = this.m_K.ex.y;\r\n              // float32 k22 = iA + iB;\r\n              this.m_K.ey.y = iA + iB;\r\n              if (this.m_K.ey.y === 0) {\r\n                  // For bodies with fixed rotation.\r\n                  this.m_K.ey.y = 1;\r\n              }\r\n              // float32 k23 = iA * m_a1 + iB * m_a2;\r\n              this.m_K.ey.z = iA * this.m_a1 + iB * this.m_a2;\r\n              this.m_K.ez.x = this.m_K.ex.z;\r\n              this.m_K.ez.y = this.m_K.ey.z;\r\n              // float32 k33 = mA + mB + iA * m_a1 * m_a1 + iB * m_a2 * m_a2;\r\n              this.m_K.ez.z = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\r\n              // m_K.ex.Set(k11, k12, k13);\r\n              // m_K.ey.Set(k12, k22, k23);\r\n              // m_K.ez.Set(k13, k23, k33);\r\n          }\r\n          // Compute motor and limit terms.\r\n          if (this.m_enableLimit) {\r\n              // float32 jointTranslation = b2Dot(m_axis, d);\r\n              const jointTranslation = b2Vec2.DotVV(this.m_axis, d);\r\n              if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                  this.m_limitState = exports.b2LimitState.e_equalLimits;\r\n              }\r\n              else if (jointTranslation <= this.m_lowerTranslation) {\r\n                  if (this.m_limitState !== exports.b2LimitState.e_atLowerLimit) {\r\n                      this.m_limitState = exports.b2LimitState.e_atLowerLimit;\r\n                      this.m_impulse.z = 0;\r\n                  }\r\n              }\r\n              else if (jointTranslation >= this.m_upperTranslation) {\r\n                  if (this.m_limitState !== exports.b2LimitState.e_atUpperLimit) {\r\n                      this.m_limitState = exports.b2LimitState.e_atUpperLimit;\r\n                      this.m_impulse.z = 0;\r\n                  }\r\n              }\r\n              else {\r\n                  this.m_limitState = exports.b2LimitState.e_inactiveLimit;\r\n                  this.m_impulse.z = 0;\r\n              }\r\n          }\r\n          else {\r\n              this.m_limitState = exports.b2LimitState.e_inactiveLimit;\r\n              this.m_impulse.z = 0;\r\n          }\r\n          if (!this.m_enableMotor) {\r\n              this.m_motorImpulse = 0;\r\n          }\r\n          if (data.step.warmStarting) {\r\n              // Account for variable time step.\r\n              // m_impulse *= data.step.dtRatio;\r\n              this.m_impulse.SelfMul(data.step.dtRatio);\r\n              this.m_motorImpulse *= data.step.dtRatio;\r\n              // b2Vec2 P = m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis;\r\n              const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV((this.m_motorImpulse + this.m_impulse.z), this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.InitVelocityConstraints_s_P);\r\n              // float32 LA = m_impulse.x * m_s1 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a1;\r\n              const LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\r\n              // float32 LB = m_impulse.x * m_s2 + m_impulse.y + (m_motorImpulse + m_impulse.z) * m_a2;\r\n              const LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * LA;\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * LB;\r\n          }\r\n          else {\r\n              this.m_impulse.SetZero();\r\n              this.m_motorImpulse = 0;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          // Solve linear motor constraint.\r\n          if (this.m_enableMotor && this.m_limitState !== exports.b2LimitState.e_equalLimits) {\r\n              // float32 Cdot = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n              const Cdot = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n              let impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\r\n              const oldImpulse = this.m_motorImpulse;\r\n              const maxImpulse = data.step.dt * this.m_maxMotorForce;\r\n              this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, (-maxImpulse), maxImpulse);\r\n              impulse = this.m_motorImpulse - oldImpulse;\r\n              // b2Vec2 P = impulse * m_axis;\r\n              const P = b2Vec2.MulSV(impulse, this.m_axis, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n              const LA = impulse * this.m_a1;\r\n              const LB = impulse * this.m_a2;\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * LA;\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * LB;\r\n          }\r\n          // b2Vec2 Cdot1;\r\n          // Cdot1.x = b2Dot(m_perp, vB - vA) + m_s2 * wB - m_s1 * wA;\r\n          const Cdot1_x = b2Vec2.DotVV(this.m_perp, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_s2 * wB - this.m_s1 * wA;\r\n          // Cdot1.y = wB - wA;\r\n          const Cdot1_y = wB - wA;\r\n          if (this.m_enableLimit && this.m_limitState !== exports.b2LimitState.e_inactiveLimit) {\r\n              // Solve prismatic and limit constraint in block form.\r\n              // float32 Cdot2;\r\n              // Cdot2 = b2Dot(m_axis, vB - vA) + m_a2 * wB - m_a1 * wA;\r\n              const Cdot2 = b2Vec2.DotVV(this.m_axis, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_a2 * wB - this.m_a1 * wA;\r\n              // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n              // b2Vec3 f1 = m_impulse;\r\n              const f1 = b2PrismaticJoint.SolveVelocityConstraints_s_f1.Copy(this.m_impulse);\r\n              // b2Vec3 df =  m_K.Solve33(-Cdot);\r\n              const df3 = this.m_K.Solve33((-Cdot1_x), (-Cdot1_y), (-Cdot2), b2PrismaticJoint.SolveVelocityConstraints_s_df3);\r\n              // m_impulse += df;\r\n              this.m_impulse.SelfAdd(df3);\r\n              if (this.m_limitState === exports.b2LimitState.e_atLowerLimit) {\r\n                  this.m_impulse.z = b2Max(this.m_impulse.z, 0);\r\n              }\r\n              else if (this.m_limitState === exports.b2LimitState.e_atUpperLimit) {\r\n                  this.m_impulse.z = b2Min(this.m_impulse.z, 0);\r\n              }\r\n              // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) + f1(1:2)\r\n              // b2Vec2 b = -Cdot1 - (m_impulse.z - f1.z) * b2Vec2(m_K.ez.x, m_K.ez.y);\r\n              const b_x = (-Cdot1_x) - (this.m_impulse.z - f1.z) * this.m_K.ez.x;\r\n              const b_y = (-Cdot1_y) - (this.m_impulse.z - f1.z) * this.m_K.ez.y;\r\n              // b2Vec2 f2r = m_K.Solve22(b) + b2Vec2(f1.x, f1.y);\r\n              const f2r = this.m_K.Solve22(b_x, b_y, b2PrismaticJoint.SolveVelocityConstraints_s_f2r);\r\n              f2r.x += f1.x;\r\n              f2r.y += f1.y;\r\n              // m_impulse.x = f2r.x;\r\n              this.m_impulse.x = f2r.x;\r\n              // m_impulse.y = f2r.y;\r\n              this.m_impulse.y = f2r.y;\r\n              // df = m_impulse - f1;\r\n              df3.x = this.m_impulse.x - f1.x;\r\n              df3.y = this.m_impulse.y - f1.y;\r\n              df3.z = this.m_impulse.z - f1.z;\r\n              // b2Vec2 P = df.x * m_perp + df.z * m_axis;\r\n              const P = b2Vec2.AddVV(b2Vec2.MulSV(df3.x, this.m_perp, b2Vec2.s_t0), b2Vec2.MulSV(df3.z, this.m_axis, b2Vec2.s_t1), b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n              // float32 LA = df.x * m_s1 + df.y + df.z * m_a1;\r\n              const LA = df3.x * this.m_s1 + df3.y + df3.z * this.m_a1;\r\n              // float32 LB = df.x * m_s2 + df.y + df.z * m_a2;\r\n              const LB = df3.x * this.m_s2 + df3.y + df3.z * this.m_a2;\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * LA;\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * LB;\r\n          }\r\n          else {\r\n              // Limit is inactive, just solve the prismatic constraint in block form.\r\n              // b2Vec2 df = m_K.Solve22(-Cdot1);\r\n              const df2 = this.m_K.Solve22((-Cdot1_x), (-Cdot1_y), b2PrismaticJoint.SolveVelocityConstraints_s_df2);\r\n              this.m_impulse.x += df2.x;\r\n              this.m_impulse.y += df2.y;\r\n              // b2Vec2 P = df.x * m_perp;\r\n              const P = b2Vec2.MulSV(df2.x, this.m_perp, b2PrismaticJoint.SolveVelocityConstraints_s_P);\r\n              // float32 LA = df.x * m_s1 + df.y;\r\n              const LA = df2.x * this.m_s1 + df2.y;\r\n              // float32 LB = df.x * m_s2 + df.y;\r\n              const LB = df2.x * this.m_s2 + df2.y;\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * LA;\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * LB;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          const cA = data.positions[this.m_indexA].c;\r\n          let aA = data.positions[this.m_indexA].a;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          let aB = data.positions[this.m_indexB].a;\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // b2Vec2 d = cB + rB - cA - rA;\r\n          const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_d);\r\n          // b2Vec2 axis = b2Mul(qA, m_localXAxisA);\r\n          const axis = b2Rot.MulRV(qA, this.m_localXAxisA, this.m_axis);\r\n          // float32 a1 = b2Cross(d + rA, axis);\r\n          const a1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), axis);\r\n          // float32 a2 = b2Cross(rB, axis);\r\n          const a2 = b2Vec2.CrossVV(rB, axis);\r\n          // b2Vec2 perp = b2Mul(qA, m_localYAxisA);\r\n          const perp = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_perp);\r\n          // float32 s1 = b2Cross(d + rA, perp);\r\n          const s1 = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), perp);\r\n          // float32 s2 = b2Cross(rB, perp);\r\n          const s2 = b2Vec2.CrossVV(rB, perp);\r\n          // b2Vec3 impulse;\r\n          let impulse = b2PrismaticJoint.SolvePositionConstraints_s_impulse;\r\n          // b2Vec2 C1;\r\n          // C1.x = b2Dot(perp, d);\r\n          const C1_x = b2Vec2.DotVV(perp, d);\r\n          // C1.y = aB - aA - m_referenceAngle;\r\n          const C1_y = aB - aA - this.m_referenceAngle;\r\n          let linearError = b2Abs(C1_x);\r\n          const angularError = b2Abs(C1_y);\r\n          let active = false;\r\n          let C2 = 0;\r\n          if (this.m_enableLimit) {\r\n              // float32 translation = b2Dot(axis, d);\r\n              const translation = b2Vec2.DotVV(axis, d);\r\n              if (b2Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * b2_linearSlop) {\r\n                  // Prevent large angular corrections\r\n                  C2 = b2Clamp(translation, (-b2_maxLinearCorrection), b2_maxLinearCorrection);\r\n                  linearError = b2Max(linearError, b2Abs(translation));\r\n                  active = true;\r\n              }\r\n              else if (translation <= this.m_lowerTranslation) {\r\n                  // Prevent large linear corrections and allow some slop.\r\n                  C2 = b2Clamp(translation - this.m_lowerTranslation + b2_linearSlop, (-b2_maxLinearCorrection), 0);\r\n                  linearError = b2Max(linearError, this.m_lowerTranslation - translation);\r\n                  active = true;\r\n              }\r\n              else if (translation >= this.m_upperTranslation) {\r\n                  // Prevent large linear corrections and allow some slop.\r\n                  C2 = b2Clamp(translation - this.m_upperTranslation - b2_linearSlop, 0, b2_maxLinearCorrection);\r\n                  linearError = b2Max(linearError, translation - this.m_upperTranslation);\r\n                  active = true;\r\n              }\r\n          }\r\n          if (active) {\r\n              // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n              const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n              // float32 k12 = iA * s1 + iB * s2;\r\n              const k12 = iA * s1 + iB * s2;\r\n              // float32 k13 = iA * s1 * a1 + iB * s2 * a2;\r\n              const k13 = iA * s1 * a1 + iB * s2 * a2;\r\n              // float32 k22 = iA + iB;\r\n              let k22 = iA + iB;\r\n              if (k22 === 0) {\r\n                  // For fixed rotation\r\n                  k22 = 1;\r\n              }\r\n              // float32 k23 = iA * a1 + iB * a2;\r\n              const k23 = iA * a1 + iB * a2;\r\n              // float32 k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n              const k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2;\r\n              // b2Mat33 K;\r\n              const K = this.m_K3;\r\n              // K.ex.Set(k11, k12, k13);\r\n              K.ex.SetXYZ(k11, k12, k13);\r\n              // K.ey.Set(k12, k22, k23);\r\n              K.ey.SetXYZ(k12, k22, k23);\r\n              // K.ez.Set(k13, k23, k33);\r\n              K.ez.SetXYZ(k13, k23, k33);\r\n              // b2Vec3 C;\r\n              // C.x = C1.x;\r\n              // C.y = C1.y;\r\n              // C.z = C2;\r\n              // impulse = K.Solve33(-C);\r\n              impulse = K.Solve33((-C1_x), (-C1_y), (-C2), impulse);\r\n          }\r\n          else {\r\n              // float32 k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n              const k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2;\r\n              // float32 k12 = iA * s1 + iB * s2;\r\n              const k12 = iA * s1 + iB * s2;\r\n              // float32 k22 = iA + iB;\r\n              let k22 = iA + iB;\r\n              if (k22 === 0) {\r\n                  k22 = 1;\r\n              }\r\n              // b2Mat22 K;\r\n              const K2 = this.m_K2;\r\n              // K.ex.Set(k11, k12);\r\n              K2.ex.Set(k11, k12);\r\n              // K.ey.Set(k12, k22);\r\n              K2.ey.Set(k12, k22);\r\n              // b2Vec2 impulse1 = K.Solve(-C1);\r\n              const impulse1 = K2.Solve((-C1_x), (-C1_y), b2PrismaticJoint.SolvePositionConstraints_s_impulse1);\r\n              impulse.x = impulse1.x;\r\n              impulse.y = impulse1.y;\r\n              impulse.z = 0;\r\n          }\r\n          // b2Vec2 P = impulse.x * perp + impulse.z * axis;\r\n          const P = b2Vec2.AddVV(b2Vec2.MulSV(impulse.x, perp, b2Vec2.s_t0), b2Vec2.MulSV(impulse.z, axis, b2Vec2.s_t1), b2PrismaticJoint.SolvePositionConstraints_s_P);\r\n          // float32 LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n          const LA = impulse.x * s1 + impulse.y + impulse.z * a1;\r\n          // float32 LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n          const LB = impulse.x * s2 + impulse.y + impulse.z * a2;\r\n          // cA -= mA * P;\r\n          cA.SelfMulSub(mA, P);\r\n          aA -= iA * LA;\r\n          // cB += mB * P;\r\n          cB.SelfMulAdd(mB, P);\r\n          aB += iB * LB;\r\n          // data.positions[this.m_indexA].c = cA;\r\n          data.positions[this.m_indexA].a = aA;\r\n          // data.positions[this.m_indexB].c = cB;\r\n          data.positions[this.m_indexB].a = aB;\r\n          return linearError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n      }\r\n      GetAnchorA(out) {\r\n          return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          // return inv_dt * (m_impulse.x * m_perp + (m_motorImpulse + m_impulse.z) * m_axis);\r\n          out.x = inv_dt * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x);\r\n          out.y = inv_dt * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y);\r\n          return out;\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return inv_dt * this.m_impulse.y;\r\n      }\r\n      GetLocalAnchorA() { return this.m_localAnchorA; }\r\n      GetLocalAnchorB() { return this.m_localAnchorB; }\r\n      GetLocalAxisA() { return this.m_localXAxisA; }\r\n      GetReferenceAngle() { return this.m_referenceAngle; }\r\n      GetJointTranslation() {\r\n          // b2Vec2 pA = m_bodyA.GetWorldPoint(m_localAnchorA);\r\n          const pA = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PrismaticJoint.GetJointTranslation_s_pA);\r\n          // b2Vec2 pB = m_bodyB.GetWorldPoint(m_localAnchorB);\r\n          const pB = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PrismaticJoint.GetJointTranslation_s_pB);\r\n          // b2Vec2 d = pB - pA;\r\n          const d = b2Vec2.SubVV(pB, pA, b2PrismaticJoint.GetJointTranslation_s_d);\r\n          // b2Vec2 axis = m_bodyA.GetWorldVector(m_localXAxisA);\r\n          const axis = this.m_bodyA.GetWorldVector(this.m_localXAxisA, b2PrismaticJoint.GetJointTranslation_s_axis);\r\n          // float32 translation = b2Dot(d, axis);\r\n          const translation = b2Vec2.DotVV(d, axis);\r\n          return translation;\r\n      }\r\n      GetJointSpeed() {\r\n          const bA = this.m_bodyA;\r\n          const bB = this.m_bodyB;\r\n          // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n          b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n          const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n          // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n          b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n          const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n          // b2Vec2 pA = bA->m_sweep.c + rA;\r\n          const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n          // b2Vec2 pB = bB->m_sweep.c + rB;\r\n          const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n          // b2Vec2 d = pB - pA;\r\n          const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n          // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n          const axis = bA.GetWorldVector(this.m_localXAxisA, this.m_axis);\r\n          const vA = bA.m_linearVelocity;\r\n          const vB = bB.m_linearVelocity;\r\n          const wA = bA.m_angularVelocity;\r\n          const wB = bB.m_angularVelocity;\r\n          // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n          const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n              b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n          return speed;\r\n      }\r\n      IsLimitEnabled() {\r\n          return this.m_enableLimit;\r\n      }\r\n      EnableLimit(flag) {\r\n          if (flag !== this.m_enableLimit) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_enableLimit = flag;\r\n              this.m_impulse.z = 0;\r\n          }\r\n      }\r\n      GetLowerLimit() {\r\n          return this.m_lowerTranslation;\r\n      }\r\n      GetUpperLimit() {\r\n          return this.m_upperTranslation;\r\n      }\r\n      SetLimits(lower, upper) {\r\n          if (lower !== this.m_lowerTranslation || upper !== this.m_upperTranslation) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_lowerTranslation = lower;\r\n              this.m_upperTranslation = upper;\r\n              this.m_impulse.z = 0;\r\n          }\r\n      }\r\n      IsMotorEnabled() {\r\n          return this.m_enableMotor;\r\n      }\r\n      EnableMotor(flag) {\r\n          if (flag !== this.m_enableMotor) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_enableMotor = flag;\r\n          }\r\n      }\r\n      SetMotorSpeed(speed) {\r\n          if (speed !== this.m_motorSpeed) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_motorSpeed = speed;\r\n          }\r\n      }\r\n      GetMotorSpeed() {\r\n          return this.m_motorSpeed;\r\n      }\r\n      SetMaxMotorForce(force) {\r\n          if (force !== this.m_maxMotorForce) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_maxMotorForce = force;\r\n          }\r\n      }\r\n      GetMaxMotorForce() { return this.m_maxMotorForce; }\r\n      GetMotorForce(inv_dt) {\r\n          return inv_dt * this.m_motorImpulse;\r\n      }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          log(\"  const jd: b2PrismaticJointDef = new b2PrismaticJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n          log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n          log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n          log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n          log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.lowerTranslation = %.15f;\\n\", this.m_lowerTranslation);\r\n          log(\"  jd.upperTranslation = %.15f;\\n\", this.m_upperTranslation);\r\n          log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n          log(\"  jd.maxMotorForce = %.15f;\\n\", this.m_maxMotorForce);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n  }\r\n  b2PrismaticJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\n  b2PrismaticJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\n  b2PrismaticJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\n  b2PrismaticJoint.SolveVelocityConstraints_s_f2r = new b2Vec2();\r\n  b2PrismaticJoint.SolveVelocityConstraints_s_f1 = new b2Vec3();\r\n  b2PrismaticJoint.SolveVelocityConstraints_s_df3 = new b2Vec3();\r\n  b2PrismaticJoint.SolveVelocityConstraints_s_df2 = new b2Vec2();\r\n  // A velocity based solver computes reaction forces(impulses) using the velocity constraint solver.Under this context,\r\n  // the position solver is not there to resolve forces.It is only there to cope with integration error.\r\n  //\r\n  // Therefore, the pseudo impulses in the position solver do not have any physical meaning.Thus it is okay if they suck.\r\n  //\r\n  // We could take the active state from the velocity solver.However, the joint might push past the limit when the velocity\r\n  // solver indicates the limit is inactive.\r\n  b2PrismaticJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\n  b2PrismaticJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\n  b2PrismaticJoint.SolvePositionConstraints_s_impulse1 = new b2Vec2();\r\n  b2PrismaticJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n  b2PrismaticJoint.GetJointTranslation_s_pA = new b2Vec2();\r\n  b2PrismaticJoint.GetJointTranslation_s_pB = new b2Vec2();\r\n  b2PrismaticJoint.GetJointTranslation_s_d = new b2Vec2();\r\n  b2PrismaticJoint.GetJointTranslation_s_axis = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  const b2_minPulleyLength = 2;\r\n  /// Pulley joint definition. This requires two ground anchors,\r\n  /// two dynamic body anchor points, and a pulley ratio.\r\n  class b2PulleyJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_pulleyJoint);\r\n          this.groundAnchorA = new b2Vec2(-1, 1);\r\n          this.groundAnchorB = new b2Vec2(1, 1);\r\n          this.localAnchorA = new b2Vec2(-1, 0);\r\n          this.localAnchorB = new b2Vec2(1, 0);\r\n          this.lengthA = 0;\r\n          this.lengthB = 0;\r\n          this.ratio = 1;\r\n          this.collideConnected = true;\r\n      }\r\n      Initialize(bA, bB, groundA, groundB, anchorA, anchorB, r) {\r\n          this.bodyA = bA;\r\n          this.bodyB = bB;\r\n          this.groundAnchorA.Copy(groundA);\r\n          this.groundAnchorB.Copy(groundB);\r\n          this.bodyA.GetLocalPoint(anchorA, this.localAnchorA);\r\n          this.bodyB.GetLocalPoint(anchorB, this.localAnchorB);\r\n          this.lengthA = b2Vec2.DistanceVV(anchorA, groundA);\r\n          this.lengthB = b2Vec2.DistanceVV(anchorB, groundB);\r\n          this.ratio = r;\r\n          // DEBUG: b2Assert(this.ratio > b2_epsilon);\r\n      }\r\n  }\r\n  class b2PulleyJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          this.m_groundAnchorA = new b2Vec2();\r\n          this.m_groundAnchorB = new b2Vec2();\r\n          this.m_lengthA = 0;\r\n          this.m_lengthB = 0;\r\n          // Solver shared\r\n          this.m_localAnchorA = new b2Vec2();\r\n          this.m_localAnchorB = new b2Vec2();\r\n          this.m_constant = 0;\r\n          this.m_ratio = 0;\r\n          this.m_impulse = 0;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_uA = new b2Vec2();\r\n          this.m_uB = new b2Vec2();\r\n          this.m_rA = new b2Vec2();\r\n          this.m_rB = new b2Vec2();\r\n          this.m_localCenterA = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_invMassA = 0;\r\n          this.m_invMassB = 0;\r\n          this.m_invIA = 0;\r\n          this.m_invIB = 0;\r\n          this.m_mass = 0;\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_lalcA = new b2Vec2();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_groundAnchorA.Copy(b2Maybe(def.groundAnchorA, new b2Vec2(-1, 1)));\r\n          this.m_groundAnchorB.Copy(b2Maybe(def.groundAnchorB, new b2Vec2(1, 0)));\r\n          this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, new b2Vec2(-1, 0)));\r\n          this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, new b2Vec2(1, 0)));\r\n          this.m_lengthA = b2Maybe(def.lengthA, 0);\r\n          this.m_lengthB = b2Maybe(def.lengthB, 0);\r\n          // DEBUG: b2Assert(b2Maybe(def.ratio, 1) !== 0);\r\n          this.m_ratio = b2Maybe(def.ratio, 1);\r\n          this.m_constant = b2Maybe(def.lengthA, 0) + this.m_ratio * b2Maybe(def.lengthB, 0);\r\n          this.m_impulse = 0;\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassA = this.m_bodyA.m_invMass;\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIA = this.m_bodyA.m_invI;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          const cA = data.positions[this.m_indexA].c;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          // b2Rot qA(aA), qB(aB);\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // Get the pulley axes.\r\n          // m_uA = cA + m_rA - m_groundAnchorA;\r\n          this.m_uA.Copy(cA).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);\r\n          // m_uB = cB + m_rB - m_groundAnchorB;\r\n          this.m_uB.Copy(cB).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);\r\n          const lengthA = this.m_uA.Length();\r\n          const lengthB = this.m_uB.Length();\r\n          if (lengthA > 10 * b2_linearSlop) {\r\n              this.m_uA.SelfMul(1 / lengthA);\r\n          }\r\n          else {\r\n              this.m_uA.SetZero();\r\n          }\r\n          if (lengthB > 10 * b2_linearSlop) {\r\n              this.m_uB.SelfMul(1 / lengthB);\r\n          }\r\n          else {\r\n              this.m_uB.SetZero();\r\n          }\r\n          // Compute effective mass.\r\n          const ruA = b2Vec2.CrossVV(this.m_rA, this.m_uA);\r\n          const ruB = b2Vec2.CrossVV(this.m_rB, this.m_uB);\r\n          const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n          const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n          this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\r\n          if (this.m_mass > 0) {\r\n              this.m_mass = 1 / this.m_mass;\r\n          }\r\n          if (data.step.warmStarting) {\r\n              // Scale impulses to support variable time steps.\r\n              this.m_impulse *= data.step.dtRatio;\r\n              // Warm starting.\r\n              // b2Vec2 PA = -(m_impulse) * m_uA;\r\n              const PA = b2Vec2.MulSV(-(this.m_impulse), this.m_uA, b2PulleyJoint.InitVelocityConstraints_s_PA);\r\n              // b2Vec2 PB = (-m_ratio * m_impulse) * m_uB;\r\n              const PB = b2Vec2.MulSV((-this.m_ratio * this.m_impulse), this.m_uB, b2PulleyJoint.InitVelocityConstraints_s_PB);\r\n              // vA += m_invMassA * PA;\r\n              vA.SelfMulAdd(this.m_invMassA, PA);\r\n              wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n              // vB += m_invMassB * PB;\r\n              vB.SelfMulAdd(this.m_invMassB, PB);\r\n              wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n          }\r\n          else {\r\n              this.m_impulse = 0;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n          const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2PulleyJoint.SolveVelocityConstraints_s_vpA);\r\n          // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n          const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2PulleyJoint.SolveVelocityConstraints_s_vpB);\r\n          const Cdot = -b2Vec2.DotVV(this.m_uA, vpA) - this.m_ratio * b2Vec2.DotVV(this.m_uB, vpB);\r\n          const impulse = -this.m_mass * Cdot;\r\n          this.m_impulse += impulse;\r\n          // b2Vec2 PA = -impulse * m_uA;\r\n          const PA = b2Vec2.MulSV(-impulse, this.m_uA, b2PulleyJoint.SolveVelocityConstraints_s_PA);\r\n          // b2Vec2 PB = -m_ratio * impulse * m_uB;\r\n          const PB = b2Vec2.MulSV(-this.m_ratio * impulse, this.m_uB, b2PulleyJoint.SolveVelocityConstraints_s_PB);\r\n          // vA += m_invMassA * PA;\r\n          vA.SelfMulAdd(this.m_invMassA, PA);\r\n          wA += this.m_invIA * b2Vec2.CrossVV(this.m_rA, PA);\r\n          // vB += m_invMassB * PB;\r\n          vB.SelfMulAdd(this.m_invMassB, PB);\r\n          wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, PB);\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          const cA = data.positions[this.m_indexA].c;\r\n          let aA = data.positions[this.m_indexA].a;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          let aB = data.positions[this.m_indexB].a;\r\n          // b2Rot qA(aA), qB(aB);\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // Get the pulley axes.\r\n          // b2Vec2 uA = cA + rA - m_groundAnchorA;\r\n          const uA = this.m_uA.Copy(cA).SelfAdd(rA).SelfSub(this.m_groundAnchorA);\r\n          // b2Vec2 uB = cB + rB - m_groundAnchorB;\r\n          const uB = this.m_uB.Copy(cB).SelfAdd(rB).SelfSub(this.m_groundAnchorB);\r\n          const lengthA = uA.Length();\r\n          const lengthB = uB.Length();\r\n          if (lengthA > 10 * b2_linearSlop) {\r\n              uA.SelfMul(1 / lengthA);\r\n          }\r\n          else {\r\n              uA.SetZero();\r\n          }\r\n          if (lengthB > 10 * b2_linearSlop) {\r\n              uB.SelfMul(1 / lengthB);\r\n          }\r\n          else {\r\n              uB.SetZero();\r\n          }\r\n          // Compute effective mass.\r\n          const ruA = b2Vec2.CrossVV(rA, uA);\r\n          const ruB = b2Vec2.CrossVV(rB, uB);\r\n          const mA = this.m_invMassA + this.m_invIA * ruA * ruA;\r\n          const mB = this.m_invMassB + this.m_invIB * ruB * ruB;\r\n          let mass = mA + this.m_ratio * this.m_ratio * mB;\r\n          if (mass > 0) {\r\n              mass = 1 / mass;\r\n          }\r\n          const C = this.m_constant - lengthA - this.m_ratio * lengthB;\r\n          const linearError = b2Abs(C);\r\n          const impulse = -mass * C;\r\n          // b2Vec2 PA = -impulse * uA;\r\n          const PA = b2Vec2.MulSV(-impulse, uA, b2PulleyJoint.SolvePositionConstraints_s_PA);\r\n          // b2Vec2 PB = -m_ratio * impulse * uB;\r\n          const PB = b2Vec2.MulSV(-this.m_ratio * impulse, uB, b2PulleyJoint.SolvePositionConstraints_s_PB);\r\n          // cA += m_invMassA * PA;\r\n          cA.SelfMulAdd(this.m_invMassA, PA);\r\n          aA += this.m_invIA * b2Vec2.CrossVV(rA, PA);\r\n          // cB += m_invMassB * PB;\r\n          cB.SelfMulAdd(this.m_invMassB, PB);\r\n          aB += this.m_invIB * b2Vec2.CrossVV(rB, PB);\r\n          // data.positions[this.m_indexA].c = cA;\r\n          data.positions[this.m_indexA].a = aA;\r\n          // data.positions[this.m_indexB].c = cB;\r\n          data.positions[this.m_indexB].a = aB;\r\n          return linearError < b2_linearSlop;\r\n      }\r\n      GetAnchorA(out) {\r\n          return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          // b2Vec2 P = m_impulse * m_uB;\r\n          // return inv_dt * P;\r\n          out.x = inv_dt * this.m_impulse * this.m_uB.x;\r\n          out.y = inv_dt * this.m_impulse * this.m_uB.y;\r\n          return out;\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return 0;\r\n      }\r\n      GetGroundAnchorA() {\r\n          return this.m_groundAnchorA;\r\n      }\r\n      GetGroundAnchorB() {\r\n          return this.m_groundAnchorB;\r\n      }\r\n      GetLengthA() {\r\n          return this.m_lengthA;\r\n      }\r\n      GetLengthB() {\r\n          return this.m_lengthB;\r\n      }\r\n      GetRatio() {\r\n          return this.m_ratio;\r\n      }\r\n      GetCurrentLengthA() {\r\n          // b2Vec2 p = m_bodyA->GetWorldPoint(m_localAnchorA);\r\n          // b2Vec2 s = m_groundAnchorA;\r\n          // b2Vec2 d = p - s;\r\n          // return d.Length();\r\n          const p = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, b2PulleyJoint.GetCurrentLengthA_s_p);\r\n          const s = this.m_groundAnchorA;\r\n          return b2Vec2.DistanceVV(p, s);\r\n      }\r\n      GetCurrentLengthB() {\r\n          // b2Vec2 p = m_bodyB->GetWorldPoint(m_localAnchorB);\r\n          // b2Vec2 s = m_groundAnchorB;\r\n          // b2Vec2 d = p - s;\r\n          // return d.Length();\r\n          const p = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, b2PulleyJoint.GetCurrentLengthB_s_p);\r\n          const s = this.m_groundAnchorB;\r\n          return b2Vec2.DistanceVV(p, s);\r\n      }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          log(\"  const jd: b2PulleyJointDef = new b2PulleyJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.groundAnchorA.Set(%.15f, %.15f);\\n\", this.m_groundAnchorA.x, this.m_groundAnchorA.y);\r\n          log(\"  jd.groundAnchorB.Set(%.15f, %.15f);\\n\", this.m_groundAnchorB.x, this.m_groundAnchorB.y);\r\n          log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n          log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n          log(\"  jd.lengthA = %.15f;\\n\", this.m_lengthA);\r\n          log(\"  jd.lengthB = %.15f;\\n\", this.m_lengthB);\r\n          log(\"  jd.ratio = %.15f;\\n\", this.m_ratio);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n      ShiftOrigin(newOrigin) {\r\n          this.m_groundAnchorA.SelfSub(newOrigin);\r\n          this.m_groundAnchorB.SelfSub(newOrigin);\r\n      }\r\n  }\r\n  b2PulleyJoint.InitVelocityConstraints_s_PA = new b2Vec2();\r\n  b2PulleyJoint.InitVelocityConstraints_s_PB = new b2Vec2();\r\n  b2PulleyJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\n  b2PulleyJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\n  b2PulleyJoint.SolveVelocityConstraints_s_PA = new b2Vec2();\r\n  b2PulleyJoint.SolveVelocityConstraints_s_PB = new b2Vec2();\r\n  b2PulleyJoint.SolvePositionConstraints_s_PA = new b2Vec2();\r\n  b2PulleyJoint.SolvePositionConstraints_s_PB = new b2Vec2();\r\n  b2PulleyJoint.GetCurrentLengthA_s_p = new b2Vec2();\r\n  b2PulleyJoint.GetCurrentLengthB_s_p = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Revolute joint definition. This requires defining an\r\n  /// anchor point where the bodies are joined. The definition\r\n  /// uses local anchor points so that the initial configuration\r\n  /// can violate the constraint slightly. You also need to\r\n  /// specify the initial relative angle for joint limits. This\r\n  /// helps when saving and loading a game.\r\n  /// The local anchor points are measured from the body's origin\r\n  /// rather than the center of mass because:\r\n  /// 1. you might not know where the center of mass will be.\r\n  /// 2. if you add/remove shapes from a body and recompute the mass,\r\n  ///    the joints will be broken.\r\n  class b2RevoluteJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_revoluteJoint);\r\n          this.localAnchorA = new b2Vec2(0, 0);\r\n          this.localAnchorB = new b2Vec2(0, 0);\r\n          this.referenceAngle = 0;\r\n          this.enableLimit = false;\r\n          this.lowerAngle = 0;\r\n          this.upperAngle = 0;\r\n          this.enableMotor = false;\r\n          this.motorSpeed = 0;\r\n          this.maxMotorTorque = 0;\r\n      }\r\n      Initialize(bA, bB, anchor) {\r\n          this.bodyA = bA;\r\n          this.bodyB = bB;\r\n          this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n          this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n          this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n      }\r\n  }\r\n  class b2RevoluteJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          // Solver shared\r\n          this.m_localAnchorA = new b2Vec2();\r\n          this.m_localAnchorB = new b2Vec2();\r\n          this.m_impulse = new b2Vec3();\r\n          this.m_motorImpulse = 0;\r\n          this.m_enableMotor = false;\r\n          this.m_maxMotorTorque = 0;\r\n          this.m_motorSpeed = 0;\r\n          this.m_enableLimit = false;\r\n          this.m_referenceAngle = 0;\r\n          this.m_lowerAngle = 0;\r\n          this.m_upperAngle = 0;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_rA = new b2Vec2();\r\n          this.m_rB = new b2Vec2();\r\n          this.m_localCenterA = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_invMassA = 0;\r\n          this.m_invMassB = 0;\r\n          this.m_invIA = 0;\r\n          this.m_invIB = 0;\r\n          this.m_mass = new b2Mat33(); // effective mass for point-to-point constraint.\r\n          this.m_motorMass = 0; // effective mass for motor/limit angular constraint.\r\n          this.m_limitState = exports.b2LimitState.e_inactiveLimit;\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_lalcA = new b2Vec2();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_K = new b2Mat22();\r\n          this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n          this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n          this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\r\n          this.m_impulse.SetZero();\r\n          this.m_motorImpulse = 0;\r\n          this.m_lowerAngle = b2Maybe(def.lowerAngle, 0);\r\n          this.m_upperAngle = b2Maybe(def.upperAngle, 0);\r\n          this.m_maxMotorTorque = b2Maybe(def.maxMotorTorque, 0);\r\n          this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\r\n          this.m_enableLimit = b2Maybe(def.enableLimit, false);\r\n          this.m_enableMotor = b2Maybe(def.enableMotor, false);\r\n          this.m_limitState = exports.b2LimitState.e_inactiveLimit;\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassA = this.m_bodyA.m_invMass;\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIA = this.m_bodyA.m_invI;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          // b2Rot qA(aA), qB(aB);\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // J = [-I -r1_skew I r2_skew]\r\n          //     [ 0       -1 0       1]\r\n          // r_skew = [-ry; rx]\r\n          // Matlab\r\n          // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n          //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n          //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          const fixedRotation = (iA + iB === 0);\r\n          this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n          this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n          this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n          this.m_mass.ex.y = this.m_mass.ey.x;\r\n          this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n          this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n          this.m_mass.ex.z = this.m_mass.ez.x;\r\n          this.m_mass.ey.z = this.m_mass.ez.y;\r\n          this.m_mass.ez.z = iA + iB;\r\n          this.m_motorMass = iA + iB;\r\n          if (this.m_motorMass > 0) {\r\n              this.m_motorMass = 1 / this.m_motorMass;\r\n          }\r\n          if (!this.m_enableMotor || fixedRotation) {\r\n              this.m_motorImpulse = 0;\r\n          }\r\n          if (this.m_enableLimit && !fixedRotation) {\r\n              const jointAngle = aB - aA - this.m_referenceAngle;\r\n              if (b2Abs(this.m_upperAngle - this.m_lowerAngle) < 2 * b2_angularSlop) {\r\n                  this.m_limitState = exports.b2LimitState.e_equalLimits;\r\n              }\r\n              else if (jointAngle <= this.m_lowerAngle) {\r\n                  if (this.m_limitState !== exports.b2LimitState.e_atLowerLimit) {\r\n                      this.m_impulse.z = 0;\r\n                  }\r\n                  this.m_limitState = exports.b2LimitState.e_atLowerLimit;\r\n              }\r\n              else if (jointAngle >= this.m_upperAngle) {\r\n                  if (this.m_limitState !== exports.b2LimitState.e_atUpperLimit) {\r\n                      this.m_impulse.z = 0;\r\n                  }\r\n                  this.m_limitState = exports.b2LimitState.e_atUpperLimit;\r\n              }\r\n              else {\r\n                  this.m_limitState = exports.b2LimitState.e_inactiveLimit;\r\n                  this.m_impulse.z = 0;\r\n              }\r\n          }\r\n          else {\r\n              this.m_limitState = exports.b2LimitState.e_inactiveLimit;\r\n          }\r\n          if (data.step.warmStarting) {\r\n              // Scale impulses to support a variable time step.\r\n              this.m_impulse.SelfMul(data.step.dtRatio);\r\n              this.m_motorImpulse *= data.step.dtRatio;\r\n              // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n              const P = b2RevoluteJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\r\n          }\r\n          else {\r\n              this.m_impulse.SetZero();\r\n              this.m_motorImpulse = 0;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          const fixedRotation = (iA + iB === 0);\r\n          // Solve motor constraint.\r\n          if (this.m_enableMotor && this.m_limitState !== exports.b2LimitState.e_equalLimits && !fixedRotation) {\r\n              const Cdot = wB - wA - this.m_motorSpeed;\r\n              let impulse = -this.m_motorMass * Cdot;\r\n              const oldImpulse = this.m_motorImpulse;\r\n              const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n              this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n              impulse = this.m_motorImpulse - oldImpulse;\r\n              wA -= iA * impulse;\r\n              wB += iB * impulse;\r\n          }\r\n          // Solve limit constraint.\r\n          if (this.m_enableLimit && this.m_limitState !== exports.b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n              // b2Vec2 Cdot1 = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n              const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot1);\r\n              const Cdot2 = wB - wA;\r\n              // b2Vec3 Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n              // b2Vec3 impulse = -this.m_mass.Solve33(Cdot);\r\n              const impulse_v3 = this.m_mass.Solve33(Cdot1.x, Cdot1.y, Cdot2, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3).SelfNeg();\r\n              if (this.m_limitState === exports.b2LimitState.e_equalLimits) {\r\n                  this.m_impulse.SelfAdd(impulse_v3);\r\n              }\r\n              else if (this.m_limitState === exports.b2LimitState.e_atLowerLimit) {\r\n                  const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                  if (newImpulse < 0) {\r\n                      // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                      const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                      const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                      const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                      impulse_v3.x = reduced_v2.x;\r\n                      impulse_v3.y = reduced_v2.y;\r\n                      impulse_v3.z = -this.m_impulse.z;\r\n                      this.m_impulse.x += reduced_v2.x;\r\n                      this.m_impulse.y += reduced_v2.y;\r\n                      this.m_impulse.z = 0;\r\n                  }\r\n                  else {\r\n                      this.m_impulse.SelfAdd(impulse_v3);\r\n                  }\r\n              }\r\n              else if (this.m_limitState === exports.b2LimitState.e_atUpperLimit) {\r\n                  const newImpulse = this.m_impulse.z + impulse_v3.z;\r\n                  if (newImpulse > 0) {\r\n                      // b2Vec2 rhs = -Cdot1 + m_impulse.z * b2Vec2(m_mass.ez.x, m_mass.ez.y);\r\n                      const rhs_x = -Cdot1.x + this.m_impulse.z * this.m_mass.ez.x;\r\n                      const rhs_y = -Cdot1.y + this.m_impulse.z * this.m_mass.ez.y;\r\n                      const reduced_v2 = this.m_mass.Solve22(rhs_x, rhs_y, b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2);\r\n                      impulse_v3.x = reduced_v2.x;\r\n                      impulse_v3.y = reduced_v2.y;\r\n                      impulse_v3.z = -this.m_impulse.z;\r\n                      this.m_impulse.x += reduced_v2.x;\r\n                      this.m_impulse.y += reduced_v2.y;\r\n                      this.m_impulse.z = 0;\r\n                  }\r\n                  else {\r\n                      this.m_impulse.SelfAdd(impulse_v3);\r\n                  }\r\n              }\r\n              // b2Vec2 P(impulse.x, impulse.y);\r\n              const P = b2RevoluteJoint.SolveVelocityConstraints_s_P.Set(impulse_v3.x, impulse_v3.y);\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse_v3.z);\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse_v3.z);\r\n          }\r\n          else {\r\n              // Solve point-to-point constraint\r\n              // b2Vec2 Cdot = vB + b2Cross(wB, m_rB) - vA - b2Cross(wA, m_rA);\r\n              const Cdot_v2 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2);\r\n              // b2Vec2 impulse = m_mass.Solve22(-Cdot);\r\n              const impulse_v2 = this.m_mass.Solve22(-Cdot_v2.x, -Cdot_v2.y, b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2);\r\n              this.m_impulse.x += impulse_v2.x;\r\n              this.m_impulse.y += impulse_v2.y;\r\n              // vA -= mA * impulse;\r\n              vA.SelfMulSub(mA, impulse_v2);\r\n              wA -= iA * b2Vec2.CrossVV(this.m_rA, impulse_v2);\r\n              // vB += mB * impulse;\r\n              vB.SelfMulAdd(mB, impulse_v2);\r\n              wB += iB * b2Vec2.CrossVV(this.m_rB, impulse_v2);\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          const cA = data.positions[this.m_indexA].c;\r\n          let aA = data.positions[this.m_indexA].a;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          let aB = data.positions[this.m_indexB].a;\r\n          // b2Rot qA(aA), qB(aB);\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          let angularError = 0;\r\n          let positionError = 0;\r\n          const fixedRotation = (this.m_invIA + this.m_invIB === 0);\r\n          // Solve angular limit constraint.\r\n          if (this.m_enableLimit && this.m_limitState !== exports.b2LimitState.e_inactiveLimit && !fixedRotation) {\r\n              const angle = aB - aA - this.m_referenceAngle;\r\n              let limitImpulse = 0;\r\n              if (this.m_limitState === exports.b2LimitState.e_equalLimits) {\r\n                  // Prevent large angular corrections\r\n                  const C = b2Clamp(angle - this.m_lowerAngle, -b2_maxAngularCorrection, b2_maxAngularCorrection);\r\n                  limitImpulse = -this.m_motorMass * C;\r\n                  angularError = b2Abs(C);\r\n              }\r\n              else if (this.m_limitState === exports.b2LimitState.e_atLowerLimit) {\r\n                  let C = angle - this.m_lowerAngle;\r\n                  angularError = -C;\r\n                  // Prevent large angular corrections and allow some slop.\r\n                  C = b2Clamp(C + b2_angularSlop, -b2_maxAngularCorrection, 0);\r\n                  limitImpulse = -this.m_motorMass * C;\r\n              }\r\n              else if (this.m_limitState === exports.b2LimitState.e_atUpperLimit) {\r\n                  let C = angle - this.m_upperAngle;\r\n                  angularError = C;\r\n                  // Prevent large angular corrections and allow some slop.\r\n                  C = b2Clamp(C - b2_angularSlop, 0, b2_maxAngularCorrection);\r\n                  limitImpulse = -this.m_motorMass * C;\r\n              }\r\n              aA -= this.m_invIA * limitImpulse;\r\n              aB += this.m_invIB * limitImpulse;\r\n          }\r\n          // Solve point-to-point constraint.\r\n          {\r\n              qA.SetAngle(aA);\r\n              qB.SetAngle(aB);\r\n              // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n              b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n              const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n              // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n              b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n              const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n              // b2Vec2 C = cB + rB - cA - rA;\r\n              const C_v2 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2RevoluteJoint.SolvePositionConstraints_s_C_v2);\r\n              // positionError = C.Length();\r\n              positionError = C_v2.Length();\r\n              const mA = this.m_invMassA, mB = this.m_invMassB;\r\n              const iA = this.m_invIA, iB = this.m_invIB;\r\n              const K = this.m_K;\r\n              K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\r\n              K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\r\n              K.ey.x = K.ex.y;\r\n              K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\r\n              // b2Vec2 impulse = -K.Solve(C);\r\n              const impulse = K.Solve(C_v2.x, C_v2.y, b2RevoluteJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n              // cA -= mA * impulse;\r\n              cA.SelfMulSub(mA, impulse);\r\n              aA -= iA * b2Vec2.CrossVV(rA, impulse);\r\n              // cB += mB * impulse;\r\n              cB.SelfMulAdd(mB, impulse);\r\n              aB += iB * b2Vec2.CrossVV(rB, impulse);\r\n          }\r\n          // data.positions[this.m_indexA].c = cA;\r\n          data.positions[this.m_indexA].a = aA;\r\n          // data.positions[this.m_indexB].c = cB;\r\n          data.positions[this.m_indexB].a = aB;\r\n          return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n      }\r\n      GetAnchorA(out) {\r\n          return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n          // return inv_dt * P;\r\n          out.x = inv_dt * this.m_impulse.x;\r\n          out.y = inv_dt * this.m_impulse.y;\r\n          return out;\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return inv_dt * this.m_impulse.z;\r\n      }\r\n      GetLocalAnchorA() { return this.m_localAnchorA; }\r\n      GetLocalAnchorB() { return this.m_localAnchorB; }\r\n      GetReferenceAngle() { return this.m_referenceAngle; }\r\n      GetJointAngle() {\r\n          // b2Body* bA = this.m_bodyA;\r\n          // b2Body* bB = this.m_bodyB;\r\n          // return bB->this.m_sweep.a - bA->this.m_sweep.a - this.m_referenceAngle;\r\n          return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;\r\n      }\r\n      GetJointSpeed() {\r\n          // b2Body* bA = this.m_bodyA;\r\n          // b2Body* bB = this.m_bodyB;\r\n          // return bB->this.m_angularVelocity - bA->this.m_angularVelocity;\r\n          return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;\r\n      }\r\n      IsMotorEnabled() {\r\n          return this.m_enableMotor;\r\n      }\r\n      EnableMotor(flag) {\r\n          if (flag !== this.m_enableMotor) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_enableMotor = flag;\r\n          }\r\n      }\r\n      GetMotorTorque(inv_dt) {\r\n          return inv_dt * this.m_motorImpulse;\r\n      }\r\n      GetMotorSpeed() {\r\n          return this.m_motorSpeed;\r\n      }\r\n      SetMaxMotorTorque(torque) {\r\n          if (torque !== this.m_maxMotorTorque) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_maxMotorTorque = torque;\r\n          }\r\n      }\r\n      GetMaxMotorTorque() { return this.m_maxMotorTorque; }\r\n      IsLimitEnabled() {\r\n          return this.m_enableLimit;\r\n      }\r\n      EnableLimit(flag) {\r\n          if (flag !== this.m_enableLimit) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_enableLimit = flag;\r\n              this.m_impulse.z = 0;\r\n          }\r\n      }\r\n      GetLowerLimit() {\r\n          return this.m_lowerAngle;\r\n      }\r\n      GetUpperLimit() {\r\n          return this.m_upperAngle;\r\n      }\r\n      SetLimits(lower, upper) {\r\n          if (lower !== this.m_lowerAngle || upper !== this.m_upperAngle) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_impulse.z = 0;\r\n              this.m_lowerAngle = lower;\r\n              this.m_upperAngle = upper;\r\n          }\r\n      }\r\n      SetMotorSpeed(speed) {\r\n          if (speed !== this.m_motorSpeed) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_motorSpeed = speed;\r\n          }\r\n      }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          log(\"  const jd: b2RevoluteJointDef = new b2RevoluteJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n          log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n          log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n          log(\"  jd.enableLimit = %s;\\n\", (this.m_enableLimit) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.lowerAngle = %.15f;\\n\", this.m_lowerAngle);\r\n          log(\"  jd.upperAngle = %.15f;\\n\", this.m_upperAngle);\r\n          log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n          log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n  }\r\n  b2RevoluteJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\n  b2RevoluteJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\n  b2RevoluteJoint.SolveVelocityConstraints_s_Cdot_v2 = new b2Vec2();\r\n  b2RevoluteJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\n  b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v3 = new b2Vec3();\r\n  b2RevoluteJoint.SolveVelocityConstraints_s_reduced_v2 = new b2Vec2();\r\n  b2RevoluteJoint.SolveVelocityConstraints_s_impulse_v2 = new b2Vec2();\r\n  b2RevoluteJoint.SolvePositionConstraints_s_C_v2 = new b2Vec2();\r\n  b2RevoluteJoint.SolvePositionConstraints_s_impulse = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Rope joint definition. This requires two body anchor points and\r\n  /// a maximum lengths.\r\n  /// Note: by default the connected objects will not collide.\r\n  /// see collideConnected in b2JointDef.\r\n  class b2RopeJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_ropeJoint);\r\n          this.localAnchorA = new b2Vec2(-1, 0);\r\n          this.localAnchorB = new b2Vec2(1, 0);\r\n          this.maxLength = 0;\r\n      }\r\n  }\r\n  class b2RopeJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          // Solver shared\r\n          this.m_localAnchorA = new b2Vec2();\r\n          this.m_localAnchorB = new b2Vec2();\r\n          this.m_maxLength = 0;\r\n          this.m_length = 0;\r\n          this.m_impulse = 0;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_u = new b2Vec2();\r\n          this.m_rA = new b2Vec2();\r\n          this.m_rB = new b2Vec2();\r\n          this.m_localCenterA = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_invMassA = 0;\r\n          this.m_invMassB = 0;\r\n          this.m_invIA = 0;\r\n          this.m_invIB = 0;\r\n          this.m_mass = 0;\r\n          this.m_state = exports.b2LimitState.e_inactiveLimit;\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_lalcA = new b2Vec2();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, new b2Vec2(-1, 0)));\r\n          this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, new b2Vec2(1, 0)));\r\n          this.m_maxLength = b2Maybe(def.maxLength, 0);\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassA = this.m_bodyA.m_invMass;\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIA = this.m_bodyA.m_invI;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          const cA = data.positions[this.m_indexA].c;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // this.m_rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // this.m_rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // this.m_u = cB + this.m_rB - cA - this.m_rA;\r\n          this.m_u.Copy(cB).SelfAdd(this.m_rB).SelfSub(cA).SelfSub(this.m_rA);\r\n          this.m_length = this.m_u.Length();\r\n          const C = this.m_length - this.m_maxLength;\r\n          if (C > 0) {\r\n              this.m_state = exports.b2LimitState.e_atUpperLimit;\r\n          }\r\n          else {\r\n              this.m_state = exports.b2LimitState.e_inactiveLimit;\r\n          }\r\n          if (this.m_length > b2_linearSlop) {\r\n              this.m_u.SelfMul(1 / this.m_length);\r\n          }\r\n          else {\r\n              this.m_u.SetZero();\r\n              this.m_mass = 0;\r\n              this.m_impulse = 0;\r\n              return;\r\n          }\r\n          // Compute effective mass.\r\n          const crA = b2Vec2.CrossVV(this.m_rA, this.m_u);\r\n          const crB = b2Vec2.CrossVV(this.m_rB, this.m_u);\r\n          const invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB + this.m_invIB * crB * crB;\r\n          this.m_mass = invMass !== 0 ? 1 / invMass : 0;\r\n          if (data.step.warmStarting) {\r\n              // Scale the impulse to support a variable time step.\r\n              this.m_impulse *= data.step.dtRatio;\r\n              // b2Vec2 P = m_impulse * m_u;\r\n              const P = b2Vec2.MulSV(this.m_impulse, this.m_u, b2RopeJoint.InitVelocityConstraints_s_P);\r\n              // vA -= m_invMassA * P;\r\n              vA.SelfMulSub(this.m_invMassA, P);\r\n              wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n              // vB += m_invMassB * P;\r\n              vB.SelfMulAdd(this.m_invMassB, P);\r\n              wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n          }\r\n          else {\r\n              this.m_impulse = 0;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          // Cdot = dot(u, v + cross(w, r))\r\n          // b2Vec2 vpA = vA + b2Cross(wA, m_rA);\r\n          const vpA = b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2RopeJoint.SolveVelocityConstraints_s_vpA);\r\n          // b2Vec2 vpB = vB + b2Cross(wB, m_rB);\r\n          const vpB = b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2RopeJoint.SolveVelocityConstraints_s_vpB);\r\n          // float32 C = m_length - m_maxLength;\r\n          const C = this.m_length - this.m_maxLength;\r\n          // float32 Cdot = b2Dot(m_u, vpB - vpA);\r\n          let Cdot = b2Vec2.DotVV(this.m_u, b2Vec2.SubVV(vpB, vpA, b2Vec2.s_t0));\r\n          // Predictive constraint.\r\n          if (C < 0) {\r\n              Cdot += data.step.inv_dt * C;\r\n          }\r\n          let impulse = -this.m_mass * Cdot;\r\n          const oldImpulse = this.m_impulse;\r\n          this.m_impulse = b2Min(0, this.m_impulse + impulse);\r\n          impulse = this.m_impulse - oldImpulse;\r\n          // b2Vec2 P = impulse * m_u;\r\n          const P = b2Vec2.MulSV(impulse, this.m_u, b2RopeJoint.SolveVelocityConstraints_s_P);\r\n          // vA -= m_invMassA * P;\r\n          vA.SelfMulSub(this.m_invMassA, P);\r\n          wA -= this.m_invIA * b2Vec2.CrossVV(this.m_rA, P);\r\n          // vB += m_invMassB * P;\r\n          vB.SelfMulAdd(this.m_invMassB, P);\r\n          wB += this.m_invIB * b2Vec2.CrossVV(this.m_rB, P);\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          const cA = data.positions[this.m_indexA].c;\r\n          let aA = data.positions[this.m_indexA].a;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          let aB = data.positions[this.m_indexB].a;\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // b2Vec2 rA = b2Mul(qA, this.m_localAnchorA - this.m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // b2Vec2 rB = b2Mul(qB, this.m_localAnchorB - this.m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // b2Vec2 u = cB + rB - cA - rA;\r\n          const u = this.m_u.Copy(cB).SelfAdd(rB).SelfSub(cA).SelfSub(rA);\r\n          const length = u.Normalize();\r\n          let C = length - this.m_maxLength;\r\n          C = b2Clamp(C, 0, b2_maxLinearCorrection);\r\n          const impulse = -this.m_mass * C;\r\n          // b2Vec2 P = impulse * u;\r\n          const P = b2Vec2.MulSV(impulse, u, b2RopeJoint.SolvePositionConstraints_s_P);\r\n          // cA -= m_invMassA * P;\r\n          cA.SelfMulSub(this.m_invMassA, P);\r\n          aA -= this.m_invIA * b2Vec2.CrossVV(rA, P);\r\n          // cB += m_invMassB * P;\r\n          cB.SelfMulAdd(this.m_invMassB, P);\r\n          aB += this.m_invIB * b2Vec2.CrossVV(rB, P);\r\n          // data.positions[this.m_indexA].c = cA;\r\n          data.positions[this.m_indexA].a = aA;\r\n          // data.positions[this.m_indexB].c = cB;\r\n          data.positions[this.m_indexB].a = aB;\r\n          return length - this.m_maxLength < b2_linearSlop;\r\n      }\r\n      GetAnchorA(out) {\r\n          return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          // return out.Set(inv_dt * this.m_linearImpulse.x, inv_dt * this.m_linearImpulse.y);\r\n          return b2Vec2.MulSV((inv_dt * this.m_impulse), this.m_u, out);\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return 0;\r\n      }\r\n      GetLocalAnchorA() { return this.m_localAnchorA; }\r\n      GetLocalAnchorB() { return this.m_localAnchorB; }\r\n      SetMaxLength(length) { this.m_maxLength = length; }\r\n      GetMaxLength() {\r\n          return this.m_maxLength;\r\n      }\r\n      GetLimitState() {\r\n          return this.m_state;\r\n      }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          log(\"  const jd: b2RopeJointDef = new b2RopeJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n          log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n          log(\"  jd.maxLength = %.15f;\\n\", this.m_maxLength);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n  }\r\n  b2RopeJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\n  b2RopeJoint.SolveVelocityConstraints_s_vpA = new b2Vec2();\r\n  b2RopeJoint.SolveVelocityConstraints_s_vpB = new b2Vec2();\r\n  b2RopeJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\n  b2RopeJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Weld joint definition. You need to specify local anchor points\r\n  /// where they are attached and the relative body angle. The position\r\n  /// of the anchor points is important for computing the reaction torque.\r\n  class b2WeldJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_weldJoint);\r\n          this.localAnchorA = new b2Vec2();\r\n          this.localAnchorB = new b2Vec2();\r\n          this.referenceAngle = 0;\r\n          this.frequencyHz = 0;\r\n          this.dampingRatio = 0;\r\n      }\r\n      Initialize(bA, bB, anchor) {\r\n          this.bodyA = bA;\r\n          this.bodyB = bB;\r\n          this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n          this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n          this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();\r\n      }\r\n  }\r\n  class b2WeldJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          this.m_frequencyHz = 0;\r\n          this.m_dampingRatio = 0;\r\n          this.m_bias = 0;\r\n          // Solver shared\r\n          this.m_localAnchorA = new b2Vec2();\r\n          this.m_localAnchorB = new b2Vec2();\r\n          this.m_referenceAngle = 0;\r\n          this.m_gamma = 0;\r\n          this.m_impulse = new b2Vec3(0, 0, 0);\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_rA = new b2Vec2();\r\n          this.m_rB = new b2Vec2();\r\n          this.m_localCenterA = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_invMassA = 0;\r\n          this.m_invMassB = 0;\r\n          this.m_invIA = 0;\r\n          this.m_invIB = 0;\r\n          this.m_mass = new b2Mat33();\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_lalcA = new b2Vec2();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_K = new b2Mat33();\r\n          this.m_frequencyHz = b2Maybe(def.frequencyHz, 0);\r\n          this.m_dampingRatio = b2Maybe(def.dampingRatio, 0);\r\n          this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n          this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n          this.m_referenceAngle = b2Maybe(def.referenceAngle, 0);\r\n          this.m_impulse.SetZero();\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassA = this.m_bodyA.m_invMass;\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIA = this.m_bodyA.m_invI;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // m_rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // m_rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // J = [-I -r1_skew I r2_skew]\r\n          //     [ 0       -1 0       1]\r\n          // r_skew = [-ry; rx]\r\n          // Matlab\r\n          // K = [ mA+r1y^2*iA+mB+r2y^2*iB,  -r1y*iA*r1x-r2y*iB*r2x,          -r1y*iA-r2y*iB]\r\n          //     [  -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB,           r1x*iA+r2x*iB]\r\n          //     [          -r1y*iA-r2y*iB,           r1x*iA+r2x*iB,                   iA+iB]\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          const K = this.m_K;\r\n          K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y * iB;\r\n          K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\r\n          K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\r\n          K.ex.y = K.ey.x;\r\n          K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x * iB;\r\n          K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\r\n          K.ex.z = K.ez.x;\r\n          K.ey.z = K.ez.y;\r\n          K.ez.z = iA + iB;\r\n          if (this.m_frequencyHz > 0) {\r\n              K.GetInverse22(this.m_mass);\r\n              let invM = iA + iB;\r\n              const m = invM > 0 ? 1 / invM : 0;\r\n              const C = aB - aA - this.m_referenceAngle;\r\n              // Frequency\r\n              const omega = 2 * b2_pi * this.m_frequencyHz;\r\n              // Damping coefficient\r\n              const d = 2 * m * this.m_dampingRatio * omega;\r\n              // Spring stiffness\r\n              const k = m * omega * omega;\r\n              // magic formulas\r\n              const h = data.step.dt;\r\n              this.m_gamma = h * (d + h * k);\r\n              this.m_gamma = this.m_gamma !== 0 ? 1 / this.m_gamma : 0;\r\n              this.m_bias = C * h * k * this.m_gamma;\r\n              invM += this.m_gamma;\r\n              this.m_mass.ez.z = invM !== 0 ? 1 / invM : 0;\r\n          }\r\n          else {\r\n              K.GetSymInverse33(this.m_mass);\r\n              this.m_gamma = 0;\r\n              this.m_bias = 0;\r\n          }\r\n          if (data.step.warmStarting) {\r\n              // Scale impulses to support a variable time step.\r\n              this.m_impulse.SelfMul(data.step.dtRatio);\r\n              // b2Vec2 P(m_impulse.x, m_impulse.y);\r\n              const P = b2WeldJoint.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + this.m_impulse.z);\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + this.m_impulse.z);\r\n          }\r\n          else {\r\n              this.m_impulse.SetZero();\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          if (this.m_frequencyHz > 0) {\r\n              const Cdot2 = wB - wA;\r\n              const impulse2 = -this.m_mass.ez.z * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z);\r\n              this.m_impulse.z += impulse2;\r\n              wA -= iA * impulse2;\r\n              wB += iB * impulse2;\r\n              // b2Vec2 Cdot1 = vB + b2Vec2.CrossSV(wB, this.m_rB) - vA - b2Vec2.CrossSV(wA, this.m_rA);\r\n              const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n              // b2Vec2 impulse1 = -b2Mul22(m_mass, Cdot1);\r\n              const impulse1 = b2Mat33.MulM33XY(this.m_mass, Cdot1.x, Cdot1.y, b2WeldJoint.SolveVelocityConstraints_s_impulse1).SelfNeg();\r\n              this.m_impulse.x += impulse1.x;\r\n              this.m_impulse.y += impulse1.y;\r\n              // b2Vec2 P = impulse1;\r\n              const P = impulse1;\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              // wA -= iA * b2Cross(m_rA, P);\r\n              wA -= iA * b2Vec2.CrossVV(this.m_rA, P);\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              // wB += iB * b2Cross(m_rB, P);\r\n              wB += iB * b2Vec2.CrossVV(this.m_rB, P);\r\n          }\r\n          else {\r\n              // b2Vec2 Cdot1 = vB + b2Cross(wB, this.m_rB) - vA - b2Cross(wA, this.m_rA);\r\n              const Cdot1 = b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, this.m_rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, this.m_rA, b2Vec2.s_t1), b2WeldJoint.SolveVelocityConstraints_s_Cdot1);\r\n              const Cdot2 = wB - wA;\r\n              // b2Vec3 const Cdot(Cdot1.x, Cdot1.y, Cdot2);\r\n              // b2Vec3 impulse = -b2Mul(m_mass, Cdot);\r\n              const impulse = b2Mat33.MulM33XYZ(this.m_mass, Cdot1.x, Cdot1.y, Cdot2, b2WeldJoint.SolveVelocityConstraints_s_impulse).SelfNeg();\r\n              this.m_impulse.SelfAdd(impulse);\r\n              // b2Vec2 P(impulse.x, impulse.y);\r\n              const P = b2WeldJoint.SolveVelocityConstraints_s_P.Set(impulse.x, impulse.y);\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          const cA = data.positions[this.m_indexA].c;\r\n          let aA = data.positions[this.m_indexA].a;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          let aB = data.positions[this.m_indexB].a;\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          let positionError, angularError;\r\n          const K = this.m_K;\r\n          K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\r\n          K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\r\n          K.ez.x = -rA.y * iA - rB.y * iB;\r\n          K.ex.y = K.ey.x;\r\n          K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\r\n          K.ez.y = rA.x * iA + rB.x * iB;\r\n          K.ex.z = K.ez.x;\r\n          K.ey.z = K.ez.y;\r\n          K.ez.z = iA + iB;\r\n          if (this.m_frequencyHz > 0) {\r\n              // b2Vec2 C1 =  cB + rB - cA - rA;\r\n              const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n              positionError = C1.Length();\r\n              angularError = 0;\r\n              // b2Vec2 P = -K.Solve22(C1);\r\n              const P = K.Solve22(C1.x, C1.y, b2WeldJoint.SolvePositionConstraints_s_P).SelfNeg();\r\n              // cA -= mA * P;\r\n              cA.SelfMulSub(mA, P);\r\n              aA -= iA * b2Vec2.CrossVV(rA, P);\r\n              // cB += mB * P;\r\n              cB.SelfMulAdd(mB, P);\r\n              aB += iB * b2Vec2.CrossVV(rB, P);\r\n          }\r\n          else {\r\n              // b2Vec2 C1 =  cB + rB - cA - rA;\r\n              const C1 = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WeldJoint.SolvePositionConstraints_s_C1);\r\n              const C2 = aB - aA - this.m_referenceAngle;\r\n              positionError = C1.Length();\r\n              angularError = b2Abs(C2);\r\n              // b2Vec3 C(C1.x, C1.y, C2);\r\n              // b2Vec3 impulse = -K.Solve33(C);\r\n              const impulse = K.Solve33(C1.x, C1.y, C2, b2WeldJoint.SolvePositionConstraints_s_impulse).SelfNeg();\r\n              // b2Vec2 P(impulse.x, impulse.y);\r\n              const P = b2WeldJoint.SolvePositionConstraints_s_P.Set(impulse.x, impulse.y);\r\n              // cA -= mA * P;\r\n              cA.SelfMulSub(mA, P);\r\n              aA -= iA * (b2Vec2.CrossVV(this.m_rA, P) + impulse.z);\r\n              // cB += mB * P;\r\n              cB.SelfMulAdd(mB, P);\r\n              aB += iB * (b2Vec2.CrossVV(this.m_rB, P) + impulse.z);\r\n          }\r\n          // data.positions[this.m_indexA].c = cA;\r\n          data.positions[this.m_indexA].a = aA;\r\n          // data.positions[this.m_indexB].c = cB;\r\n          data.positions[this.m_indexB].a = aB;\r\n          return positionError <= b2_linearSlop && angularError <= b2_angularSlop;\r\n      }\r\n      GetAnchorA(out) {\r\n          return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          // b2Vec2 P(this.m_impulse.x, this.m_impulse.y);\r\n          // return inv_dt * P;\r\n          out.x = inv_dt * this.m_impulse.x;\r\n          out.y = inv_dt * this.m_impulse.y;\r\n          return out;\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return inv_dt * this.m_impulse.z;\r\n      }\r\n      GetLocalAnchorA() { return this.m_localAnchorA; }\r\n      GetLocalAnchorB() { return this.m_localAnchorB; }\r\n      GetReferenceAngle() { return this.m_referenceAngle; }\r\n      SetFrequency(hz) { this.m_frequencyHz = hz; }\r\n      GetFrequency() { return this.m_frequencyHz; }\r\n      SetDampingRatio(ratio) { this.m_dampingRatio = ratio; }\r\n      GetDampingRatio() { return this.m_dampingRatio; }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          log(\"  const jd: b2WeldJointDef = new b2WeldJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n          log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n          log(\"  jd.referenceAngle = %.15f;\\n\", this.m_referenceAngle);\r\n          log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n          log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n  }\r\n  b2WeldJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\n  b2WeldJoint.SolveVelocityConstraints_s_Cdot1 = new b2Vec2();\r\n  b2WeldJoint.SolveVelocityConstraints_s_impulse1 = new b2Vec2();\r\n  b2WeldJoint.SolveVelocityConstraints_s_impulse = new b2Vec3();\r\n  b2WeldJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\n  b2WeldJoint.SolvePositionConstraints_s_C1 = new b2Vec2();\r\n  b2WeldJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n  b2WeldJoint.SolvePositionConstraints_s_impulse = new b2Vec3();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Wheel joint definition. This requires defining a line of\r\n  /// motion using an axis and an anchor point. The definition uses local\r\n  /// anchor points and a local axis so that the initial configuration\r\n  /// can violate the constraint slightly. The joint translation is zero\r\n  /// when the local anchor points coincide in world space. Using local\r\n  /// anchors and a local axis helps when saving and loading a game.\r\n  class b2WheelJointDef extends b2JointDef {\r\n      constructor() {\r\n          super(exports.b2JointType.e_wheelJoint);\r\n          this.localAnchorA = new b2Vec2(0, 0);\r\n          this.localAnchorB = new b2Vec2(0, 0);\r\n          this.localAxisA = new b2Vec2(1, 0);\r\n          this.enableMotor = false;\r\n          this.maxMotorTorque = 0;\r\n          this.motorSpeed = 0;\r\n          this.frequencyHz = 2;\r\n          this.dampingRatio = 0.7;\r\n      }\r\n      Initialize(bA, bB, anchor, axis) {\r\n          this.bodyA = bA;\r\n          this.bodyB = bB;\r\n          this.bodyA.GetLocalPoint(anchor, this.localAnchorA);\r\n          this.bodyB.GetLocalPoint(anchor, this.localAnchorB);\r\n          this.bodyA.GetLocalVector(axis, this.localAxisA);\r\n      }\r\n  }\r\n  class b2WheelJoint extends b2Joint {\r\n      constructor(def) {\r\n          super(def);\r\n          this.m_frequencyHz = 0;\r\n          this.m_dampingRatio = 0;\r\n          // Solver shared\r\n          this.m_localAnchorA = new b2Vec2();\r\n          this.m_localAnchorB = new b2Vec2();\r\n          this.m_localXAxisA = new b2Vec2();\r\n          this.m_localYAxisA = new b2Vec2();\r\n          this.m_impulse = 0;\r\n          this.m_motorImpulse = 0;\r\n          this.m_springImpulse = 0;\r\n          this.m_maxMotorTorque = 0;\r\n          this.m_motorSpeed = 0;\r\n          this.m_enableMotor = false;\r\n          // Solver temp\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_localCenterA = new b2Vec2();\r\n          this.m_localCenterB = new b2Vec2();\r\n          this.m_invMassA = 0;\r\n          this.m_invMassB = 0;\r\n          this.m_invIA = 0;\r\n          this.m_invIB = 0;\r\n          this.m_ax = new b2Vec2();\r\n          this.m_ay = new b2Vec2();\r\n          this.m_sAx = 0;\r\n          this.m_sBx = 0;\r\n          this.m_sAy = 0;\r\n          this.m_sBy = 0;\r\n          this.m_mass = 0;\r\n          this.m_motorMass = 0;\r\n          this.m_springMass = 0;\r\n          this.m_bias = 0;\r\n          this.m_gamma = 0;\r\n          this.m_qA = new b2Rot();\r\n          this.m_qB = new b2Rot();\r\n          this.m_lalcA = new b2Vec2();\r\n          this.m_lalcB = new b2Vec2();\r\n          this.m_rA = new b2Vec2();\r\n          this.m_rB = new b2Vec2();\r\n          this.m_frequencyHz = b2Maybe(def.frequencyHz, 2);\r\n          this.m_dampingRatio = b2Maybe(def.dampingRatio, 0.7);\r\n          this.m_localAnchorA.Copy(b2Maybe(def.localAnchorA, b2Vec2.ZERO));\r\n          this.m_localAnchorB.Copy(b2Maybe(def.localAnchorB, b2Vec2.ZERO));\r\n          this.m_localXAxisA.Copy(b2Maybe(def.localAxisA, b2Vec2.UNITX));\r\n          b2Vec2.CrossOneV(this.m_localXAxisA, this.m_localYAxisA);\r\n          this.m_maxMotorTorque = b2Maybe(def.maxMotorTorque, 0);\r\n          this.m_motorSpeed = b2Maybe(def.motorSpeed, 0);\r\n          this.m_enableMotor = b2Maybe(def.enableMotor, false);\r\n          this.m_ax.SetZero();\r\n          this.m_ay.SetZero();\r\n      }\r\n      GetMotorSpeed() {\r\n          return this.m_motorSpeed;\r\n      }\r\n      GetMaxMotorTorque() {\r\n          return this.m_maxMotorTorque;\r\n      }\r\n      SetSpringFrequencyHz(hz) {\r\n          this.m_frequencyHz = hz;\r\n      }\r\n      GetSpringFrequencyHz() {\r\n          return this.m_frequencyHz;\r\n      }\r\n      SetSpringDampingRatio(ratio) {\r\n          this.m_dampingRatio = ratio;\r\n      }\r\n      GetSpringDampingRatio() {\r\n          return this.m_dampingRatio;\r\n      }\r\n      InitVelocityConstraints(data) {\r\n          this.m_indexA = this.m_bodyA.m_islandIndex;\r\n          this.m_indexB = this.m_bodyB.m_islandIndex;\r\n          this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);\r\n          this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);\r\n          this.m_invMassA = this.m_bodyA.m_invMass;\r\n          this.m_invMassB = this.m_bodyB.m_invMass;\r\n          this.m_invIA = this.m_bodyA.m_invI;\r\n          this.m_invIB = this.m_bodyB.m_invI;\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          const cA = data.positions[this.m_indexA].c;\r\n          const aA = data.positions[this.m_indexA].a;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          const aB = data.positions[this.m_indexB].a;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // Compute the effective masses.\r\n          // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // b2Vec2 d = cB + rB - cA - rA;\r\n          const d = b2Vec2.SubVV(b2Vec2.AddVV(cB, rB, b2Vec2.s_t0), b2Vec2.AddVV(cA, rA, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_d);\r\n          // Point to line constraint\r\n          {\r\n              // m_ay = b2Mul(qA, m_localYAxisA);\r\n              b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n              // m_sAy = b2Cross(d + rA, m_ay);\r\n              this.m_sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ay);\r\n              // m_sBy = b2Cross(rB, m_ay);\r\n              this.m_sBy = b2Vec2.CrossVV(rB, this.m_ay);\r\n              this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy * this.m_sBy;\r\n              if (this.m_mass > 0) {\r\n                  this.m_mass = 1 / this.m_mass;\r\n              }\r\n          }\r\n          // Spring constraint\r\n          this.m_springMass = 0;\r\n          this.m_bias = 0;\r\n          this.m_gamma = 0;\r\n          if (this.m_frequencyHz > 0) {\r\n              // m_ax = b2Mul(qA, m_localXAxisA);\r\n              b2Rot.MulRV(qA, this.m_localXAxisA, this.m_ax);\r\n              // m_sAx = b2Cross(d + rA, m_ax);\r\n              this.m_sAx = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), this.m_ax);\r\n              // m_sBx = b2Cross(rB, m_ax);\r\n              this.m_sBx = b2Vec2.CrossVV(rB, this.m_ax);\r\n              const invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx * this.m_sBx;\r\n              if (invMass > 0) {\r\n                  this.m_springMass = 1 / invMass;\r\n                  const C = b2Vec2.DotVV(d, this.m_ax);\r\n                  // Frequency\r\n                  const omega = 2 * b2_pi * this.m_frequencyHz;\r\n                  // Damping coefficient\r\n                  const damp = 2 * this.m_springMass * this.m_dampingRatio * omega;\r\n                  // Spring stiffness\r\n                  const k = this.m_springMass * omega * omega;\r\n                  // magic formulas\r\n                  const h = data.step.dt;\r\n                  this.m_gamma = h * (damp + h * k);\r\n                  if (this.m_gamma > 0) {\r\n                      this.m_gamma = 1 / this.m_gamma;\r\n                  }\r\n                  this.m_bias = C * h * k * this.m_gamma;\r\n                  this.m_springMass = invMass + this.m_gamma;\r\n                  if (this.m_springMass > 0) {\r\n                      this.m_springMass = 1 / this.m_springMass;\r\n                  }\r\n              }\r\n          }\r\n          else {\r\n              this.m_springImpulse = 0;\r\n          }\r\n          // Rotational motor\r\n          if (this.m_enableMotor) {\r\n              this.m_motorMass = iA + iB;\r\n              if (this.m_motorMass > 0) {\r\n                  this.m_motorMass = 1 / this.m_motorMass;\r\n              }\r\n          }\r\n          else {\r\n              this.m_motorMass = 0;\r\n              this.m_motorImpulse = 0;\r\n          }\r\n          if (data.step.warmStarting) {\r\n              // Account for variable time step.\r\n              this.m_impulse *= data.step.dtRatio;\r\n              this.m_springImpulse *= data.step.dtRatio;\r\n              this.m_motorImpulse *= data.step.dtRatio;\r\n              // b2Vec2 P = m_impulse * m_ay + m_springImpulse * m_ax;\r\n              const P = b2Vec2.AddVV(b2Vec2.MulSV(this.m_impulse, this.m_ay, b2Vec2.s_t0), b2Vec2.MulSV(this.m_springImpulse, this.m_ax, b2Vec2.s_t1), b2WheelJoint.InitVelocityConstraints_s_P);\r\n              // float32 LA = m_impulse * m_sAy + m_springImpulse * m_sAx + m_motorImpulse;\r\n              const LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\r\n              // float32 LB = m_impulse * m_sBy + m_springImpulse * m_sBx + m_motorImpulse;\r\n              const LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\r\n              // vA -= m_invMassA * P;\r\n              vA.SelfMulSub(this.m_invMassA, P);\r\n              wA -= this.m_invIA * LA;\r\n              // vB += m_invMassB * P;\r\n              vB.SelfMulAdd(this.m_invMassB, P);\r\n              wB += this.m_invIB * LB;\r\n          }\r\n          else {\r\n              this.m_impulse = 0;\r\n              this.m_springImpulse = 0;\r\n              this.m_motorImpulse = 0;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolveVelocityConstraints(data) {\r\n          const mA = this.m_invMassA, mB = this.m_invMassB;\r\n          const iA = this.m_invIA, iB = this.m_invIB;\r\n          const vA = data.velocities[this.m_indexA].v;\r\n          let wA = data.velocities[this.m_indexA].w;\r\n          const vB = data.velocities[this.m_indexB].v;\r\n          let wB = data.velocities[this.m_indexB].w;\r\n          // Solve spring constraint\r\n          {\r\n              const Cdot = b2Vec2.DotVV(this.m_ax, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBx * wB - this.m_sAx * wA;\r\n              const impulse = -this.m_springMass * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse);\r\n              this.m_springImpulse += impulse;\r\n              // b2Vec2 P = impulse * m_ax;\r\n              const P = b2Vec2.MulSV(impulse, this.m_ax, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n              const LA = impulse * this.m_sAx;\r\n              const LB = impulse * this.m_sBx;\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * LA;\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * LB;\r\n          }\r\n          // Solve rotational motor constraint\r\n          {\r\n              const Cdot = wB - wA - this.m_motorSpeed;\r\n              let impulse = -this.m_motorMass * Cdot;\r\n              const oldImpulse = this.m_motorImpulse;\r\n              const maxImpulse = data.step.dt * this.m_maxMotorTorque;\r\n              this.m_motorImpulse = b2Clamp(this.m_motorImpulse + impulse, -maxImpulse, maxImpulse);\r\n              impulse = this.m_motorImpulse - oldImpulse;\r\n              wA -= iA * impulse;\r\n              wB += iB * impulse;\r\n          }\r\n          // Solve point to line constraint\r\n          {\r\n              const Cdot = b2Vec2.DotVV(this.m_ay, b2Vec2.SubVV(vB, vA, b2Vec2.s_t0)) + this.m_sBy * wB - this.m_sAy * wA;\r\n              const impulse = -this.m_mass * Cdot;\r\n              this.m_impulse += impulse;\r\n              // b2Vec2 P = impulse * m_ay;\r\n              const P = b2Vec2.MulSV(impulse, this.m_ay, b2WheelJoint.SolveVelocityConstraints_s_P);\r\n              const LA = impulse * this.m_sAy;\r\n              const LB = impulse * this.m_sBy;\r\n              // vA -= mA * P;\r\n              vA.SelfMulSub(mA, P);\r\n              wA -= iA * LA;\r\n              // vB += mB * P;\r\n              vB.SelfMulAdd(mB, P);\r\n              wB += iB * LB;\r\n          }\r\n          // data.velocities[this.m_indexA].v = vA;\r\n          data.velocities[this.m_indexA].w = wA;\r\n          // data.velocities[this.m_indexB].v = vB;\r\n          data.velocities[this.m_indexB].w = wB;\r\n      }\r\n      SolvePositionConstraints(data) {\r\n          const cA = data.positions[this.m_indexA].c;\r\n          let aA = data.positions[this.m_indexA].a;\r\n          const cB = data.positions[this.m_indexB].c;\r\n          let aB = data.positions[this.m_indexB].a;\r\n          const qA = this.m_qA.SetAngle(aA), qB = this.m_qB.SetAngle(aB);\r\n          // b2Vec2 rA = b2Mul(qA, m_localAnchorA - m_localCenterA);\r\n          b2Vec2.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);\r\n          const rA = b2Rot.MulRV(qA, this.m_lalcA, this.m_rA);\r\n          // b2Vec2 rB = b2Mul(qB, m_localAnchorB - m_localCenterB);\r\n          b2Vec2.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);\r\n          const rB = b2Rot.MulRV(qB, this.m_lalcB, this.m_rB);\r\n          // b2Vec2 d = (cB - cA) + rB - rA;\r\n          const d = b2Vec2.AddVV(b2Vec2.SubVV(cB, cA, b2Vec2.s_t0), b2Vec2.SubVV(rB, rA, b2Vec2.s_t1), b2WheelJoint.SolvePositionConstraints_s_d);\r\n          // b2Vec2 ay = b2Mul(qA, m_localYAxisA);\r\n          const ay = b2Rot.MulRV(qA, this.m_localYAxisA, this.m_ay);\r\n          // float32 sAy = b2Cross(d + rA, ay);\r\n          const sAy = b2Vec2.CrossVV(b2Vec2.AddVV(d, rA, b2Vec2.s_t0), ay);\r\n          // float32 sBy = b2Cross(rB, ay);\r\n          const sBy = b2Vec2.CrossVV(rB, ay);\r\n          // float32 C = b2Dot(d, ay);\r\n          const C = b2Vec2.DotVV(d, this.m_ay);\r\n          const k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy;\r\n          let impulse;\r\n          if (k !== 0) {\r\n              impulse = -C / k;\r\n          }\r\n          else {\r\n              impulse = 0;\r\n          }\r\n          // b2Vec2 P = impulse * ay;\r\n          const P = b2Vec2.MulSV(impulse, ay, b2WheelJoint.SolvePositionConstraints_s_P);\r\n          const LA = impulse * sAy;\r\n          const LB = impulse * sBy;\r\n          // cA -= m_invMassA * P;\r\n          cA.SelfMulSub(this.m_invMassA, P);\r\n          aA -= this.m_invIA * LA;\r\n          // cB += m_invMassB * P;\r\n          cB.SelfMulAdd(this.m_invMassB, P);\r\n          aB += this.m_invIB * LB;\r\n          // data.positions[this.m_indexA].c = cA;\r\n          data.positions[this.m_indexA].a = aA;\r\n          // data.positions[this.m_indexB].c = cB;\r\n          data.positions[this.m_indexB].a = aB;\r\n          return b2Abs(C) <= b2_linearSlop;\r\n      }\r\n      GetDefinition(def) {\r\n          // DEBUG: b2Assert(false); // TODO\r\n          return def;\r\n      }\r\n      GetAnchorA(out) {\r\n          return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, out);\r\n      }\r\n      GetAnchorB(out) {\r\n          return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, out);\r\n      }\r\n      GetReactionForce(inv_dt, out) {\r\n          // return inv_dt * (m_impulse * m_ay + m_springImpulse * m_ax);\r\n          out.x = inv_dt * (this.m_impulse * this.m_ay.x + this.m_springImpulse * this.m_ax.x);\r\n          out.y = inv_dt * (this.m_impulse * this.m_ay.y + this.m_springImpulse * this.m_ax.y);\r\n          return out;\r\n      }\r\n      GetReactionTorque(inv_dt) {\r\n          return inv_dt * this.m_motorImpulse;\r\n      }\r\n      GetLocalAnchorA() { return this.m_localAnchorA; }\r\n      GetLocalAnchorB() { return this.m_localAnchorB; }\r\n      GetLocalAxisA() { return this.m_localXAxisA; }\r\n      GetJointTranslation() {\r\n          return this.GetPrismaticJointTranslation();\r\n      }\r\n      GetJointLinearSpeed() {\r\n          return this.GetPrismaticJointSpeed();\r\n      }\r\n      GetJointAngle() {\r\n          return this.GetRevoluteJointAngle();\r\n      }\r\n      GetJointAngularSpeed() {\r\n          return this.GetRevoluteJointSpeed();\r\n      }\r\n      GetPrismaticJointTranslation() {\r\n          const bA = this.m_bodyA;\r\n          const bB = this.m_bodyB;\r\n          const pA = bA.GetWorldPoint(this.m_localAnchorA, new b2Vec2());\r\n          const pB = bB.GetWorldPoint(this.m_localAnchorB, new b2Vec2());\r\n          const d = b2Vec2.SubVV(pB, pA, new b2Vec2());\r\n          const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n          const translation = b2Vec2.DotVV(d, axis);\r\n          return translation;\r\n      }\r\n      GetPrismaticJointSpeed() {\r\n          const bA = this.m_bodyA;\r\n          const bB = this.m_bodyB;\r\n          // b2Vec2 rA = b2Mul(bA->m_xf.q, m_localAnchorA - bA->m_sweep.localCenter);\r\n          b2Vec2.SubVV(this.m_localAnchorA, bA.m_sweep.localCenter, this.m_lalcA);\r\n          const rA = b2Rot.MulRV(bA.m_xf.q, this.m_lalcA, this.m_rA);\r\n          // b2Vec2 rB = b2Mul(bB->m_xf.q, m_localAnchorB - bB->m_sweep.localCenter);\r\n          b2Vec2.SubVV(this.m_localAnchorB, bB.m_sweep.localCenter, this.m_lalcB);\r\n          const rB = b2Rot.MulRV(bB.m_xf.q, this.m_lalcB, this.m_rB);\r\n          // b2Vec2 pA = bA->m_sweep.c + rA;\r\n          const pA = b2Vec2.AddVV(bA.m_sweep.c, rA, b2Vec2.s_t0); // pA uses s_t0\r\n          // b2Vec2 pB = bB->m_sweep.c + rB;\r\n          const pB = b2Vec2.AddVV(bB.m_sweep.c, rB, b2Vec2.s_t1); // pB uses s_t1\r\n          // b2Vec2 d = pB - pA;\r\n          const d = b2Vec2.SubVV(pB, pA, b2Vec2.s_t2); // d uses s_t2\r\n          // b2Vec2 axis = b2Mul(bA.m_xf.q, m_localXAxisA);\r\n          const axis = bA.GetWorldVector(this.m_localXAxisA, new b2Vec2());\r\n          const vA = bA.m_linearVelocity;\r\n          const vB = bB.m_linearVelocity;\r\n          const wA = bA.m_angularVelocity;\r\n          const wB = bB.m_angularVelocity;\r\n          // float32 speed = b2Dot(d, b2Cross(wA, axis)) + b2Dot(axis, vB + b2Cross(wB, rB) - vA - b2Cross(wA, rA));\r\n          const speed = b2Vec2.DotVV(d, b2Vec2.CrossSV(wA, axis, b2Vec2.s_t0)) +\r\n              b2Vec2.DotVV(axis, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n          return speed;\r\n      }\r\n      GetRevoluteJointAngle() {\r\n          // b2Body* bA = this.m_bodyA;\r\n          // b2Body* bB = this.m_bodyB;\r\n          // return bB->this.m_sweep.a - bA->this.m_sweep.a;\r\n          return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a;\r\n      }\r\n      GetRevoluteJointSpeed() {\r\n          const wA = this.m_bodyA.m_angularVelocity;\r\n          const wB = this.m_bodyB.m_angularVelocity;\r\n          return wB - wA;\r\n      }\r\n      IsMotorEnabled() {\r\n          return this.m_enableMotor;\r\n      }\r\n      EnableMotor(flag) {\r\n          if (flag !== this.m_enableMotor) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_enableMotor = flag;\r\n          }\r\n      }\r\n      SetMotorSpeed(speed) {\r\n          if (speed !== this.m_motorSpeed) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_motorSpeed = speed;\r\n          }\r\n      }\r\n      SetMaxMotorTorque(force) {\r\n          if (force !== this.m_maxMotorTorque) {\r\n              this.m_bodyA.SetAwake(true);\r\n              this.m_bodyB.SetAwake(true);\r\n              this.m_maxMotorTorque = force;\r\n          }\r\n      }\r\n      GetMotorTorque(inv_dt) {\r\n          return inv_dt * this.m_motorImpulse;\r\n      }\r\n      Dump(log) {\r\n          const indexA = this.m_bodyA.m_islandIndex;\r\n          const indexB = this.m_bodyB.m_islandIndex;\r\n          log(\"  const jd: b2WheelJointDef = new b2WheelJointDef();\\n\");\r\n          log(\"  jd.bodyA = bodies[%d];\\n\", indexA);\r\n          log(\"  jd.bodyB = bodies[%d];\\n\", indexB);\r\n          log(\"  jd.collideConnected = %s;\\n\", (this.m_collideConnected) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.localAnchorA.Set(%.15f, %.15f);\\n\", this.m_localAnchorA.x, this.m_localAnchorA.y);\r\n          log(\"  jd.localAnchorB.Set(%.15f, %.15f);\\n\", this.m_localAnchorB.x, this.m_localAnchorB.y);\r\n          log(\"  jd.localAxisA.Set(%.15f, %.15f);\\n\", this.m_localXAxisA.x, this.m_localXAxisA.y);\r\n          log(\"  jd.enableMotor = %s;\\n\", (this.m_enableMotor) ? (\"true\") : (\"false\"));\r\n          log(\"  jd.motorSpeed = %.15f;\\n\", this.m_motorSpeed);\r\n          log(\"  jd.maxMotorTorque = %.15f;\\n\", this.m_maxMotorTorque);\r\n          log(\"  jd.frequencyHz = %.15f;\\n\", this.m_frequencyHz);\r\n          log(\"  jd.dampingRatio = %.15f;\\n\", this.m_dampingRatio);\r\n          log(\"  joints[%d] = this.m_world.CreateJoint(jd);\\n\", this.m_index);\r\n      }\r\n  }\r\n  b2WheelJoint.InitVelocityConstraints_s_d = new b2Vec2();\r\n  b2WheelJoint.InitVelocityConstraints_s_P = new b2Vec2();\r\n  b2WheelJoint.SolveVelocityConstraints_s_P = new b2Vec2();\r\n  b2WheelJoint.SolvePositionConstraints_s_d = new b2Vec2();\r\n  b2WheelJoint.SolvePositionConstraints_s_P = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Friction mixing law. The idea is to allow either fixture to drive the friction to zero.\r\n  /// For example, anything slides on ice.\r\n  function b2MixFriction(friction1, friction2) {\r\n      return b2Sqrt(friction1 * friction2);\r\n  }\r\n  /// Restitution mixing law. The idea is allow for anything to bounce off an inelastic surface.\r\n  /// For example, a superball bounces on anything.\r\n  function b2MixRestitution(restitution1, restitution2) {\r\n      return restitution1 > restitution2 ? restitution1 : restitution2;\r\n  }\r\n  class b2ContactEdge {\r\n      constructor(contact) {\r\n          this.prev = null; ///< the previous contact edge in the body's contact list\r\n          this.next = null; ///< the next contact edge in the body's contact list\r\n          this.contact = contact;\r\n      }\r\n  }\r\n  class b2Contact {\r\n      constructor() {\r\n          this.m_islandFlag = false; /// Used when crawling contact graph when forming islands.\r\n          this.m_touchingFlag = false; /// Set when the shapes are touching.\r\n          this.m_enabledFlag = false; /// This contact can be disabled (by user)\r\n          this.m_filterFlag = false; /// This contact needs filtering because a fixture filter was changed.\r\n          this.m_bulletHitFlag = false; /// This bullet contact had a TOI event\r\n          this.m_toiFlag = false; /// This contact has a valid TOI in m_toi\r\n          this.m_prev = null;\r\n          this.m_next = null;\r\n          this.m_indexA = 0;\r\n          this.m_indexB = 0;\r\n          this.m_manifold = new b2Manifold(); // TODO: readonly\r\n          this.m_toiCount = 0;\r\n          this.m_toi = 0;\r\n          this.m_friction = 0;\r\n          this.m_restitution = 0;\r\n          this.m_tangentSpeed = 0;\r\n          this.m_oldManifold = new b2Manifold(); // TODO: readonly\r\n          this.m_nodeA = new b2ContactEdge(this);\r\n          this.m_nodeB = new b2ContactEdge(this);\r\n      }\r\n      GetManifold() {\r\n          return this.m_manifold;\r\n      }\r\n      GetWorldManifold(worldManifold) {\r\n          const bodyA = this.m_fixtureA.GetBody();\r\n          const bodyB = this.m_fixtureB.GetBody();\r\n          const shapeA = this.m_fixtureA.GetShape();\r\n          const shapeB = this.m_fixtureB.GetShape();\r\n          worldManifold.Initialize(this.m_manifold, bodyA.GetTransform(), shapeA.m_radius, bodyB.GetTransform(), shapeB.m_radius);\r\n      }\r\n      IsTouching() {\r\n          return this.m_touchingFlag;\r\n      }\r\n      SetEnabled(flag) {\r\n          this.m_enabledFlag = flag;\r\n      }\r\n      IsEnabled() {\r\n          return this.m_enabledFlag;\r\n      }\r\n      GetNext() {\r\n          return this.m_next;\r\n      }\r\n      GetFixtureA() {\r\n          return this.m_fixtureA;\r\n      }\r\n      GetChildIndexA() {\r\n          return this.m_indexA;\r\n      }\r\n      GetFixtureB() {\r\n          return this.m_fixtureB;\r\n      }\r\n      GetChildIndexB() {\r\n          return this.m_indexB;\r\n      }\r\n      FlagForFiltering() {\r\n          this.m_filterFlag = true;\r\n      }\r\n      SetFriction(friction) {\r\n          this.m_friction = friction;\r\n      }\r\n      GetFriction() {\r\n          return this.m_friction;\r\n      }\r\n      ResetFriction() {\r\n          this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n      }\r\n      SetRestitution(restitution) {\r\n          this.m_restitution = restitution;\r\n      }\r\n      GetRestitution() {\r\n          return this.m_restitution;\r\n      }\r\n      ResetRestitution() {\r\n          this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n      }\r\n      SetTangentSpeed(speed) {\r\n          this.m_tangentSpeed = speed;\r\n      }\r\n      GetTangentSpeed() {\r\n          return this.m_tangentSpeed;\r\n      }\r\n      Reset(fixtureA, indexA, fixtureB, indexB) {\r\n          this.m_islandFlag = false;\r\n          this.m_touchingFlag = false;\r\n          this.m_enabledFlag = true;\r\n          this.m_filterFlag = false;\r\n          this.m_bulletHitFlag = false;\r\n          this.m_toiFlag = false;\r\n          this.m_fixtureA = fixtureA;\r\n          this.m_fixtureB = fixtureB;\r\n          this.m_indexA = indexA;\r\n          this.m_indexB = indexB;\r\n          this.m_manifold.pointCount = 0;\r\n          this.m_prev = null;\r\n          this.m_next = null;\r\n          delete this.m_nodeA.contact; // = null;\r\n          this.m_nodeA.prev = null;\r\n          this.m_nodeA.next = null;\r\n          delete this.m_nodeA.other; // = null;\r\n          delete this.m_nodeB.contact; // = null;\r\n          this.m_nodeB.prev = null;\r\n          this.m_nodeB.next = null;\r\n          delete this.m_nodeB.other; // = null;\r\n          this.m_toiCount = 0;\r\n          this.m_friction = b2MixFriction(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);\r\n          this.m_restitution = b2MixRestitution(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);\r\n      }\r\n      Update(listener) {\r\n          const tManifold = this.m_oldManifold;\r\n          this.m_oldManifold = this.m_manifold;\r\n          this.m_manifold = tManifold;\r\n          // Re-enable this contact.\r\n          this.m_enabledFlag = true;\r\n          let touching = false;\r\n          const wasTouching = this.m_touchingFlag;\r\n          const sensorA = this.m_fixtureA.IsSensor();\r\n          const sensorB = this.m_fixtureB.IsSensor();\r\n          const sensor = sensorA || sensorB;\r\n          const bodyA = this.m_fixtureA.GetBody();\r\n          const bodyB = this.m_fixtureB.GetBody();\r\n          const xfA = bodyA.GetTransform();\r\n          const xfB = bodyB.GetTransform();\r\n          ///const aabbOverlap = b2TestOverlapAABB(this.m_fixtureA.GetAABB(0), this.m_fixtureB.GetAABB(0));\r\n          // Is this contact a sensor?\r\n          if (sensor) {\r\n              ///if (aabbOverlap)\r\n              ///{\r\n              const shapeA = this.m_fixtureA.GetShape();\r\n              const shapeB = this.m_fixtureB.GetShape();\r\n              touching = b2TestOverlapShape(shapeA, this.m_indexA, shapeB, this.m_indexB, xfA, xfB);\r\n              ///}\r\n              // Sensors don't generate manifolds.\r\n              this.m_manifold.pointCount = 0;\r\n          }\r\n          else {\r\n              ///if (aabbOverlap)\r\n              ///{\r\n              this.Evaluate(this.m_manifold, xfA, xfB);\r\n              touching = this.m_manifold.pointCount > 0;\r\n              // Match old contact ids to new contact ids and copy the\r\n              // stored impulses to warm start the solver.\r\n              for (let i = 0; i < this.m_manifold.pointCount; ++i) {\r\n                  const mp2 = this.m_manifold.points[i];\r\n                  mp2.normalImpulse = 0;\r\n                  mp2.tangentImpulse = 0;\r\n                  const id2 = mp2.id;\r\n                  for (let j = 0; j < this.m_oldManifold.pointCount; ++j) {\r\n                      const mp1 = this.m_oldManifold.points[j];\r\n                      if (mp1.id.key === id2.key) {\r\n                          mp2.normalImpulse = mp1.normalImpulse;\r\n                          mp2.tangentImpulse = mp1.tangentImpulse;\r\n                          break;\r\n                      }\r\n                  }\r\n              }\r\n              ///}\r\n              ///else\r\n              ///{\r\n              ///  this.m_manifold.pointCount = 0;\r\n              ///}\r\n              if (touching !== wasTouching) {\r\n                  bodyA.SetAwake(true);\r\n                  bodyB.SetAwake(true);\r\n              }\r\n          }\r\n          this.m_touchingFlag = touching;\r\n          if (!wasTouching && touching && listener) {\r\n              listener.BeginContact(this);\r\n          }\r\n          if (wasTouching && !touching && listener) {\r\n              listener.EndContact(this);\r\n          }\r\n          if (!sensor && touching && listener) {\r\n              listener.PreSolve(this, this.m_oldManifold);\r\n          }\r\n      }\r\n      ComputeTOI(sweepA, sweepB) {\r\n          const input = b2Contact.ComputeTOI_s_input;\r\n          input.proxyA.SetShape(this.m_fixtureA.GetShape(), this.m_indexA);\r\n          input.proxyB.SetShape(this.m_fixtureB.GetShape(), this.m_indexB);\r\n          input.sweepA.Copy(sweepA);\r\n          input.sweepB.Copy(sweepB);\r\n          input.tMax = b2_linearSlop;\r\n          const output = b2Contact.ComputeTOI_s_output;\r\n          b2TimeOfImpact(output, input);\r\n          return output.t;\r\n      }\r\n  }\r\n  b2Contact.ComputeTOI_s_input = new b2TOIInput();\r\n  b2Contact.ComputeTOI_s_output = new b2TOIOutput();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2CircleContact extends b2Contact {\r\n      constructor() {\r\n          super();\r\n      }\r\n      static Create(allocator) {\r\n          return new b2CircleContact();\r\n      }\r\n      static Destroy(contact, allocator) {\r\n      }\r\n      Reset(fixtureA, indexA, fixtureB, indexB) {\r\n          super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n      }\r\n      Evaluate(manifold, xfA, xfB) {\r\n          const shapeA = this.m_fixtureA.GetShape();\r\n          const shapeB = this.m_fixtureB.GetShape();\r\n          // DEBUG: b2Assert(shapeA.GetType() === b2ShapeType.e_circleShape);\r\n          // DEBUG: b2Assert(shapeB.GetType() === b2ShapeType.e_circleShape);\r\n          b2CollideCircles(manifold, shapeA, xfA, shapeB, xfB);\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2PolygonContact extends b2Contact {\r\n      constructor() {\r\n          super();\r\n      }\r\n      static Create(allocator) {\r\n          return new b2PolygonContact();\r\n      }\r\n      static Destroy(contact, allocator) {\r\n      }\r\n      Reset(fixtureA, indexA, fixtureB, indexB) {\r\n          super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n      }\r\n      Evaluate(manifold, xfA, xfB) {\r\n          const shapeA = this.m_fixtureA.GetShape();\r\n          const shapeB = this.m_fixtureB.GetShape();\r\n          // DEBUG: b2Assert(shapeA.GetType() === b2ShapeType.e_polygonShape);\r\n          // DEBUG: b2Assert(shapeB.GetType() === b2ShapeType.e_polygonShape);\r\n          b2CollidePolygons(manifold, shapeA, xfA, shapeB, xfB);\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2PolygonAndCircleContact extends b2Contact {\r\n      constructor() {\r\n          super();\r\n      }\r\n      static Create(allocator) {\r\n          return new b2PolygonAndCircleContact();\r\n      }\r\n      static Destroy(contact, allocator) {\r\n      }\r\n      Reset(fixtureA, indexA, fixtureB, indexB) {\r\n          super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n          // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_polygonShape);\r\n          // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n      }\r\n      Evaluate(manifold, xfA, xfB) {\r\n          const shapeA = this.m_fixtureA.GetShape();\r\n          const shapeB = this.m_fixtureB.GetShape();\r\n          // DEBUG: b2Assert(shapeA instanceof b2PolygonShape);\r\n          // DEBUG: b2Assert(shapeB instanceof b2CircleShape);\r\n          b2CollidePolygonAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2EdgeAndCircleContact extends b2Contact {\r\n      constructor() {\r\n          super();\r\n      }\r\n      static Create(allocator) {\r\n          return new b2EdgeAndCircleContact();\r\n      }\r\n      static Destroy(contact, allocator) {\r\n      }\r\n      Reset(fixtureA, indexA, fixtureB, indexB) {\r\n          super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n          // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n          // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n      }\r\n      Evaluate(manifold, xfA, xfB) {\r\n          const shapeA = this.m_fixtureA.GetShape();\r\n          const shapeB = this.m_fixtureB.GetShape();\r\n          // DEBUG: b2Assert(shapeA instanceof b2EdgeShape);\r\n          // DEBUG: b2Assert(shapeB instanceof b2CircleShape);\r\n          b2CollideEdgeAndCircle(manifold, shapeA, xfA, shapeB, xfB);\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2EdgeAndPolygonContact extends b2Contact {\r\n      constructor() {\r\n          super();\r\n      }\r\n      static Create(allocator) {\r\n          return new b2EdgeAndPolygonContact();\r\n      }\r\n      static Destroy(contact, allocator) {\r\n      }\r\n      Reset(fixtureA, indexA, fixtureB, indexB) {\r\n          super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n          // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_edgeShape);\r\n          // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n      }\r\n      Evaluate(manifold, xfA, xfB) {\r\n          const shapeA = this.m_fixtureA.GetShape();\r\n          const shapeB = this.m_fixtureB.GetShape();\r\n          // DEBUG: b2Assert(shapeA instanceof b2EdgeShape);\r\n          // DEBUG: b2Assert(shapeB instanceof b2PolygonShape);\r\n          b2CollideEdgeAndPolygon(manifold, shapeA, xfA, shapeB, xfB);\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2ChainAndCircleContact extends b2Contact {\r\n      constructor() {\r\n          super();\r\n      }\r\n      static Create(allocator) {\r\n          return new b2ChainAndCircleContact();\r\n      }\r\n      static Destroy(contact, allocator) {\r\n      }\r\n      Reset(fixtureA, indexA, fixtureB, indexB) {\r\n          super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n          // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n          // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_circleShape);\r\n      }\r\n      Evaluate(manifold, xfA, xfB) {\r\n          const shapeA = this.m_fixtureA.GetShape();\r\n          const shapeB = this.m_fixtureB.GetShape();\r\n          // DEBUG: b2Assert(shapeA instanceof b2ChainShape);\r\n          // DEBUG: b2Assert(shapeB instanceof b2CircleShape);\r\n          const chain = shapeA;\r\n          const edge = b2ChainAndCircleContact.Evaluate_s_edge;\r\n          chain.GetChildEdge(edge, this.m_indexA);\r\n          b2CollideEdgeAndCircle(manifold, edge, xfA, shapeB, xfB);\r\n      }\r\n  }\r\n  b2ChainAndCircleContact.Evaluate_s_edge = new b2EdgeShape();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  class b2ChainAndPolygonContact extends b2Contact {\r\n      constructor() {\r\n          super();\r\n      }\r\n      static Create(allocator) {\r\n          return new b2ChainAndPolygonContact();\r\n      }\r\n      static Destroy(contact, allocator) {\r\n      }\r\n      Reset(fixtureA, indexA, fixtureB, indexB) {\r\n          super.Reset(fixtureA, indexA, fixtureB, indexB);\r\n          // DEBUG: b2Assert(fixtureA.GetType() === b2ShapeType.e_chainShape);\r\n          // DEBUG: b2Assert(fixtureB.GetType() === b2ShapeType.e_polygonShape);\r\n      }\r\n      Evaluate(manifold, xfA, xfB) {\r\n          const shapeA = this.m_fixtureA.GetShape();\r\n          const shapeB = this.m_fixtureB.GetShape();\r\n          // DEBUG: b2Assert(shapeA instanceof b2ChainShape);\r\n          // DEBUG: b2Assert(shapeB instanceof b2PolygonShape);\r\n          const chain = shapeA;\r\n          const edge = b2ChainAndPolygonContact.Evaluate_s_edge;\r\n          chain.GetChildEdge(edge, this.m_indexA);\r\n          b2CollideEdgeAndPolygon(manifold, edge, xfA, shapeB, xfB);\r\n      }\r\n  }\r\n  b2ChainAndPolygonContact.Evaluate_s_edge = new b2EdgeShape();\r\n\r\n  // DEBUG: import { b2Assert } from \"../../Common/b2Settings\";\r\n  class b2ContactRegister {\r\n      constructor() {\r\n          // public pool: b2Contact[];\r\n          this.createFcn = null;\r\n          this.destroyFcn = null;\r\n          this.primary = false;\r\n      }\r\n  }\r\n  class b2ContactFactory {\r\n      constructor(allocator) {\r\n          this.m_allocator = null;\r\n          this.m_allocator = allocator;\r\n          this.InitializeRegisters();\r\n      }\r\n      AddType(createFcn, destroyFcn, type1, type2) {\r\n          const pool = b2MakeArray(256, (i) => createFcn(this.m_allocator)); // TODO: b2Settings\r\n          function poolCreateFcn(allocator) {\r\n              // if (pool.length > 0) {\r\n              //   return pool.pop();\r\n              // }\r\n              // return createFcn(allocator);\r\n              return pool.pop() || createFcn(allocator);\r\n          }\r\n          function poolDestroyFcn(contact, allocator) {\r\n              pool.push(contact);\r\n          }\r\n          // this.m_registers[type1][type2].pool = pool;\r\n          this.m_registers[type1][type2].createFcn = poolCreateFcn;\r\n          this.m_registers[type1][type2].destroyFcn = poolDestroyFcn;\r\n          this.m_registers[type1][type2].primary = true;\r\n          if (type1 !== type2) {\r\n              // this.m_registers[type2][type1].pool = pool;\r\n              this.m_registers[type2][type1].createFcn = poolCreateFcn;\r\n              this.m_registers[type2][type1].destroyFcn = poolDestroyFcn;\r\n              this.m_registers[type2][type1].primary = false;\r\n          }\r\n          /*\r\n          this.m_registers[type1][type2].createFcn = createFcn;\r\n          this.m_registers[type1][type2].destroyFcn = destroyFcn;\r\n          this.m_registers[type1][type2].primary = true;\r\n      \r\n          if (type1 !== type2) {\r\n            this.m_registers[type2][type1].createFcn = createFcn;\r\n            this.m_registers[type2][type1].destroyFcn = destroyFcn;\r\n            this.m_registers[type2][type1].primary = false;\r\n          }\r\n          */\r\n      }\r\n      InitializeRegisters() {\r\n          this.m_registers = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n          for (let i = 0; i < exports.b2ShapeType.e_shapeTypeCount; i++) {\r\n              this.m_registers[i] = [ /*b2ShapeType.e_shapeTypeCount*/];\r\n              for (let j = 0; j < exports.b2ShapeType.e_shapeTypeCount; j++) {\r\n                  this.m_registers[i][j] = new b2ContactRegister();\r\n              }\r\n          }\r\n          this.AddType(b2CircleContact.Create, b2CircleContact.Destroy, exports.b2ShapeType.e_circleShape, exports.b2ShapeType.e_circleShape);\r\n          this.AddType(b2PolygonAndCircleContact.Create, b2PolygonAndCircleContact.Destroy, exports.b2ShapeType.e_polygonShape, exports.b2ShapeType.e_circleShape);\r\n          this.AddType(b2PolygonContact.Create, b2PolygonContact.Destroy, exports.b2ShapeType.e_polygonShape, exports.b2ShapeType.e_polygonShape);\r\n          this.AddType(b2EdgeAndCircleContact.Create, b2EdgeAndCircleContact.Destroy, exports.b2ShapeType.e_edgeShape, exports.b2ShapeType.e_circleShape);\r\n          this.AddType(b2EdgeAndPolygonContact.Create, b2EdgeAndPolygonContact.Destroy, exports.b2ShapeType.e_edgeShape, exports.b2ShapeType.e_polygonShape);\r\n          this.AddType(b2ChainAndCircleContact.Create, b2ChainAndCircleContact.Destroy, exports.b2ShapeType.e_chainShape, exports.b2ShapeType.e_circleShape);\r\n          this.AddType(b2ChainAndPolygonContact.Create, b2ChainAndPolygonContact.Destroy, exports.b2ShapeType.e_chainShape, exports.b2ShapeType.e_polygonShape);\r\n      }\r\n      Create(fixtureA, indexA, fixtureB, indexB) {\r\n          const type1 = fixtureA.GetType();\r\n          const type2 = fixtureB.GetType();\r\n          // DEBUG: b2Assert(0 <= type1 && type1 < b2ShapeType.e_shapeTypeCount);\r\n          // DEBUG: b2Assert(0 <= type2 && type2 < b2ShapeType.e_shapeTypeCount);\r\n          const reg = this.m_registers[type1][type2];\r\n          if (reg.createFcn) {\r\n              const c = reg.createFcn(this.m_allocator);\r\n              if (reg.primary) {\r\n                  c.Reset(fixtureA, indexA, fixtureB, indexB);\r\n              }\r\n              else {\r\n                  c.Reset(fixtureB, indexB, fixtureA, indexA);\r\n              }\r\n              return c;\r\n          }\r\n          else {\r\n              return null;\r\n          }\r\n      }\r\n      Destroy(contact) {\r\n          const fixtureA = contact.m_fixtureA;\r\n          const fixtureB = contact.m_fixtureB;\r\n          if (contact.m_manifold.pointCount > 0 &&\r\n              !fixtureA.IsSensor() &&\r\n              !fixtureB.IsSensor()) {\r\n              fixtureA.GetBody().SetAwake(true);\r\n              fixtureB.GetBody().SetAwake(true);\r\n          }\r\n          const typeA = fixtureA.GetType();\r\n          const typeB = fixtureB.GetType();\r\n          // DEBUG: b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n          // DEBUG: b2Assert(0 <= typeA && typeB < b2ShapeType.e_shapeTypeCount);\r\n          const reg = this.m_registers[typeA][typeB];\r\n          if (reg.destroyFcn) {\r\n              reg.destroyFcn(contact, this.m_allocator);\r\n          }\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  // #endif\r\n  /// Joints and fixtures are destroyed when their associated\r\n  /// body is destroyed. Implement this listener so that you\r\n  /// may nullify references to these joints and shapes.\r\n  class b2DestructionListener {\r\n      /// Called when any joint is about to be destroyed due\r\n      /// to the destruction of one of its attached bodies.\r\n      SayGoodbyeJoint(joint) { }\r\n      /// Called when any fixture is about to be destroyed due\r\n      /// to the destruction of its parent body.\r\n      SayGoodbyeFixture(fixture) { }\r\n      // #if B2_ENABLE_PARTICLE\r\n      /// Called when any particle group is about to be destroyed.\r\n      SayGoodbyeParticleGroup(group) { }\r\n      /// Called when a particle is about to be destroyed.\r\n      /// The index can be used in conjunction with\r\n      /// b2ParticleSystem::GetUserDataBuffer() or\r\n      /// b2ParticleSystem::GetParticleHandleFromIndex() to determine which\r\n      /// particle has been destroyed.\r\n      SayGoodbyeParticle(system, index) { }\r\n  }\r\n  /// Implement this class to provide collision filtering. In other words, you can implement\r\n  /// this class if you want finer control over contact creation.\r\n  class b2ContactFilter {\r\n      /// Return true if contact calculations should be performed between these two shapes.\r\n      /// @warning for performance reasons this is only called when the AABBs begin to overlap.\r\n      ShouldCollide(fixtureA, fixtureB) {\r\n          const bodyA = fixtureA.GetBody();\r\n          const bodyB = fixtureB.GetBody();\r\n          // At least one body should be dynamic or kinematic.\r\n          if (bodyB.GetType() === exports.b2BodyType.b2_staticBody && bodyA.GetType() === exports.b2BodyType.b2_staticBody) {\r\n              return false;\r\n          }\r\n          // Does a joint prevent collision?\r\n          if (!bodyB.ShouldCollideConnected(bodyA)) {\r\n              return false;\r\n          }\r\n          const filter1 = fixtureA.GetFilterData();\r\n          const filter2 = fixtureB.GetFilterData();\r\n          if (filter1.groupIndex === filter2.groupIndex && filter1.groupIndex !== 0) {\r\n              return (filter1.groupIndex > 0);\r\n          }\r\n          const collide = (((filter1.maskBits & filter2.categoryBits) !== 0) && ((filter1.categoryBits & filter2.maskBits) !== 0));\r\n          return collide;\r\n      }\r\n      // #if B2_ENABLE_PARTICLE\r\n      ShouldCollideFixtureParticle(fixture, system, index) {\r\n          return true;\r\n      }\r\n      ShouldCollideParticleParticle(system, indexA, indexB) {\r\n          return true;\r\n      }\r\n  }\r\n  // #endif\r\n  b2ContactFilter.b2_defaultFilter = new b2ContactFilter();\r\n  /// Contact impulses for reporting. Impulses are used instead of forces because\r\n  /// sub-step forces may approach infinity for rigid body collisions. These\r\n  /// match up one-to-one with the contact points in b2Manifold.\r\n  class b2ContactImpulse {\r\n      constructor() {\r\n          this.normalImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n          this.tangentImpulses = b2MakeNumberArray(b2_maxManifoldPoints);\r\n          this.count = 0;\r\n      }\r\n  }\r\n  /// Implement this class to get contact information. You can use these results for\r\n  /// things like sounds and game logic. You can also get contact results by\r\n  /// traversing the contact lists after the time step. However, you might miss\r\n  /// some contacts because continuous physics leads to sub-stepping.\r\n  /// Additionally you may receive multiple callbacks for the same contact in a\r\n  /// single time step.\r\n  /// You should strive to make your callbacks efficient because there may be\r\n  /// many callbacks per time step.\r\n  /// @warning You cannot create/destroy Box2D entities inside these callbacks.\r\n  class b2ContactListener {\r\n      /// Called when two fixtures begin to touch.\r\n      BeginContact(contact) { }\r\n      /// Called when two fixtures cease to touch.\r\n      EndContact(contact) { }\r\n      // #if B2_ENABLE_PARTICLE\r\n      BeginContactFixtureParticle(system, contact) { }\r\n      EndContactFixtureParticle(system, contact) { }\r\n      BeginContactParticleParticle(system, contact) { }\r\n      EndContactParticleParticle(system, contact) { }\r\n      // #endif\r\n      /// This is called after a contact is updated. This allows you to inspect a\r\n      /// contact before it goes to the solver. If you are careful, you can modify the\r\n      /// contact manifold (e.g. disable contact).\r\n      /// A copy of the old manifold is provided so that you can detect changes.\r\n      /// Note: this is called only for awake bodies.\r\n      /// Note: this is called even when the number of contact points is zero.\r\n      /// Note: this is not called for sensors.\r\n      /// Note: if you set the number of contact points to zero, you will not\r\n      /// get an EndContact callback. However, you may get a BeginContact callback\r\n      /// the next step.\r\n      PreSolve(contact, oldManifold) { }\r\n      /// This lets you inspect a contact after the solver is finished. This is useful\r\n      /// for inspecting impulses.\r\n      /// Note: the contact manifold does not include time of impact impulses, which can be\r\n      /// arbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\r\n      /// in a separate data structure.\r\n      /// Note: this is only called for contacts that are touching, solid, and awake.\r\n      PostSolve(contact, impulse) { }\r\n  }\r\n  b2ContactListener.b2_defaultListener = new b2ContactListener();\r\n  /// Callback class for AABB queries.\r\n  /// See b2World::Query\r\n  class b2QueryCallback {\r\n      /// Called for each fixture found in the query AABB.\r\n      /// @return false to terminate the query.\r\n      ReportFixture(fixture) {\r\n          return true;\r\n      }\r\n      // #if B2_ENABLE_PARTICLE\r\n      ReportParticle(system, index) {\r\n          return false;\r\n      }\r\n      ShouldQueryParticleSystem(system) {\r\n          return true;\r\n      }\r\n  }\r\n  /// Callback class for ray casts.\r\n  /// See b2World::RayCast\r\n  class b2RayCastCallback {\r\n      /// Called for each fixture found in the query. You control how the ray cast\r\n      /// proceeds by returning a float:\r\n      /// return -1: ignore this fixture and continue\r\n      /// return 0: terminate the ray cast\r\n      /// return fraction: clip the ray to this point\r\n      /// return 1: don't clip the ray and continue\r\n      /// @param fixture the fixture hit by the ray\r\n      /// @param point the point of initial intersection\r\n      /// @param normal the normal vector at the point of intersection\r\n      /// @return -1 to filter, 0 to terminate, fraction to clip the ray for\r\n      /// closest hit, 1 to continue\r\n      ReportFixture(fixture, point, normal, fraction) {\r\n          return fraction;\r\n      }\r\n      // #if B2_ENABLE_PARTICLE\r\n      ReportParticle(system, index, point, normal, fraction) {\r\n          return 0;\r\n      }\r\n      ShouldQueryParticleSystem(system) {\r\n          return true;\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  // Delegate of b2World.\r\n  class b2ContactManager {\r\n      constructor() {\r\n          this.m_broadPhase = new b2BroadPhase();\r\n          this.m_contactList = null;\r\n          this.m_contactCount = 0;\r\n          this.m_contactFilter = b2ContactFilter.b2_defaultFilter;\r\n          this.m_contactListener = b2ContactListener.b2_defaultListener;\r\n          this.m_allocator = null;\r\n          this.m_contactFactory = new b2ContactFactory(this.m_allocator);\r\n      }\r\n      // Broad-phase callback.\r\n      AddPair(proxyA, proxyB) {\r\n          // DEBUG: b2Assert(proxyA instanceof b2FixtureProxy);\r\n          // DEBUG: b2Assert(proxyB instanceof b2FixtureProxy);\r\n          let fixtureA = proxyA.fixture;\r\n          let fixtureB = proxyB.fixture;\r\n          let indexA = proxyA.childIndex;\r\n          let indexB = proxyB.childIndex;\r\n          let bodyA = fixtureA.GetBody();\r\n          let bodyB = fixtureB.GetBody();\r\n          // Are the fixtures on the same body?\r\n          if (bodyA === bodyB) {\r\n              return;\r\n          }\r\n          // TODO_ERIN use a hash table to remove a potential bottleneck when both\r\n          // bodies have a lot of contacts.\r\n          // Does a contact already exist?\r\n          let edge = bodyB.GetContactList();\r\n          while (edge) {\r\n              if (edge.other === bodyA) {\r\n                  const fA = edge.contact.GetFixtureA();\r\n                  const fB = edge.contact.GetFixtureB();\r\n                  const iA = edge.contact.GetChildIndexA();\r\n                  const iB = edge.contact.GetChildIndexB();\r\n                  if (fA === fixtureA && fB === fixtureB && iA === indexA && iB === indexB) {\r\n                      // A contact already exists.\r\n                      return;\r\n                  }\r\n                  if (fA === fixtureB && fB === fixtureA && iA === indexB && iB === indexA) {\r\n                      // A contact already exists.\r\n                      return;\r\n                  }\r\n              }\r\n              edge = edge.next;\r\n          }\r\n          // Check user filtering.\r\n          if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n              return;\r\n          }\r\n          // Call the factory.\r\n          const c = this.m_contactFactory.Create(fixtureA, indexA, fixtureB, indexB);\r\n          if (c === null) {\r\n              return;\r\n          }\r\n          // Contact creation may swap fixtures.\r\n          fixtureA = c.GetFixtureA();\r\n          fixtureB = c.GetFixtureB();\r\n          indexA = c.GetChildIndexA();\r\n          indexB = c.GetChildIndexB();\r\n          bodyA = fixtureA.m_body;\r\n          bodyB = fixtureB.m_body;\r\n          // Insert into the world.\r\n          c.m_prev = null;\r\n          c.m_next = this.m_contactList;\r\n          if (this.m_contactList !== null) {\r\n              this.m_contactList.m_prev = c;\r\n          }\r\n          this.m_contactList = c;\r\n          // Connect to island graph.\r\n          // Connect to body A\r\n          c.m_nodeA.contact = c;\r\n          c.m_nodeA.other = bodyB;\r\n          c.m_nodeA.prev = null;\r\n          c.m_nodeA.next = bodyA.m_contactList;\r\n          if (bodyA.m_contactList !== null) {\r\n              bodyA.m_contactList.prev = c.m_nodeA;\r\n          }\r\n          bodyA.m_contactList = c.m_nodeA;\r\n          // Connect to body B\r\n          c.m_nodeB.contact = c;\r\n          c.m_nodeB.other = bodyA;\r\n          c.m_nodeB.prev = null;\r\n          c.m_nodeB.next = bodyB.m_contactList;\r\n          if (bodyB.m_contactList !== null) {\r\n              bodyB.m_contactList.prev = c.m_nodeB;\r\n          }\r\n          bodyB.m_contactList = c.m_nodeB;\r\n          // Wake up the bodies\r\n          if (!fixtureA.IsSensor() && !fixtureB.IsSensor()) {\r\n              bodyA.SetAwake(true);\r\n              bodyB.SetAwake(true);\r\n          }\r\n          ++this.m_contactCount;\r\n      }\r\n      FindNewContacts() {\r\n          this.m_broadPhase.UpdatePairs((proxyA, proxyB) => {\r\n              this.AddPair(proxyA, proxyB);\r\n          });\r\n      }\r\n      Destroy(c) {\r\n          const fixtureA = c.GetFixtureA();\r\n          const fixtureB = c.GetFixtureB();\r\n          const bodyA = fixtureA.GetBody();\r\n          const bodyB = fixtureB.GetBody();\r\n          if (this.m_contactListener && c.IsTouching()) {\r\n              this.m_contactListener.EndContact(c);\r\n          }\r\n          // Remove from the world.\r\n          if (c.m_prev) {\r\n              c.m_prev.m_next = c.m_next;\r\n          }\r\n          if (c.m_next) {\r\n              c.m_next.m_prev = c.m_prev;\r\n          }\r\n          if (c === this.m_contactList) {\r\n              this.m_contactList = c.m_next;\r\n          }\r\n          // Remove from body 1\r\n          if (c.m_nodeA.prev) {\r\n              c.m_nodeA.prev.next = c.m_nodeA.next;\r\n          }\r\n          if (c.m_nodeA.next) {\r\n              c.m_nodeA.next.prev = c.m_nodeA.prev;\r\n          }\r\n          if (c.m_nodeA === bodyA.m_contactList) {\r\n              bodyA.m_contactList = c.m_nodeA.next;\r\n          }\r\n          // Remove from body 2\r\n          if (c.m_nodeB.prev) {\r\n              c.m_nodeB.prev.next = c.m_nodeB.next;\r\n          }\r\n          if (c.m_nodeB.next) {\r\n              c.m_nodeB.next.prev = c.m_nodeB.prev;\r\n          }\r\n          if (c.m_nodeB === bodyB.m_contactList) {\r\n              bodyB.m_contactList = c.m_nodeB.next;\r\n          }\r\n          // Call the factory.\r\n          this.m_contactFactory.Destroy(c);\r\n          --this.m_contactCount;\r\n      }\r\n      // This is the top level collision call for the time step. Here\r\n      // all the narrow phase collision is processed for the world\r\n      // contact list.\r\n      Collide() {\r\n          // Update awake contacts.\r\n          let c = this.m_contactList;\r\n          while (c) {\r\n              const fixtureA = c.GetFixtureA();\r\n              const fixtureB = c.GetFixtureB();\r\n              const indexA = c.GetChildIndexA();\r\n              const indexB = c.GetChildIndexB();\r\n              const bodyA = fixtureA.GetBody();\r\n              const bodyB = fixtureB.GetBody();\r\n              // Is this contact flagged for filtering?\r\n              if (c.m_filterFlag) {\r\n                  // Check user filtering.\r\n                  if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(fixtureA, fixtureB)) {\r\n                      const cNuke = c;\r\n                      c = cNuke.m_next;\r\n                      this.Destroy(cNuke);\r\n                      continue;\r\n                  }\r\n                  // Clear the filtering flag.\r\n                  c.m_filterFlag = false;\r\n              }\r\n              const activeA = bodyA.IsAwake() && bodyA.m_type !== exports.b2BodyType.b2_staticBody;\r\n              const activeB = bodyB.IsAwake() && bodyB.m_type !== exports.b2BodyType.b2_staticBody;\r\n              // At least one body must be awake and it must be dynamic or kinematic.\r\n              if (!activeA && !activeB) {\r\n                  c = c.m_next;\r\n                  continue;\r\n              }\r\n              const proxyA = fixtureA.m_proxies[indexA].treeNode;\r\n              const proxyB = fixtureB.m_proxies[indexB].treeNode;\r\n              const overlap = b2TestOverlapAABB(proxyA.aabb, proxyB.aabb);\r\n              // Here we destroy contacts that cease to overlap in the broad-phase.\r\n              if (!overlap) {\r\n                  const cNuke = c;\r\n                  c = cNuke.m_next;\r\n                  this.Destroy(cNuke);\r\n                  continue;\r\n              }\r\n              // The contact persists.\r\n              c.Update(this.m_contactListener);\r\n              c = c.m_next;\r\n          }\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /// Profiling data. Times are in milliseconds.\r\n  class b2Profile {\r\n      constructor() {\r\n          this.step = 0;\r\n          this.collide = 0;\r\n          this.solve = 0;\r\n          this.solveInit = 0;\r\n          this.solveVelocity = 0;\r\n          this.solvePosition = 0;\r\n          this.broadphase = 0;\r\n          this.solveTOI = 0;\r\n      }\r\n      Reset() {\r\n          this.step = 0;\r\n          this.collide = 0;\r\n          this.solve = 0;\r\n          this.solveInit = 0;\r\n          this.solveVelocity = 0;\r\n          this.solvePosition = 0;\r\n          this.broadphase = 0;\r\n          this.solveTOI = 0;\r\n          return this;\r\n      }\r\n  }\r\n  /// This is an internal structure.\r\n  class b2TimeStep {\r\n      constructor() {\r\n          this.dt = 0; // time step\r\n          this.inv_dt = 0; // inverse time step (0 if dt == 0).\r\n          this.dtRatio = 0; // dt * inv_dt0\r\n          this.velocityIterations = 0;\r\n          this.positionIterations = 0;\r\n          // #if B2_ENABLE_PARTICLE\r\n          this.particleIterations = 0;\r\n          // #endif\r\n          this.warmStarting = false;\r\n      }\r\n      Copy(step) {\r\n          this.dt = step.dt;\r\n          this.inv_dt = step.inv_dt;\r\n          this.dtRatio = step.dtRatio;\r\n          this.positionIterations = step.positionIterations;\r\n          this.velocityIterations = step.velocityIterations;\r\n          // #if B2_ENABLE_PARTICLE\r\n          this.particleIterations = step.particleIterations;\r\n          // #endif\r\n          this.warmStarting = step.warmStarting;\r\n          return this;\r\n      }\r\n  }\r\n  class b2Position {\r\n      constructor() {\r\n          this.c = new b2Vec2();\r\n          this.a = 0;\r\n      }\r\n      static MakeArray(length) {\r\n          return b2MakeArray(length, (i) => new b2Position());\r\n      }\r\n  }\r\n  class b2Velocity {\r\n      constructor() {\r\n          this.v = new b2Vec2();\r\n          this.w = 0;\r\n      }\r\n      static MakeArray(length) {\r\n          return b2MakeArray(length, (i) => new b2Velocity());\r\n      }\r\n  }\r\n  class b2SolverData {\r\n      constructor() {\r\n          this.step = new b2TimeStep();\r\n      }\r\n  }\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  // Solver debugging is normally disabled because the block solver sometimes has to deal with a poorly conditioned effective mass matrix.\r\n  // #define B2_DEBUG_SOLVER 0\r\n  let g_blockSolve = false;\r\n  class b2VelocityConstraintPoint {\r\n      constructor() {\r\n          this.rA = new b2Vec2();\r\n          this.rB = new b2Vec2();\r\n          this.normalImpulse = 0;\r\n          this.tangentImpulse = 0;\r\n          this.normalMass = 0;\r\n          this.tangentMass = 0;\r\n          this.velocityBias = 0;\r\n      }\r\n      static MakeArray(length) {\r\n          return b2MakeArray(length, (i) => new b2VelocityConstraintPoint());\r\n      }\r\n  }\r\n  class b2ContactVelocityConstraint {\r\n      constructor() {\r\n          this.points = b2VelocityConstraintPoint.MakeArray(b2_maxManifoldPoints);\r\n          this.normal = new b2Vec2();\r\n          this.tangent = new b2Vec2();\r\n          this.normalMass = new b2Mat22();\r\n          this.K = new b2Mat22();\r\n          this.indexA = 0;\r\n          this.indexB = 0;\r\n          this.invMassA = 0;\r\n          this.invMassB = 0;\r\n          this.invIA = 0;\r\n          this.invIB = 0;\r\n          this.friction = 0;\r\n          this.restitution = 0;\r\n          this.tangentSpeed = 0;\r\n          this.pointCount = 0;\r\n          this.contactIndex = 0;\r\n      }\r\n      static MakeArray(length) {\r\n          return b2MakeArray(length, (i) => new b2ContactVelocityConstraint());\r\n      }\r\n  }\r\n  class b2ContactPositionConstraint {\r\n      constructor() {\r\n          this.localPoints = b2Vec2.MakeArray(b2_maxManifoldPoints);\r\n          this.localNormal = new b2Vec2();\r\n          this.localPoint = new b2Vec2();\r\n          this.indexA = 0;\r\n          this.indexB = 0;\r\n          this.invMassA = 0;\r\n          this.invMassB = 0;\r\n          this.localCenterA = new b2Vec2();\r\n          this.localCenterB = new b2Vec2();\r\n          this.invIA = 0;\r\n          this.invIB = 0;\r\n          this.type = exports.b2ManifoldType.e_unknown;\r\n          this.radiusA = 0;\r\n          this.radiusB = 0;\r\n          this.pointCount = 0;\r\n      }\r\n      static MakeArray(length) {\r\n          return b2MakeArray(length, (i) => new b2ContactPositionConstraint());\r\n      }\r\n  }\r\n  class b2ContactSolverDef {\r\n      constructor() {\r\n          this.step = new b2TimeStep();\r\n          this.count = 0;\r\n          this.allocator = null;\r\n      }\r\n  }\r\n  class b2PositionSolverManifold {\r\n      constructor() {\r\n          this.normal = new b2Vec2();\r\n          this.point = new b2Vec2();\r\n          this.separation = 0;\r\n      }\r\n      Initialize(pc, xfA, xfB, index) {\r\n          const pointA = b2PositionSolverManifold.Initialize_s_pointA;\r\n          const pointB = b2PositionSolverManifold.Initialize_s_pointB;\r\n          const planePoint = b2PositionSolverManifold.Initialize_s_planePoint;\r\n          const clipPoint = b2PositionSolverManifold.Initialize_s_clipPoint;\r\n          // DEBUG: b2Assert(pc.pointCount > 0);\r\n          switch (pc.type) {\r\n              case exports.b2ManifoldType.e_circles: {\r\n                  // b2Vec2 pointA = b2Mul(xfA, pc->localPoint);\r\n                  b2Transform.MulXV(xfA, pc.localPoint, pointA);\r\n                  // b2Vec2 pointB = b2Mul(xfB, pc->localPoints[0]);\r\n                  b2Transform.MulXV(xfB, pc.localPoints[0], pointB);\r\n                  // normal = pointB - pointA;\r\n                  // normal.Normalize();\r\n                  b2Vec2.SubVV(pointB, pointA, this.normal).SelfNormalize();\r\n                  // point = 0.5f * (pointA + pointB);\r\n                  b2Vec2.MidVV(pointA, pointB, this.point);\r\n                  // separation = b2Dot(pointB - pointA, normal) - pc->radius;\r\n                  this.separation = b2Vec2.DotVV(b2Vec2.SubVV(pointB, pointA, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                  break;\r\n              }\r\n              case exports.b2ManifoldType.e_faceA: {\r\n                  // normal = b2Mul(xfA.q, pc->localNormal);\r\n                  b2Rot.MulRV(xfA.q, pc.localNormal, this.normal);\r\n                  // b2Vec2 planePoint = b2Mul(xfA, pc->localPoint);\r\n                  b2Transform.MulXV(xfA, pc.localPoint, planePoint);\r\n                  // b2Vec2 clipPoint = b2Mul(xfB, pc->localPoints[index]);\r\n                  b2Transform.MulXV(xfB, pc.localPoints[index], clipPoint);\r\n                  // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                  this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                  // point = clipPoint;\r\n                  this.point.Copy(clipPoint);\r\n                  break;\r\n              }\r\n              case exports.b2ManifoldType.e_faceB: {\r\n                  // normal = b2Mul(xfB.q, pc->localNormal);\r\n                  b2Rot.MulRV(xfB.q, pc.localNormal, this.normal);\r\n                  // b2Vec2 planePoint = b2Mul(xfB, pc->localPoint);\r\n                  b2Transform.MulXV(xfB, pc.localPoint, planePoint);\r\n                  // b2Vec2 clipPoint = b2Mul(xfA, pc->localPoints[index]);\r\n                  b2Transform.MulXV(xfA, pc.localPoints[index], clipPoint);\r\n                  // separation = b2Dot(clipPoint - planePoint, normal) - pc->radius;\r\n                  this.separation = b2Vec2.DotVV(b2Vec2.SubVV(clipPoint, planePoint, b2Vec2.s_t0), this.normal) - pc.radiusA - pc.radiusB;\r\n                  // point = clipPoint;\r\n                  this.point.Copy(clipPoint);\r\n                  // Ensure normal points from A to B\r\n                  // normal = -normal;\r\n                  this.normal.SelfNeg();\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n  }\r\n  b2PositionSolverManifold.Initialize_s_pointA = new b2Vec2();\r\n  b2PositionSolverManifold.Initialize_s_pointB = new b2Vec2();\r\n  b2PositionSolverManifold.Initialize_s_planePoint = new b2Vec2();\r\n  b2PositionSolverManifold.Initialize_s_clipPoint = new b2Vec2();\r\n  class b2ContactSolver {\r\n      constructor() {\r\n          this.m_step = new b2TimeStep();\r\n          this.m_allocator = null;\r\n          this.m_positionConstraints = b2ContactPositionConstraint.MakeArray(1024); // TODO: b2Settings\r\n          this.m_velocityConstraints = b2ContactVelocityConstraint.MakeArray(1024); // TODO: b2Settings\r\n          this.m_count = 0;\r\n      }\r\n      Initialize(def) {\r\n          this.m_step.Copy(def.step);\r\n          this.m_allocator = def.allocator;\r\n          this.m_count = def.count;\r\n          // TODO:\r\n          if (this.m_positionConstraints.length < this.m_count) {\r\n              const new_length = b2Max(this.m_positionConstraints.length * 2, this.m_count);\r\n              while (this.m_positionConstraints.length < new_length) {\r\n                  this.m_positionConstraints[this.m_positionConstraints.length] = new b2ContactPositionConstraint();\r\n              }\r\n          }\r\n          // TODO:\r\n          if (this.m_velocityConstraints.length < this.m_count) {\r\n              const new_length = b2Max(this.m_velocityConstraints.length * 2, this.m_count);\r\n              while (this.m_velocityConstraints.length < new_length) {\r\n                  this.m_velocityConstraints[this.m_velocityConstraints.length] = new b2ContactVelocityConstraint();\r\n              }\r\n          }\r\n          this.m_positions = def.positions;\r\n          this.m_velocities = def.velocities;\r\n          this.m_contacts = def.contacts;\r\n          // Initialize position independent portions of the constraints.\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const contact = this.m_contacts[i];\r\n              const fixtureA = contact.m_fixtureA;\r\n              const fixtureB = contact.m_fixtureB;\r\n              const shapeA = fixtureA.GetShape();\r\n              const shapeB = fixtureB.GetShape();\r\n              const radiusA = shapeA.m_radius;\r\n              const radiusB = shapeB.m_radius;\r\n              const bodyA = fixtureA.GetBody();\r\n              const bodyB = fixtureB.GetBody();\r\n              const manifold = contact.GetManifold();\r\n              const pointCount = manifold.pointCount;\r\n              // DEBUG: b2Assert(pointCount > 0);\r\n              const vc = this.m_velocityConstraints[i];\r\n              vc.friction = contact.m_friction;\r\n              vc.restitution = contact.m_restitution;\r\n              vc.tangentSpeed = contact.m_tangentSpeed;\r\n              vc.indexA = bodyA.m_islandIndex;\r\n              vc.indexB = bodyB.m_islandIndex;\r\n              vc.invMassA = bodyA.m_invMass;\r\n              vc.invMassB = bodyB.m_invMass;\r\n              vc.invIA = bodyA.m_invI;\r\n              vc.invIB = bodyB.m_invI;\r\n              vc.contactIndex = i;\r\n              vc.pointCount = pointCount;\r\n              vc.K.SetZero();\r\n              vc.normalMass.SetZero();\r\n              const pc = this.m_positionConstraints[i];\r\n              pc.indexA = bodyA.m_islandIndex;\r\n              pc.indexB = bodyB.m_islandIndex;\r\n              pc.invMassA = bodyA.m_invMass;\r\n              pc.invMassB = bodyB.m_invMass;\r\n              pc.localCenterA.Copy(bodyA.m_sweep.localCenter);\r\n              pc.localCenterB.Copy(bodyB.m_sweep.localCenter);\r\n              pc.invIA = bodyA.m_invI;\r\n              pc.invIB = bodyB.m_invI;\r\n              pc.localNormal.Copy(manifold.localNormal);\r\n              pc.localPoint.Copy(manifold.localPoint);\r\n              pc.pointCount = pointCount;\r\n              pc.radiusA = radiusA;\r\n              pc.radiusB = radiusB;\r\n              pc.type = manifold.type;\r\n              for (let j = 0; j < pointCount; ++j) {\r\n                  const cp = manifold.points[j];\r\n                  const vcp = vc.points[j];\r\n                  if (this.m_step.warmStarting) {\r\n                      vcp.normalImpulse = this.m_step.dtRatio * cp.normalImpulse;\r\n                      vcp.tangentImpulse = this.m_step.dtRatio * cp.tangentImpulse;\r\n                  }\r\n                  else {\r\n                      vcp.normalImpulse = 0;\r\n                      vcp.tangentImpulse = 0;\r\n                  }\r\n                  vcp.rA.SetZero();\r\n                  vcp.rB.SetZero();\r\n                  vcp.normalMass = 0;\r\n                  vcp.tangentMass = 0;\r\n                  vcp.velocityBias = 0;\r\n                  pc.localPoints[j].Copy(cp.localPoint);\r\n              }\r\n          }\r\n          return this;\r\n      }\r\n      InitializeVelocityConstraints() {\r\n          const xfA = b2ContactSolver.InitializeVelocityConstraints_s_xfA;\r\n          const xfB = b2ContactSolver.InitializeVelocityConstraints_s_xfB;\r\n          const worldManifold = b2ContactSolver.InitializeVelocityConstraints_s_worldManifold;\r\n          const k_maxConditionNumber = 1000;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const vc = this.m_velocityConstraints[i];\r\n              const pc = this.m_positionConstraints[i];\r\n              const radiusA = pc.radiusA;\r\n              const radiusB = pc.radiusB;\r\n              const manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n              const indexA = vc.indexA;\r\n              const indexB = vc.indexB;\r\n              const mA = vc.invMassA;\r\n              const mB = vc.invMassB;\r\n              const iA = vc.invIA;\r\n              const iB = vc.invIB;\r\n              const localCenterA = pc.localCenterA;\r\n              const localCenterB = pc.localCenterB;\r\n              const cA = this.m_positions[indexA].c;\r\n              const aA = this.m_positions[indexA].a;\r\n              const vA = this.m_velocities[indexA].v;\r\n              const wA = this.m_velocities[indexA].w;\r\n              const cB = this.m_positions[indexB].c;\r\n              const aB = this.m_positions[indexB].a;\r\n              const vB = this.m_velocities[indexB].v;\r\n              const wB = this.m_velocities[indexB].w;\r\n              // DEBUG: b2Assert(manifold.pointCount > 0);\r\n              xfA.q.SetAngle(aA);\r\n              xfB.q.SetAngle(aB);\r\n              b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n              b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n              worldManifold.Initialize(manifold, xfA, radiusA, xfB, radiusB);\r\n              vc.normal.Copy(worldManifold.normal);\r\n              b2Vec2.CrossVOne(vc.normal, vc.tangent); // compute from normal\r\n              const pointCount = vc.pointCount;\r\n              for (let j = 0; j < pointCount; ++j) {\r\n                  const vcp = vc.points[j];\r\n                  // vcp->rA = worldManifold.points[j] - cA;\r\n                  b2Vec2.SubVV(worldManifold.points[j], cA, vcp.rA);\r\n                  // vcp->rB = worldManifold.points[j] - cB;\r\n                  b2Vec2.SubVV(worldManifold.points[j], cB, vcp.rB);\r\n                  const rnA = b2Vec2.CrossVV(vcp.rA, vc.normal);\r\n                  const rnB = b2Vec2.CrossVV(vcp.rB, vc.normal);\r\n                  const kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                  vcp.normalMass = kNormal > 0 ? 1 / kNormal : 0;\r\n                  // b2Vec2 tangent = b2Cross(vc->normal, 1.0f);\r\n                  const tangent = vc.tangent; // precomputed from normal\r\n                  const rtA = b2Vec2.CrossVV(vcp.rA, tangent);\r\n                  const rtB = b2Vec2.CrossVV(vcp.rB, tangent);\r\n                  const kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\r\n                  vcp.tangentMass = kTangent > 0 ? 1 / kTangent : 0;\r\n                  // Setup a velocity bias for restitution.\r\n                  vcp.velocityBias = 0;\r\n                  // float32 vRel = b2Dot(vc->normal, vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA));\r\n                  const vRel = b2Vec2.DotVV(vc.normal, b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), b2Vec2.s_t0));\r\n                  if (vRel < (-b2_velocityThreshold)) {\r\n                      vcp.velocityBias += (-vc.restitution * vRel);\r\n                  }\r\n              }\r\n              // If we have two points, then prepare the block solver.\r\n              if (vc.pointCount === 2 && g_blockSolve) {\r\n                  const vcp1 = vc.points[0];\r\n                  const vcp2 = vc.points[1];\r\n                  const rn1A = b2Vec2.CrossVV(vcp1.rA, vc.normal);\r\n                  const rn1B = b2Vec2.CrossVV(vcp1.rB, vc.normal);\r\n                  const rn2A = b2Vec2.CrossVV(vcp2.rA, vc.normal);\r\n                  const rn2B = b2Vec2.CrossVV(vcp2.rB, vc.normal);\r\n                  const k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\r\n                  const k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\r\n                  const k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\r\n                  // Ensure a reasonable condition number.\r\n                  // float32 k_maxConditionNumber = 1000.0f;\r\n                  if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\r\n                      // K is safe to invert.\r\n                      vc.K.ex.Set(k11, k12);\r\n                      vc.K.ey.Set(k12, k22);\r\n                      vc.K.GetInverse(vc.normalMass);\r\n                  }\r\n                  else {\r\n                      // The constraints are redundant, just use one.\r\n                      // TODO_ERIN use deepest?\r\n                      vc.pointCount = 1;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      WarmStart() {\r\n          const P = b2ContactSolver.WarmStart_s_P;\r\n          // Warm start.\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const vc = this.m_velocityConstraints[i];\r\n              const indexA = vc.indexA;\r\n              const indexB = vc.indexB;\r\n              const mA = vc.invMassA;\r\n              const iA = vc.invIA;\r\n              const mB = vc.invMassB;\r\n              const iB = vc.invIB;\r\n              const pointCount = vc.pointCount;\r\n              const vA = this.m_velocities[indexA].v;\r\n              let wA = this.m_velocities[indexA].w;\r\n              const vB = this.m_velocities[indexB].v;\r\n              let wB = this.m_velocities[indexB].w;\r\n              const normal = vc.normal;\r\n              // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n              const tangent = vc.tangent; // precomputed from normal\r\n              for (let j = 0; j < pointCount; ++j) {\r\n                  const vcp = vc.points[j];\r\n                  // b2Vec2 P = vcp->normalImpulse * normal + vcp->tangentImpulse * tangent;\r\n                  b2Vec2.AddVV(b2Vec2.MulSV(vcp.normalImpulse, normal, b2Vec2.s_t0), b2Vec2.MulSV(vcp.tangentImpulse, tangent, b2Vec2.s_t1), P);\r\n                  // wA -= iA * b2Cross(vcp->rA, P);\r\n                  wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                  // vA -= mA * P;\r\n                  vA.SelfMulSub(mA, P);\r\n                  // wB += iB * b2Cross(vcp->rB, P);\r\n                  wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n                  // vB += mB * P;\r\n                  vB.SelfMulAdd(mB, P);\r\n              }\r\n              // this.m_velocities[indexA].v = vA;\r\n              this.m_velocities[indexA].w = wA;\r\n              // this.m_velocities[indexB].v = vB;\r\n              this.m_velocities[indexB].w = wB;\r\n          }\r\n      }\r\n      SolveVelocityConstraints() {\r\n          const dv = b2ContactSolver.SolveVelocityConstraints_s_dv;\r\n          const dv1 = b2ContactSolver.SolveVelocityConstraints_s_dv1;\r\n          const dv2 = b2ContactSolver.SolveVelocityConstraints_s_dv2;\r\n          const P = b2ContactSolver.SolveVelocityConstraints_s_P;\r\n          const a = b2ContactSolver.SolveVelocityConstraints_s_a;\r\n          const b = b2ContactSolver.SolveVelocityConstraints_s_b;\r\n          const x = b2ContactSolver.SolveVelocityConstraints_s_x;\r\n          const d = b2ContactSolver.SolveVelocityConstraints_s_d;\r\n          const P1 = b2ContactSolver.SolveVelocityConstraints_s_P1;\r\n          const P2 = b2ContactSolver.SolveVelocityConstraints_s_P2;\r\n          const P1P2 = b2ContactSolver.SolveVelocityConstraints_s_P1P2;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const vc = this.m_velocityConstraints[i];\r\n              const indexA = vc.indexA;\r\n              const indexB = vc.indexB;\r\n              const mA = vc.invMassA;\r\n              const iA = vc.invIA;\r\n              const mB = vc.invMassB;\r\n              const iB = vc.invIB;\r\n              const pointCount = vc.pointCount;\r\n              const vA = this.m_velocities[indexA].v;\r\n              let wA = this.m_velocities[indexA].w;\r\n              const vB = this.m_velocities[indexB].v;\r\n              let wB = this.m_velocities[indexB].w;\r\n              // b2Vec2 normal = vc->normal;\r\n              const normal = vc.normal;\r\n              // b2Vec2 tangent = b2Cross(normal, 1.0f);\r\n              const tangent = vc.tangent; // precomputed from normal\r\n              const friction = vc.friction;\r\n              // DEBUG: b2Assert(pointCount === 1 || pointCount === 2);\r\n              // Solve tangent constraints first because non-penetration is more important\r\n              // than friction.\r\n              for (let j = 0; j < pointCount; ++j) {\r\n                  const vcp = vc.points[j];\r\n                  // Relative velocity at contact\r\n                  // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                  b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                  // Compute tangent force\r\n                  // float32 vt = b2Dot(dv, tangent) - vc->tangentSpeed;\r\n                  const vt = b2Vec2.DotVV(dv, tangent) - vc.tangentSpeed;\r\n                  let lambda = vcp.tangentMass * (-vt);\r\n                  // b2Clamp the accumulated force\r\n                  const maxFriction = friction * vcp.normalImpulse;\r\n                  const newImpulse = b2Clamp(vcp.tangentImpulse + lambda, (-maxFriction), maxFriction);\r\n                  lambda = newImpulse - vcp.tangentImpulse;\r\n                  vcp.tangentImpulse = newImpulse;\r\n                  // Apply contact impulse\r\n                  // b2Vec2 P = lambda * tangent;\r\n                  b2Vec2.MulSV(lambda, tangent, P);\r\n                  // vA -= mA * P;\r\n                  vA.SelfMulSub(mA, P);\r\n                  // wA -= iA * b2Cross(vcp->rA, P);\r\n                  wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                  // vB += mB * P;\r\n                  vB.SelfMulAdd(mB, P);\r\n                  // wB += iB * b2Cross(vcp->rB, P);\r\n                  wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n              }\r\n              // Solve normal constraints\r\n              if (vc.pointCount === 1 || g_blockSolve === false) {\r\n                  for (let j = 0; j < pointCount; ++j) {\r\n                      const vcp = vc.points[j];\r\n                      // Relative velocity at contact\r\n                      // b2Vec2 dv = vB + b2Cross(wB, vcp->rB) - vA - b2Cross(wA, vcp->rA);\r\n                      b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, vcp.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, vcp.rA, b2Vec2.s_t1), dv);\r\n                      // Compute normal impulse\r\n                      // float32 vn = b2Dot(dv, normal);\r\n                      const vn = b2Vec2.DotVV(dv, normal);\r\n                      let lambda = (-vcp.normalMass * (vn - vcp.velocityBias));\r\n                      // b2Clamp the accumulated impulse\r\n                      // float32 newImpulse = b2Max(vcp->normalImpulse + lambda, 0.0f);\r\n                      const newImpulse = b2Max(vcp.normalImpulse + lambda, 0);\r\n                      lambda = newImpulse - vcp.normalImpulse;\r\n                      vcp.normalImpulse = newImpulse;\r\n                      // Apply contact impulse\r\n                      // b2Vec2 P = lambda * normal;\r\n                      b2Vec2.MulSV(lambda, normal, P);\r\n                      // vA -= mA * P;\r\n                      vA.SelfMulSub(mA, P);\r\n                      // wA -= iA * b2Cross(vcp->rA, P);\r\n                      wA -= iA * b2Vec2.CrossVV(vcp.rA, P);\r\n                      // vB += mB * P;\r\n                      vB.SelfMulAdd(mB, P);\r\n                      // wB += iB * b2Cross(vcp->rB, P);\r\n                      wB += iB * b2Vec2.CrossVV(vcp.rB, P);\r\n                  }\r\n              }\r\n              else {\r\n                  // Block solver developed in collaboration with Dirk Gregorius (back in 01/07 on Box2D_Lite).\r\n                  // Build the mini LCP for this contact patch\r\n                  //\r\n                  // vn = A * x + b, vn >= 0, x >= 0 and vn_i * x_i = 0 with i = 1..2\r\n                  //\r\n                  // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\r\n                  // b = vn0 - velocityBias\r\n                  //\r\n                  // The system is solved using the \"Total enumeration method\" (s. Murty). The complementary constraint vn_i * x_i\r\n                  // implies that we must have in any solution either vn_i = 0 or x_i = 0. So for the 2D contact problem the cases\r\n                  // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and vn1 = 0 need to be tested. The first valid\r\n                  // solution that satisfies the problem is chosen.\r\n                  //\r\n                  // In order to account of the accumulated impulse 'a' (because of the iterative nature of the solver which only requires\r\n                  // that the accumulated impulse is clamped and not the incremental impulse) we change the impulse variable (x_i).\r\n                  //\r\n                  // Substitute:\r\n                  //\r\n                  // x = a + d\r\n                  //\r\n                  // a := old total impulse\r\n                  // x := new total impulse\r\n                  // d := incremental impulse\r\n                  //\r\n                  // For the current iteration we extend the formula for the incremental impulse\r\n                  // to compute the new total impulse:\r\n                  //\r\n                  // vn = A * d + b\r\n                  //    = A * (x - a) + b\r\n                  //    = A * x + b - A * a\r\n                  //    = A * x + b'\r\n                  // b' = b - A * a;\r\n                  const cp1 = vc.points[0];\r\n                  const cp2 = vc.points[1];\r\n                  // b2Vec2 a(cp1->normalImpulse, cp2->normalImpulse);\r\n                  a.Set(cp1.normalImpulse, cp2.normalImpulse);\r\n                  // DEBUG: b2Assert(a.x >= 0 && a.y >= 0);\r\n                  // Relative velocity at contact\r\n                  // b2Vec2 dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                  b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp1.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp1.rA, b2Vec2.s_t1), dv1);\r\n                  // b2Vec2 dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n                  b2Vec2.SubVV(b2Vec2.AddVCrossSV(vB, wB, cp2.rB, b2Vec2.s_t0), b2Vec2.AddVCrossSV(vA, wA, cp2.rA, b2Vec2.s_t1), dv2);\r\n                  // Compute normal velocity\r\n                  // float32 vn1 = b2Dot(dv1, normal);\r\n                  let vn1 = b2Vec2.DotVV(dv1, normal);\r\n                  // float32 vn2 = b2Dot(dv2, normal);\r\n                  let vn2 = b2Vec2.DotVV(dv2, normal);\r\n                  // b2Vec2 b;\r\n                  b.x = vn1 - cp1.velocityBias;\r\n                  b.y = vn2 - cp2.velocityBias;\r\n                  // Compute b'\r\n                  // b -= b2Mul(vc->K, a);\r\n                  b.SelfSub(b2Mat22.MulMV(vc.K, a, b2Vec2.s_t0));\r\n                  /*\r\n                  #if B2_DEBUG_SOLVER === 1\r\n                  const k_errorTol: number = 0.001;\r\n                  #endif\r\n                  */\r\n                  for (;;) {\r\n                      //\r\n                      // Case 1: vn = 0\r\n                      //\r\n                      // 0 = A * x + b'\r\n                      //\r\n                      // Solve for x:\r\n                      //\r\n                      // x = - inv(A) * b'\r\n                      //\r\n                      // b2Vec2 x = - b2Mul(vc->normalMass, b);\r\n                      b2Mat22.MulMV(vc.normalMass, b, x).SelfNeg();\r\n                      if (x.x >= 0 && x.y >= 0) {\r\n                          // Get the incremental impulse\r\n                          // b2Vec2 d = x - a;\r\n                          b2Vec2.SubVV(x, a, d);\r\n                          // Apply incremental impulse\r\n                          // b2Vec2 P1 = d.x * normal;\r\n                          b2Vec2.MulSV(d.x, normal, P1);\r\n                          // b2Vec2 P2 = d.y * normal;\r\n                          b2Vec2.MulSV(d.y, normal, P2);\r\n                          b2Vec2.AddVV(P1, P2, P1P2);\r\n                          // vA -= mA * (P1 + P2);\r\n                          vA.SelfMulSub(mA, P1P2);\r\n                          // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                          wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                          // vB += mB * (P1 + P2);\r\n                          vB.SelfMulAdd(mB, P1P2);\r\n                          // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                          wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                          // Accumulate\r\n                          cp1.normalImpulse = x.x;\r\n                          cp2.normalImpulse = x.y;\r\n                          /*\r\n                          #if B2_DEBUG_SOLVER === 1\r\n                          // Postconditions\r\n                          dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n                          dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n              \r\n                          // Compute normal velocity\r\n                          vn1 = b2Dot(dv1, normal);\r\n                          vn2 = b2Dot(dv2, normal);\r\n              \r\n                          b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                          b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                          #endif\r\n                          */\r\n                          break;\r\n                      }\r\n                      //\r\n                      // Case 2: vn1 = 0 and x2 = 0\r\n                      //\r\n                      //   0 = a11 * x1 + a12 * 0 + b1'\r\n                      // vn2 = a21 * x1 + a22 * 0 + b2'\r\n                      //\r\n                      x.x = (-cp1.normalMass * b.x);\r\n                      x.y = 0;\r\n                      vn1 = 0;\r\n                      vn2 = vc.K.ex.y * x.x + b.y;\r\n                      if (x.x >= 0 && vn2 >= 0) {\r\n                          // Get the incremental impulse\r\n                          // b2Vec2 d = x - a;\r\n                          b2Vec2.SubVV(x, a, d);\r\n                          // Apply incremental impulse\r\n                          // b2Vec2 P1 = d.x * normal;\r\n                          b2Vec2.MulSV(d.x, normal, P1);\r\n                          // b2Vec2 P2 = d.y * normal;\r\n                          b2Vec2.MulSV(d.y, normal, P2);\r\n                          b2Vec2.AddVV(P1, P2, P1P2);\r\n                          // vA -= mA * (P1 + P2);\r\n                          vA.SelfMulSub(mA, P1P2);\r\n                          // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                          wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                          // vB += mB * (P1 + P2);\r\n                          vB.SelfMulAdd(mB, P1P2);\r\n                          // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                          wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                          // Accumulate\r\n                          cp1.normalImpulse = x.x;\r\n                          cp2.normalImpulse = x.y;\r\n                          /*\r\n                          #if B2_DEBUG_SOLVER === 1\r\n                          // Postconditions\r\n                          dv1 = vB + b2Cross(wB, cp1->rB) - vA - b2Cross(wA, cp1->rA);\r\n              \r\n                          // Compute normal velocity\r\n                          vn1 = b2Dot(dv1, normal);\r\n              \r\n                          b2Assert(b2Abs(vn1 - cp1->velocityBias) < k_errorTol);\r\n                          #endif\r\n                          */\r\n                          break;\r\n                      }\r\n                      //\r\n                      // Case 3: vn2 = 0 and x1 = 0\r\n                      //\r\n                      // vn1 = a11 * 0 + a12 * x2 + b1'\r\n                      //   0 = a21 * 0 + a22 * x2 + b2'\r\n                      //\r\n                      x.x = 0;\r\n                      x.y = (-cp2.normalMass * b.y);\r\n                      vn1 = vc.K.ey.x * x.y + b.x;\r\n                      vn2 = 0;\r\n                      if (x.y >= 0 && vn1 >= 0) {\r\n                          // Resubstitute for the incremental impulse\r\n                          // b2Vec2 d = x - a;\r\n                          b2Vec2.SubVV(x, a, d);\r\n                          // Apply incremental impulse\r\n                          // b2Vec2 P1 = d.x * normal;\r\n                          b2Vec2.MulSV(d.x, normal, P1);\r\n                          // b2Vec2 P2 = d.y * normal;\r\n                          b2Vec2.MulSV(d.y, normal, P2);\r\n                          b2Vec2.AddVV(P1, P2, P1P2);\r\n                          // vA -= mA * (P1 + P2);\r\n                          vA.SelfMulSub(mA, P1P2);\r\n                          // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                          wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                          // vB += mB * (P1 + P2);\r\n                          vB.SelfMulAdd(mB, P1P2);\r\n                          // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                          wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                          // Accumulate\r\n                          cp1.normalImpulse = x.x;\r\n                          cp2.normalImpulse = x.y;\r\n                          /*\r\n                          #if B2_DEBUG_SOLVER === 1\r\n                          // Postconditions\r\n                          dv2 = vB + b2Cross(wB, cp2->rB) - vA - b2Cross(wA, cp2->rA);\r\n              \r\n                          // Compute normal velocity\r\n                          vn2 = b2Dot(dv2, normal);\r\n              \r\n                          b2Assert(b2Abs(vn2 - cp2->velocityBias) < k_errorTol);\r\n                          #endif\r\n                          */\r\n                          break;\r\n                      }\r\n                      //\r\n                      // Case 4: x1 = 0 and x2 = 0\r\n                      //\r\n                      // vn1 = b1\r\n                      // vn2 = b2;\r\n                      x.x = 0;\r\n                      x.y = 0;\r\n                      vn1 = b.x;\r\n                      vn2 = b.y;\r\n                      if (vn1 >= 0 && vn2 >= 0) {\r\n                          // Resubstitute for the incremental impulse\r\n                          // b2Vec2 d = x - a;\r\n                          b2Vec2.SubVV(x, a, d);\r\n                          // Apply incremental impulse\r\n                          // b2Vec2 P1 = d.x * normal;\r\n                          b2Vec2.MulSV(d.x, normal, P1);\r\n                          // b2Vec2 P2 = d.y * normal;\r\n                          b2Vec2.MulSV(d.y, normal, P2);\r\n                          b2Vec2.AddVV(P1, P2, P1P2);\r\n                          // vA -= mA * (P1 + P2);\r\n                          vA.SelfMulSub(mA, P1P2);\r\n                          // wA -= iA * (b2Cross(cp1->rA, P1) + b2Cross(cp2->rA, P2));\r\n                          wA -= iA * (b2Vec2.CrossVV(cp1.rA, P1) + b2Vec2.CrossVV(cp2.rA, P2));\r\n                          // vB += mB * (P1 + P2);\r\n                          vB.SelfMulAdd(mB, P1P2);\r\n                          // wB += iB * (b2Cross(cp1->rB, P1) + b2Cross(cp2->rB, P2));\r\n                          wB += iB * (b2Vec2.CrossVV(cp1.rB, P1) + b2Vec2.CrossVV(cp2.rB, P2));\r\n                          // Accumulate\r\n                          cp1.normalImpulse = x.x;\r\n                          cp2.normalImpulse = x.y;\r\n                          break;\r\n                      }\r\n                      // No solution, give up. This is hit sometimes, but it doesn't seem to matter.\r\n                      break;\r\n                  }\r\n              }\r\n              // this.m_velocities[indexA].v = vA;\r\n              this.m_velocities[indexA].w = wA;\r\n              // this.m_velocities[indexB].v = vB;\r\n              this.m_velocities[indexB].w = wB;\r\n          }\r\n      }\r\n      StoreImpulses() {\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const vc = this.m_velocityConstraints[i];\r\n              const manifold = this.m_contacts[vc.contactIndex].GetManifold();\r\n              for (let j = 0; j < vc.pointCount; ++j) {\r\n                  manifold.points[j].normalImpulse = vc.points[j].normalImpulse;\r\n                  manifold.points[j].tangentImpulse = vc.points[j].tangentImpulse;\r\n              }\r\n          }\r\n      }\r\n      SolvePositionConstraints() {\r\n          const xfA = b2ContactSolver.SolvePositionConstraints_s_xfA;\r\n          const xfB = b2ContactSolver.SolvePositionConstraints_s_xfB;\r\n          const psm = b2ContactSolver.SolvePositionConstraints_s_psm;\r\n          const rA = b2ContactSolver.SolvePositionConstraints_s_rA;\r\n          const rB = b2ContactSolver.SolvePositionConstraints_s_rB;\r\n          const P = b2ContactSolver.SolvePositionConstraints_s_P;\r\n          let minSeparation = 0;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const pc = this.m_positionConstraints[i];\r\n              const indexA = pc.indexA;\r\n              const indexB = pc.indexB;\r\n              const localCenterA = pc.localCenterA;\r\n              const mA = pc.invMassA;\r\n              const iA = pc.invIA;\r\n              const localCenterB = pc.localCenterB;\r\n              const mB = pc.invMassB;\r\n              const iB = pc.invIB;\r\n              const pointCount = pc.pointCount;\r\n              const cA = this.m_positions[indexA].c;\r\n              let aA = this.m_positions[indexA].a;\r\n              const cB = this.m_positions[indexB].c;\r\n              let aB = this.m_positions[indexB].a;\r\n              // Solve normal constraints\r\n              for (let j = 0; j < pointCount; ++j) {\r\n                  xfA.q.SetAngle(aA);\r\n                  xfB.q.SetAngle(aB);\r\n                  b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                  b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                  psm.Initialize(pc, xfA, xfB, j);\r\n                  const normal = psm.normal;\r\n                  const point = psm.point;\r\n                  const separation = psm.separation;\r\n                  // b2Vec2 rA = point - cA;\r\n                  b2Vec2.SubVV(point, cA, rA);\r\n                  // b2Vec2 rB = point - cB;\r\n                  b2Vec2.SubVV(point, cB, rB);\r\n                  // Track max constraint error.\r\n                  minSeparation = b2Min(minSeparation, separation);\r\n                  // Prevent large corrections and allow slop.\r\n                  const C = b2Clamp(b2_baumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                  // Compute the effective mass.\r\n                  // float32 rnA = b2Cross(rA, normal);\r\n                  const rnA = b2Vec2.CrossVV(rA, normal);\r\n                  // float32 rnB = b2Cross(rB, normal);\r\n                  const rnB = b2Vec2.CrossVV(rB, normal);\r\n                  // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                  const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                  // Compute normal impulse\r\n                  const impulse = K > 0 ? -C / K : 0;\r\n                  // b2Vec2 P = impulse * normal;\r\n                  b2Vec2.MulSV(impulse, normal, P);\r\n                  // cA -= mA * P;\r\n                  cA.SelfMulSub(mA, P);\r\n                  // aA -= iA * b2Cross(rA, P);\r\n                  aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                  // cB += mB * P;\r\n                  cB.SelfMulAdd(mB, P);\r\n                  // aB += iB * b2Cross(rB, P);\r\n                  aB += iB * b2Vec2.CrossVV(rB, P);\r\n              }\r\n              // this.m_positions[indexA].c = cA;\r\n              this.m_positions[indexA].a = aA;\r\n              // this.m_positions[indexB].c = cB;\r\n              this.m_positions[indexB].a = aB;\r\n          }\r\n          // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n          // push the separation above -b2_linearSlop.\r\n          return minSeparation > (-3 * b2_linearSlop);\r\n      }\r\n      SolveTOIPositionConstraints(toiIndexA, toiIndexB) {\r\n          const xfA = b2ContactSolver.SolveTOIPositionConstraints_s_xfA;\r\n          const xfB = b2ContactSolver.SolveTOIPositionConstraints_s_xfB;\r\n          const psm = b2ContactSolver.SolveTOIPositionConstraints_s_psm;\r\n          const rA = b2ContactSolver.SolveTOIPositionConstraints_s_rA;\r\n          const rB = b2ContactSolver.SolveTOIPositionConstraints_s_rB;\r\n          const P = b2ContactSolver.SolveTOIPositionConstraints_s_P;\r\n          let minSeparation = 0;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              const pc = this.m_positionConstraints[i];\r\n              const indexA = pc.indexA;\r\n              const indexB = pc.indexB;\r\n              const localCenterA = pc.localCenterA;\r\n              const localCenterB = pc.localCenterB;\r\n              const pointCount = pc.pointCount;\r\n              let mA = 0;\r\n              let iA = 0;\r\n              if (indexA === toiIndexA || indexA === toiIndexB) {\r\n                  mA = pc.invMassA;\r\n                  iA = pc.invIA;\r\n              }\r\n              let mB = 0;\r\n              let iB = 0;\r\n              if (indexB === toiIndexA || indexB === toiIndexB) {\r\n                  mB = pc.invMassB;\r\n                  iB = pc.invIB;\r\n              }\r\n              const cA = this.m_positions[indexA].c;\r\n              let aA = this.m_positions[indexA].a;\r\n              const cB = this.m_positions[indexB].c;\r\n              let aB = this.m_positions[indexB].a;\r\n              // Solve normal constraints\r\n              for (let j = 0; j < pointCount; ++j) {\r\n                  xfA.q.SetAngle(aA);\r\n                  xfB.q.SetAngle(aB);\r\n                  b2Vec2.SubVV(cA, b2Rot.MulRV(xfA.q, localCenterA, b2Vec2.s_t0), xfA.p);\r\n                  b2Vec2.SubVV(cB, b2Rot.MulRV(xfB.q, localCenterB, b2Vec2.s_t0), xfB.p);\r\n                  psm.Initialize(pc, xfA, xfB, j);\r\n                  const normal = psm.normal;\r\n                  const point = psm.point;\r\n                  const separation = psm.separation;\r\n                  // b2Vec2 rA = point - cA;\r\n                  b2Vec2.SubVV(point, cA, rA);\r\n                  // b2Vec2 rB = point - cB;\r\n                  b2Vec2.SubVV(point, cB, rB);\r\n                  // Track max constraint error.\r\n                  minSeparation = b2Min(minSeparation, separation);\r\n                  // Prevent large corrections and allow slop.\r\n                  const C = b2Clamp(b2_toiBaumgarte * (separation + b2_linearSlop), (-b2_maxLinearCorrection), 0);\r\n                  // Compute the effective mass.\r\n                  // float32 rnA = b2Cross(rA, normal);\r\n                  const rnA = b2Vec2.CrossVV(rA, normal);\r\n                  // float32 rnB = b2Cross(rB, normal);\r\n                  const rnB = b2Vec2.CrossVV(rB, normal);\r\n                  // float32 K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                  const K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\r\n                  // Compute normal impulse\r\n                  const impulse = K > 0 ? -C / K : 0;\r\n                  // b2Vec2 P = impulse * normal;\r\n                  b2Vec2.MulSV(impulse, normal, P);\r\n                  // cA -= mA * P;\r\n                  cA.SelfMulSub(mA, P);\r\n                  // aA -= iA * b2Cross(rA, P);\r\n                  aA -= iA * b2Vec2.CrossVV(rA, P);\r\n                  // cB += mB * P;\r\n                  cB.SelfMulAdd(mB, P);\r\n                  // aB += iB * b2Cross(rB, P);\r\n                  aB += iB * b2Vec2.CrossVV(rB, P);\r\n              }\r\n              // this.m_positions[indexA].c = cA;\r\n              this.m_positions[indexA].a = aA;\r\n              // this.m_positions[indexB].c = cB;\r\n              this.m_positions[indexB].a = aB;\r\n          }\r\n          // We can't expect minSpeparation >= -b2_linearSlop because we don't\r\n          // push the separation above -b2_linearSlop.\r\n          return minSeparation >= -1.5 * b2_linearSlop;\r\n      }\r\n  }\r\n  b2ContactSolver.InitializeVelocityConstraints_s_xfA = new b2Transform();\r\n  b2ContactSolver.InitializeVelocityConstraints_s_xfB = new b2Transform();\r\n  b2ContactSolver.InitializeVelocityConstraints_s_worldManifold = new b2WorldManifold();\r\n  b2ContactSolver.WarmStart_s_P = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_dv = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_dv1 = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_dv2 = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_P = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_a = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_b = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_x = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_d = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_P1 = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_P2 = new b2Vec2();\r\n  b2ContactSolver.SolveVelocityConstraints_s_P1P2 = new b2Vec2();\r\n  b2ContactSolver.SolvePositionConstraints_s_xfA = new b2Transform();\r\n  b2ContactSolver.SolvePositionConstraints_s_xfB = new b2Transform();\r\n  b2ContactSolver.SolvePositionConstraints_s_psm = new b2PositionSolverManifold();\r\n  b2ContactSolver.SolvePositionConstraints_s_rA = new b2Vec2();\r\n  b2ContactSolver.SolvePositionConstraints_s_rB = new b2Vec2();\r\n  b2ContactSolver.SolvePositionConstraints_s_P = new b2Vec2();\r\n  b2ContactSolver.SolveTOIPositionConstraints_s_xfA = new b2Transform();\r\n  b2ContactSolver.SolveTOIPositionConstraints_s_xfB = new b2Transform();\r\n  b2ContactSolver.SolveTOIPositionConstraints_s_psm = new b2PositionSolverManifold();\r\n  b2ContactSolver.SolveTOIPositionConstraints_s_rA = new b2Vec2();\r\n  b2ContactSolver.SolveTOIPositionConstraints_s_rB = new b2Vec2();\r\n  b2ContactSolver.SolveTOIPositionConstraints_s_P = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  /*\r\n  Position Correction Notes\r\n  =========================\r\n  I tried the several algorithms for position correction of the 2D revolute joint.\r\n  I looked at these systems:\r\n  - simple pendulum (1m diameter sphere on massless 5m stick) with initial angular velocity of 100 rad/s.\r\n  - suspension bridge with 30 1m long planks of length 1m.\r\n  - multi-link chain with 30 1m long links.\r\n\r\n  Here are the algorithms:\r\n\r\n  Baumgarte - A fraction of the position error is added to the velocity error. There is no\r\n  separate position solver.\r\n\r\n  Pseudo Velocities - After the velocity solver and position integration,\r\n  the position error, Jacobian, and effective mass are recomputed. Then\r\n  the velocity constraints are solved with pseudo velocities and a fraction\r\n  of the position error is added to the pseudo velocity error. The pseudo\r\n  velocities are initialized to zero and there is no warm-starting. After\r\n  the position solver, the pseudo velocities are added to the positions.\r\n  This is also called the First Order World method or the Position LCP method.\r\n\r\n  Modified Nonlinear Gauss-Seidel (NGS) - Like Pseudo Velocities except the\r\n  position error is re-computed for each constraint and the positions are updated\r\n  after the constraint is solved. The radius vectors (aka Jacobians) are\r\n  re-computed too (otherwise the algorithm has horrible instability). The pseudo\r\n  velocity states are not needed because they are effectively zero at the beginning\r\n  of each iteration. Since we have the current position error, we allow the\r\n  iterations to terminate early if the error becomes smaller than b2_linearSlop.\r\n\r\n  Full NGS or just NGS - Like Modified NGS except the effective mass are re-computed\r\n  each time a constraint is solved.\r\n\r\n  Here are the results:\r\n  Baumgarte - this is the cheapest algorithm but it has some stability problems,\r\n  especially with the bridge. The chain links separate easily close to the root\r\n  and they jitter as they struggle to pull together. This is one of the most common\r\n  methods in the field. The big drawback is that the position correction artificially\r\n  affects the momentum, thus leading to instabilities and false bounce. I used a\r\n  bias factor of 0.2. A larger bias factor makes the bridge less stable, a smaller\r\n  factor makes joints and contacts more spongy.\r\n\r\n  Pseudo Velocities - the is more stable than the Baumgarte method. The bridge is\r\n  stable. However, joints still separate with large angular velocities. Drag the\r\n  simple pendulum in a circle quickly and the joint will separate. The chain separates\r\n  easily and does not recover. I used a bias factor of 0.2. A larger value lead to\r\n  the bridge collapsing when a heavy cube drops on it.\r\n\r\n  Modified NGS - this algorithm is better in some ways than Baumgarte and Pseudo\r\n  Velocities, but in other ways it is worse. The bridge and chain are much more\r\n  stable, but the simple pendulum goes unstable at high angular velocities.\r\n\r\n  Full NGS - stable in all tests. The joints display good stiffness. The bridge\r\n  still sags, but this is better than infinite forces.\r\n\r\n  Recommendations\r\n  Pseudo Velocities are not really worthwhile because the bridge and chain cannot\r\n  recover from joint separation. In other cases the benefit over Baumgarte is small.\r\n\r\n  Modified NGS is not a robust method for the revolute joint due to the violent\r\n  instability seen in the simple pendulum. Perhaps it is viable with other constraint\r\n  types, especially scalar constraints where the effective mass is a scalar.\r\n\r\n  This leaves Baumgarte and Full NGS. Baumgarte has small, but manageable instabilities\r\n  and is very fast. I don't think we can escape Baumgarte, especially in highly\r\n  demanding cases where high constraint fidelity is not needed.\r\n\r\n  Full NGS is robust and easy on the eyes. I recommend this as an option for\r\n  higher fidelity simulation and certainly for suspension bridges and long chains.\r\n  Full NGS might be a good choice for ragdolls, especially motorized ragdolls where\r\n  joint separation can be problematic. The number of NGS iterations can be reduced\r\n  for better performance without harming robustness much.\r\n\r\n  Each joint in a can be handled differently in the position solver. So I recommend\r\n  a system where the user can select the algorithm on a per joint basis. I would\r\n  probably default to the slower Full NGS and let the user select the faster\r\n  Baumgarte method in performance critical scenarios.\r\n  */\r\n  /*\r\n  Cache Performance\r\n\r\n  The Box2D solvers are dominated by cache misses. Data structures are designed\r\n  to increase the number of cache hits. Much of misses are due to random access\r\n  to body data. The constraint structures are iterated over linearly, which leads\r\n  to few cache misses.\r\n\r\n  The bodies are not accessed during iteration. Instead read only data, such as\r\n  the mass values are stored with the constraints. The mutable data are the constraint\r\n  impulses and the bodies velocities/positions. The impulses are held inside the\r\n  constraint structures. The body velocities/positions are held in compact, temporary\r\n  arrays to increase the number of cache hits. Linear and angular velocity are\r\n  stored in a single array since multiple arrays lead to multiple misses.\r\n  */\r\n  /*\r\n  2D Rotation\r\n\r\n  R = [cos(theta) -sin(theta)]\r\n      [sin(theta) cos(theta) ]\r\n\r\n  thetaDot = omega\r\n\r\n  Let q1 = cos(theta), q2 = sin(theta).\r\n  R = [q1 -q2]\r\n      [q2  q1]\r\n\r\n  q1Dot = -thetaDot * q2\r\n  q2Dot = thetaDot * q1\r\n\r\n  q1_new = q1_old - dt * w * q2\r\n  q2_new = q2_old + dt * w * q1\r\n  then normalize.\r\n\r\n  This might be faster than computing sin+cos.\r\n  However, we can compute sin+cos of the same angle fast.\r\n  */\r\n  class b2Island {\r\n      constructor() {\r\n          this.m_allocator = null;\r\n          this.m_bodies = [ /*1024*/]; // TODO: b2Settings\r\n          this.m_contacts = [ /*1024*/]; // TODO: b2Settings\r\n          this.m_joints = [ /*1024*/]; // TODO: b2Settings\r\n          this.m_positions = b2Position.MakeArray(1024); // TODO: b2Settings\r\n          this.m_velocities = b2Velocity.MakeArray(1024); // TODO: b2Settings\r\n          this.m_bodyCount = 0;\r\n          this.m_jointCount = 0;\r\n          this.m_contactCount = 0;\r\n          this.m_bodyCapacity = 0;\r\n          this.m_contactCapacity = 0;\r\n          this.m_jointCapacity = 0;\r\n      }\r\n      Initialize(bodyCapacity, contactCapacity, jointCapacity, allocator, listener) {\r\n          this.m_bodyCapacity = bodyCapacity;\r\n          this.m_contactCapacity = contactCapacity;\r\n          this.m_jointCapacity = jointCapacity;\r\n          this.m_bodyCount = 0;\r\n          this.m_contactCount = 0;\r\n          this.m_jointCount = 0;\r\n          this.m_allocator = allocator;\r\n          this.m_listener = listener;\r\n          // TODO:\r\n          // while (this.m_bodies.length < bodyCapacity) {\r\n          //   this.m_bodies[this.m_bodies.length] = null;\r\n          // }\r\n          // TODO:\r\n          // while (this.m_contacts.length < contactCapacity) {\r\n          //   this.m_contacts[this.m_contacts.length] = null;\r\n          // }\r\n          // TODO:\r\n          // while (this.m_joints.length < jointCapacity) {\r\n          //   this.m_joints[this.m_joints.length] = null;\r\n          // }\r\n          // TODO:\r\n          if (this.m_positions.length < bodyCapacity) {\r\n              const new_length = b2Max(this.m_positions.length * 2, bodyCapacity);\r\n              while (this.m_positions.length < new_length) {\r\n                  this.m_positions[this.m_positions.length] = new b2Position();\r\n              }\r\n          }\r\n          // TODO:\r\n          if (this.m_velocities.length < bodyCapacity) {\r\n              const new_length = b2Max(this.m_velocities.length * 2, bodyCapacity);\r\n              while (this.m_velocities.length < new_length) {\r\n                  this.m_velocities[this.m_velocities.length] = new b2Velocity();\r\n              }\r\n          }\r\n      }\r\n      Clear() {\r\n          this.m_bodyCount = 0;\r\n          this.m_contactCount = 0;\r\n          this.m_jointCount = 0;\r\n      }\r\n      AddBody(body) {\r\n          // DEBUG: b2Assert(this.m_bodyCount < this.m_bodyCapacity);\r\n          body.m_islandIndex = this.m_bodyCount;\r\n          this.m_bodies[this.m_bodyCount++] = body;\r\n      }\r\n      AddContact(contact) {\r\n          // DEBUG: b2Assert(this.m_contactCount < this.m_contactCapacity);\r\n          this.m_contacts[this.m_contactCount++] = contact;\r\n      }\r\n      AddJoint(joint) {\r\n          // DEBUG: b2Assert(this.m_jointCount < this.m_jointCapacity);\r\n          this.m_joints[this.m_jointCount++] = joint;\r\n      }\r\n      Solve(profile, step, gravity, allowSleep) {\r\n          const timer = b2Island.s_timer.Reset();\r\n          const h = step.dt;\r\n          // Integrate velocities and apply damping. Initialize the body state.\r\n          for (let i = 0; i < this.m_bodyCount; ++i) {\r\n              const b = this.m_bodies[i];\r\n              // const c: b2Vec2 =\r\n              this.m_positions[i].c.Copy(b.m_sweep.c);\r\n              const a = b.m_sweep.a;\r\n              const v = this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n              let w = b.m_angularVelocity;\r\n              // Store positions for continuous collision.\r\n              b.m_sweep.c0.Copy(b.m_sweep.c);\r\n              b.m_sweep.a0 = b.m_sweep.a;\r\n              if (b.m_type === exports.b2BodyType.b2_dynamicBody) {\r\n                  // Integrate velocities.\r\n                  v.x += h * (b.m_gravityScale * gravity.x + b.m_invMass * b.m_force.x);\r\n                  v.y += h * (b.m_gravityScale * gravity.y + b.m_invMass * b.m_force.y);\r\n                  w += h * b.m_invI * b.m_torque;\r\n                  // Apply damping.\r\n                  // ODE: dv/dt + c * v = 0\r\n                  // Solution: v(t) = v0 * exp(-c * t)\r\n                  // Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\r\n                  // v2 = exp(-c * dt) * v1\r\n                  // Pade approximation:\r\n                  // v2 = v1 * 1 / (1 + c * dt)\r\n                  v.SelfMul(1.0 / (1.0 + h * b.m_linearDamping));\r\n                  w *= 1.0 / (1.0 + h * b.m_angularDamping);\r\n              }\r\n              // this.m_positions[i].c = c;\r\n              this.m_positions[i].a = a;\r\n              // this.m_velocities[i].v = v;\r\n              this.m_velocities[i].w = w;\r\n          }\r\n          timer.Reset();\r\n          // Solver data\r\n          const solverData = b2Island.s_solverData;\r\n          solverData.step.Copy(step);\r\n          solverData.positions = this.m_positions;\r\n          solverData.velocities = this.m_velocities;\r\n          // Initialize velocity constraints.\r\n          const contactSolverDef = b2Island.s_contactSolverDef;\r\n          contactSolverDef.step.Copy(step);\r\n          contactSolverDef.contacts = this.m_contacts;\r\n          contactSolverDef.count = this.m_contactCount;\r\n          contactSolverDef.positions = this.m_positions;\r\n          contactSolverDef.velocities = this.m_velocities;\r\n          contactSolverDef.allocator = this.m_allocator;\r\n          const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n          contactSolver.InitializeVelocityConstraints();\r\n          if (step.warmStarting) {\r\n              contactSolver.WarmStart();\r\n          }\r\n          for (let i = 0; i < this.m_jointCount; ++i) {\r\n              this.m_joints[i].InitVelocityConstraints(solverData);\r\n          }\r\n          profile.solveInit = timer.GetMilliseconds();\r\n          // Solve velocity constraints.\r\n          timer.Reset();\r\n          for (let i = 0; i < step.velocityIterations; ++i) {\r\n              for (let j = 0; j < this.m_jointCount; ++j) {\r\n                  this.m_joints[j].SolveVelocityConstraints(solverData);\r\n              }\r\n              contactSolver.SolveVelocityConstraints();\r\n          }\r\n          // Store impulses for warm starting\r\n          contactSolver.StoreImpulses();\r\n          profile.solveVelocity = timer.GetMilliseconds();\r\n          // Integrate positions.\r\n          for (let i = 0; i < this.m_bodyCount; ++i) {\r\n              const c = this.m_positions[i].c;\r\n              let a = this.m_positions[i].a;\r\n              const v = this.m_velocities[i].v;\r\n              let w = this.m_velocities[i].w;\r\n              // Check for large velocities\r\n              const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n              if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                  const ratio = b2_maxTranslation / translation.Length();\r\n                  v.SelfMul(ratio);\r\n              }\r\n              const rotation = h * w;\r\n              if (rotation * rotation > b2_maxRotationSquared) {\r\n                  const ratio = b2_maxRotation / b2Abs(rotation);\r\n                  w *= ratio;\r\n              }\r\n              // Integrate\r\n              c.x += h * v.x;\r\n              c.y += h * v.y;\r\n              a += h * w;\r\n              // this.m_positions[i].c = c;\r\n              this.m_positions[i].a = a;\r\n              // this.m_velocities[i].v = v;\r\n              this.m_velocities[i].w = w;\r\n          }\r\n          // Solve position constraints\r\n          timer.Reset();\r\n          let positionSolved = false;\r\n          for (let i = 0; i < step.positionIterations; ++i) {\r\n              const contactsOkay = contactSolver.SolvePositionConstraints();\r\n              let jointsOkay = true;\r\n              for (let j = 0; j < this.m_jointCount; ++j) {\r\n                  const jointOkay = this.m_joints[j].SolvePositionConstraints(solverData);\r\n                  jointsOkay = jointsOkay && jointOkay;\r\n              }\r\n              if (contactsOkay && jointsOkay) {\r\n                  // Exit early if the position errors are small.\r\n                  positionSolved = true;\r\n                  break;\r\n              }\r\n          }\r\n          // Copy state buffers back to the bodies\r\n          for (let i = 0; i < this.m_bodyCount; ++i) {\r\n              const body = this.m_bodies[i];\r\n              body.m_sweep.c.Copy(this.m_positions[i].c);\r\n              body.m_sweep.a = this.m_positions[i].a;\r\n              body.m_linearVelocity.Copy(this.m_velocities[i].v);\r\n              body.m_angularVelocity = this.m_velocities[i].w;\r\n              body.SynchronizeTransform();\r\n          }\r\n          profile.solvePosition = timer.GetMilliseconds();\r\n          this.Report(contactSolver.m_velocityConstraints);\r\n          if (allowSleep) {\r\n              let minSleepTime = b2_maxFloat;\r\n              const linTolSqr = b2_linearSleepTolerance * b2_linearSleepTolerance;\r\n              const angTolSqr = b2_angularSleepTolerance * b2_angularSleepTolerance;\r\n              for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                  const b = this.m_bodies[i];\r\n                  if (b.GetType() === exports.b2BodyType.b2_staticBody) {\r\n                      continue;\r\n                  }\r\n                  if (!b.m_autoSleepFlag ||\r\n                      b.m_angularVelocity * b.m_angularVelocity > angTolSqr ||\r\n                      b2Vec2.DotVV(b.m_linearVelocity, b.m_linearVelocity) > linTolSqr) {\r\n                      b.m_sleepTime = 0;\r\n                      minSleepTime = 0;\r\n                  }\r\n                  else {\r\n                      b.m_sleepTime += h;\r\n                      minSleepTime = b2Min(minSleepTime, b.m_sleepTime);\r\n                  }\r\n              }\r\n              if (minSleepTime >= b2_timeToSleep && positionSolved) {\r\n                  for (let i = 0; i < this.m_bodyCount; ++i) {\r\n                      const b = this.m_bodies[i];\r\n                      b.SetAwake(false);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      SolveTOI(subStep, toiIndexA, toiIndexB) {\r\n          // DEBUG: b2Assert(toiIndexA < this.m_bodyCount);\r\n          // DEBUG: b2Assert(toiIndexB < this.m_bodyCount);\r\n          // Initialize the body state.\r\n          for (let i = 0; i < this.m_bodyCount; ++i) {\r\n              const b = this.m_bodies[i];\r\n              this.m_positions[i].c.Copy(b.m_sweep.c);\r\n              this.m_positions[i].a = b.m_sweep.a;\r\n              this.m_velocities[i].v.Copy(b.m_linearVelocity);\r\n              this.m_velocities[i].w = b.m_angularVelocity;\r\n          }\r\n          const contactSolverDef = b2Island.s_contactSolverDef;\r\n          contactSolverDef.contacts = this.m_contacts;\r\n          contactSolverDef.count = this.m_contactCount;\r\n          contactSolverDef.allocator = this.m_allocator;\r\n          contactSolverDef.step.Copy(subStep);\r\n          contactSolverDef.positions = this.m_positions;\r\n          contactSolverDef.velocities = this.m_velocities;\r\n          const contactSolver = b2Island.s_contactSolver.Initialize(contactSolverDef);\r\n          // Solve position constraints.\r\n          for (let i = 0; i < subStep.positionIterations; ++i) {\r\n              const contactsOkay = contactSolver.SolveTOIPositionConstraints(toiIndexA, toiIndexB);\r\n              if (contactsOkay) {\r\n                  break;\r\n              }\r\n          }\r\n          /*\r\n          #if 0\r\n            // Is the new position really safe?\r\n            for (int32 i = 0; i < this.m_contactCount; ++i) {\r\n              b2Contact* c = this.m_contacts[i];\r\n              b2Fixture* fA = c.GetFixtureA();\r\n              b2Fixture* fB = c.GetFixtureB();\r\n        \r\n              b2Body* bA = fA.GetBody();\r\n              b2Body* bB = fB.GetBody();\r\n        \r\n              int32 indexA = c.GetChildIndexA();\r\n              int32 indexB = c.GetChildIndexB();\r\n        \r\n              b2DistanceInput input;\r\n              input.proxyA.Set(fA.GetShape(), indexA);\r\n              input.proxyB.Set(fB.GetShape(), indexB);\r\n              input.transformA = bA.GetTransform();\r\n              input.transformB = bB.GetTransform();\r\n              input.useRadii = false;\r\n        \r\n              b2DistanceOutput output;\r\n              b2SimplexCache cache;\r\n              cache.count = 0;\r\n              b2Distance(&output, &cache, &input);\r\n        \r\n              if (output.distance === 0 || cache.count === 3) {\r\n                cache.count += 0;\r\n              }\r\n            }\r\n          #endif\r\n          */\r\n          // Leap of faith to new safe state.\r\n          this.m_bodies[toiIndexA].m_sweep.c0.Copy(this.m_positions[toiIndexA].c);\r\n          this.m_bodies[toiIndexA].m_sweep.a0 = this.m_positions[toiIndexA].a;\r\n          this.m_bodies[toiIndexB].m_sweep.c0.Copy(this.m_positions[toiIndexB].c);\r\n          this.m_bodies[toiIndexB].m_sweep.a0 = this.m_positions[toiIndexB].a;\r\n          // No warm starting is needed for TOI events because warm\r\n          // starting impulses were applied in the discrete solver.\r\n          contactSolver.InitializeVelocityConstraints();\r\n          // Solve velocity constraints.\r\n          for (let i = 0; i < subStep.velocityIterations; ++i) {\r\n              contactSolver.SolveVelocityConstraints();\r\n          }\r\n          // Don't store the TOI contact forces for warm starting\r\n          // because they can be quite large.\r\n          const h = subStep.dt;\r\n          // Integrate positions\r\n          for (let i = 0; i < this.m_bodyCount; ++i) {\r\n              const c = this.m_positions[i].c;\r\n              let a = this.m_positions[i].a;\r\n              const v = this.m_velocities[i].v;\r\n              let w = this.m_velocities[i].w;\r\n              // Check for large velocities\r\n              const translation = b2Vec2.MulSV(h, v, b2Island.s_translation);\r\n              if (b2Vec2.DotVV(translation, translation) > b2_maxTranslationSquared) {\r\n                  const ratio = b2_maxTranslation / translation.Length();\r\n                  v.SelfMul(ratio);\r\n              }\r\n              const rotation = h * w;\r\n              if (rotation * rotation > b2_maxRotationSquared) {\r\n                  const ratio = b2_maxRotation / b2Abs(rotation);\r\n                  w *= ratio;\r\n              }\r\n              // Integrate\r\n              c.SelfMulAdd(h, v);\r\n              a += h * w;\r\n              // this.m_positions[i].c = c;\r\n              this.m_positions[i].a = a;\r\n              // this.m_velocities[i].v = v;\r\n              this.m_velocities[i].w = w;\r\n              // Sync bodies\r\n              const body = this.m_bodies[i];\r\n              body.m_sweep.c.Copy(c);\r\n              body.m_sweep.a = a;\r\n              body.m_linearVelocity.Copy(v);\r\n              body.m_angularVelocity = w;\r\n              body.SynchronizeTransform();\r\n          }\r\n          this.Report(contactSolver.m_velocityConstraints);\r\n      }\r\n      Report(constraints) {\r\n          if (this.m_listener === null) {\r\n              return;\r\n          }\r\n          for (let i = 0; i < this.m_contactCount; ++i) {\r\n              const c = this.m_contacts[i];\r\n              if (!c) {\r\n                  continue;\r\n              }\r\n              const vc = constraints[i];\r\n              const impulse = b2Island.s_impulse;\r\n              impulse.count = vc.pointCount;\r\n              for (let j = 0; j < vc.pointCount; ++j) {\r\n                  impulse.normalImpulses[j] = vc.points[j].normalImpulse;\r\n                  impulse.tangentImpulses[j] = vc.points[j].tangentImpulse;\r\n              }\r\n              this.m_listener.PostSolve(c, impulse);\r\n          }\r\n      }\r\n  }\r\n  b2Island.s_timer = new b2Timer();\r\n  b2Island.s_solverData = new b2SolverData();\r\n  b2Island.s_contactSolverDef = new b2ContactSolverDef();\r\n  b2Island.s_contactSolver = new b2ContactSolver();\r\n  b2Island.s_translation = new b2Vec2();\r\n  b2Island.s_impulse = new b2ContactImpulse();\r\n\r\n  /*\r\n   * Copyright (c) 2013 Google, Inc.\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  (function (b2ParticleFlag) {\r\n      /// Water particle.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_waterParticle\"] = 0] = \"b2_waterParticle\";\r\n      /// Removed after next simulation step.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_zombieParticle\"] = 2] = \"b2_zombieParticle\";\r\n      /// Zero velocity.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_wallParticle\"] = 4] = \"b2_wallParticle\";\r\n      /// With restitution from stretching.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_springParticle\"] = 8] = \"b2_springParticle\";\r\n      /// With restitution from deformation.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_elasticParticle\"] = 16] = \"b2_elasticParticle\";\r\n      /// With viscosity.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_viscousParticle\"] = 32] = \"b2_viscousParticle\";\r\n      /// Without isotropic pressure.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_powderParticle\"] = 64] = \"b2_powderParticle\";\r\n      /// With surface tension.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_tensileParticle\"] = 128] = \"b2_tensileParticle\";\r\n      /// Mix color between contacting particles.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_colorMixingParticle\"] = 256] = \"b2_colorMixingParticle\";\r\n      /// Call b2DestructionListener on destruction.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_destructionListenerParticle\"] = 512] = \"b2_destructionListenerParticle\";\r\n      /// Prevents other particles from leaking.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_barrierParticle\"] = 1024] = \"b2_barrierParticle\";\r\n      /// Less compressibility.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_staticPressureParticle\"] = 2048] = \"b2_staticPressureParticle\";\r\n      /// Makes pairs or triads with other particles.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_reactiveParticle\"] = 4096] = \"b2_reactiveParticle\";\r\n      /// With high repulsive force.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_repulsiveParticle\"] = 8192] = \"b2_repulsiveParticle\";\r\n      /// Call b2ContactListener when this particle is about to interact with\r\n      /// a rigid body or stops interacting with a rigid body.\r\n      /// This results in an expensive operation compared to using\r\n      /// b2_fixtureContactFilterParticle to detect collisions between\r\n      /// particles.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactListenerParticle\"] = 16384] = \"b2_fixtureContactListenerParticle\";\r\n      /// Call b2ContactListener when this particle is about to interact with\r\n      /// another particle or stops interacting with another particle.\r\n      /// This results in an expensive operation compared to using\r\n      /// b2_particleContactFilterParticle to detect collisions between\r\n      /// particles.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_particleContactListenerParticle\"] = 32768] = \"b2_particleContactListenerParticle\";\r\n      /// Call b2ContactFilter when this particle interacts with rigid bodies.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_fixtureContactFilterParticle\"] = 65536] = \"b2_fixtureContactFilterParticle\";\r\n      /// Call b2ContactFilter when this particle interacts with other\r\n      /// particles.\r\n      b2ParticleFlag[b2ParticleFlag[\"b2_particleContactFilterParticle\"] = 131072] = \"b2_particleContactFilterParticle\";\r\n  })(exports.b2ParticleFlag || (exports.b2ParticleFlag = {}));\r\n  class b2ParticleDef {\r\n      constructor() {\r\n          this.flags = 0;\r\n          this.position = new b2Vec2();\r\n          this.velocity = new b2Vec2();\r\n          this.color = new b2Color(0, 0, 0, 0);\r\n          this.lifetime = 0.0;\r\n          this.userData = null;\r\n          this.group = null;\r\n      }\r\n  }\r\n  function b2CalculateParticleIterations(gravity, radius, timeStep) {\r\n      // In some situations you may want more particle iterations than this,\r\n      // but to avoid excessive cycle cost, don't recommend more than this.\r\n      const B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS = 8;\r\n      const B2_RADIUS_THRESHOLD = 0.01;\r\n      const iterations = Math.ceil(Math.sqrt(gravity / (B2_RADIUS_THRESHOLD * radius)) * timeStep);\r\n      return b2Clamp(iterations, 1, B2_MAX_RECOMMENDED_PARTICLE_ITERATIONS);\r\n  }\r\n  class b2ParticleHandle {\r\n      constructor() {\r\n          this.m_index = b2_invalidParticleIndex;\r\n      }\r\n      GetIndex() { return this.m_index; }\r\n      SetIndex(index) { this.m_index = index; }\r\n  }\r\n  // #endif\r\n\r\n  /*\r\n   * Copyright (c) 2013 Google, Inc.\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  (function (b2ParticleGroupFlag) {\r\n      /// Prevents overlapping or leaking.\r\n      b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_solidParticleGroup\"] = 1] = \"b2_solidParticleGroup\";\r\n      /// Keeps its shape.\r\n      b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_rigidParticleGroup\"] = 2] = \"b2_rigidParticleGroup\";\r\n      /// Won't be destroyed if it gets empty.\r\n      b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupCanBeEmpty\"] = 4] = \"b2_particleGroupCanBeEmpty\";\r\n      /// Will be destroyed on next simulation step.\r\n      b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupWillBeDestroyed\"] = 8] = \"b2_particleGroupWillBeDestroyed\";\r\n      /// Updates depth data on next simulation step.\r\n      b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupNeedsUpdateDepth\"] = 16] = \"b2_particleGroupNeedsUpdateDepth\";\r\n      b2ParticleGroupFlag[b2ParticleGroupFlag[\"b2_particleGroupInternalMask\"] = 24] = \"b2_particleGroupInternalMask\";\r\n  })(exports.b2ParticleGroupFlag || (exports.b2ParticleGroupFlag = {}));\r\n  class b2ParticleGroupDef {\r\n      constructor() {\r\n          this.flags = 0;\r\n          this.groupFlags = 0;\r\n          this.position = new b2Vec2();\r\n          this.angle = 0.0;\r\n          this.linearVelocity = new b2Vec2();\r\n          this.angularVelocity = 0.0;\r\n          this.color = new b2Color();\r\n          this.strength = 1.0;\r\n          this.shapeCount = 0;\r\n          this.stride = 0;\r\n          this.particleCount = 0;\r\n          this.lifetime = 0;\r\n          this.userData = null;\r\n          this.group = null;\r\n      }\r\n  }\r\n  class b2ParticleGroup {\r\n      constructor(system) {\r\n          this.m_firstIndex = 0;\r\n          this.m_lastIndex = 0;\r\n          this.m_groupFlags = 0;\r\n          this.m_strength = 1.0;\r\n          this.m_prev = null;\r\n          this.m_next = null;\r\n          this.m_timestamp = -1;\r\n          this.m_mass = 0.0;\r\n          this.m_inertia = 0.0;\r\n          this.m_center = new b2Vec2();\r\n          this.m_linearVelocity = new b2Vec2();\r\n          this.m_angularVelocity = 0.0;\r\n          this.m_transform = new b2Transform();\r\n          ///m_transform.SetIdentity();\r\n          this.m_userData = null;\r\n          this.m_system = system;\r\n      }\r\n      GetNext() {\r\n          return this.m_next;\r\n      }\r\n      GetParticleSystem() {\r\n          return this.m_system;\r\n      }\r\n      GetParticleCount() {\r\n          return this.m_lastIndex - this.m_firstIndex;\r\n      }\r\n      GetBufferIndex() {\r\n          return this.m_firstIndex;\r\n      }\r\n      ContainsParticle(index) {\r\n          return this.m_firstIndex <= index && index < this.m_lastIndex;\r\n      }\r\n      GetAllParticleFlags() {\r\n          if (!this.m_system.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          let flags = 0;\r\n          for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n              flags |= this.m_system.m_flagsBuffer.data[i];\r\n          }\r\n          return flags;\r\n      }\r\n      GetGroupFlags() {\r\n          return this.m_groupFlags;\r\n      }\r\n      SetGroupFlags(flags) {\r\n          // DEBUG: b2Assert((flags & b2ParticleGroupFlag.b2_particleGroupInternalMask) === 0);\r\n          flags |= this.m_groupFlags & exports.b2ParticleGroupFlag.b2_particleGroupInternalMask;\r\n          this.m_system.SetGroupFlags(this, flags);\r\n      }\r\n      GetMass() {\r\n          this.UpdateStatistics();\r\n          return this.m_mass;\r\n      }\r\n      GetInertia() {\r\n          this.UpdateStatistics();\r\n          return this.m_inertia;\r\n      }\r\n      GetCenter() {\r\n          this.UpdateStatistics();\r\n          return this.m_center;\r\n      }\r\n      GetLinearVelocity() {\r\n          this.UpdateStatistics();\r\n          return this.m_linearVelocity;\r\n      }\r\n      GetAngularVelocity() {\r\n          this.UpdateStatistics();\r\n          return this.m_angularVelocity;\r\n      }\r\n      GetTransform() {\r\n          return this.m_transform;\r\n      }\r\n      GetPosition() {\r\n          return this.m_transform.p;\r\n      }\r\n      GetAngle() {\r\n          return this.m_transform.q.GetAngle();\r\n      }\r\n      GetLinearVelocityFromWorldPoint(worldPoint, out) {\r\n          const s_t0 = b2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0;\r\n          this.UpdateStatistics();\r\n          ///  return m_linearVelocity + b2Cross(m_angularVelocity, worldPoint - m_center);\r\n          return b2Vec2.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, b2Vec2.SubVV(worldPoint, this.m_center, s_t0), out);\r\n      }\r\n      GetUserData() {\r\n          return this.m_userData;\r\n      }\r\n      SetUserData(data) {\r\n          this.m_userData = data;\r\n      }\r\n      ApplyForce(force) {\r\n          this.m_system.ApplyForce(this.m_firstIndex, this.m_lastIndex, force);\r\n      }\r\n      ApplyLinearImpulse(impulse) {\r\n          this.m_system.ApplyLinearImpulse(this.m_firstIndex, this.m_lastIndex, impulse);\r\n      }\r\n      DestroyParticles(callDestructionListener) {\r\n          if (this.m_system.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n              this.m_system.DestroyParticle(i, callDestructionListener);\r\n          }\r\n      }\r\n      UpdateStatistics() {\r\n          if (!this.m_system.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_system.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const p = new b2Vec2();\r\n          const v = new b2Vec2();\r\n          if (this.m_timestamp !== this.m_system.m_timestamp) {\r\n              const m = this.m_system.GetParticleMass();\r\n              ///  this.m_mass = 0;\r\n              this.m_mass = m * (this.m_lastIndex - this.m_firstIndex);\r\n              this.m_center.SetZero();\r\n              this.m_linearVelocity.SetZero();\r\n              for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                  ///  this.m_mass += m;\r\n                  ///  this.m_center += m * this.m_system.m_positionBuffer.data[i];\r\n                  this.m_center.SelfMulAdd(m, this.m_system.m_positionBuffer.data[i]);\r\n                  ///  this.m_linearVelocity += m * this.m_system.m_velocityBuffer.data[i];\r\n                  this.m_linearVelocity.SelfMulAdd(m, this.m_system.m_velocityBuffer.data[i]);\r\n              }\r\n              if (this.m_mass > 0) {\r\n                  const inv_mass = 1 / this.m_mass;\r\n                  ///this.m_center *= 1 / this.m_mass;\r\n                  this.m_center.SelfMul(inv_mass);\r\n                  ///this.m_linearVelocity *= 1 / this.m_mass;\r\n                  this.m_linearVelocity.SelfMul(inv_mass);\r\n              }\r\n              this.m_inertia = 0;\r\n              this.m_angularVelocity = 0;\r\n              for (let i = this.m_firstIndex; i < this.m_lastIndex; i++) {\r\n                  ///b2Vec2 p = this.m_system.m_positionBuffer.data[i] - this.m_center;\r\n                  b2Vec2.SubVV(this.m_system.m_positionBuffer.data[i], this.m_center, p);\r\n                  ///b2Vec2 v = this.m_system.m_velocityBuffer.data[i] - this.m_linearVelocity;\r\n                  b2Vec2.SubVV(this.m_system.m_velocityBuffer.data[i], this.m_linearVelocity, v);\r\n                  this.m_inertia += m * b2Vec2.DotVV(p, p);\r\n                  this.m_angularVelocity += m * b2Vec2.CrossVV(p, v);\r\n              }\r\n              if (this.m_inertia > 0) {\r\n                  this.m_angularVelocity *= 1 / this.m_inertia;\r\n              }\r\n              this.m_timestamp = this.m_system.m_timestamp;\r\n          }\r\n      }\r\n  }\r\n  b2ParticleGroup.GetLinearVelocityFromWorldPoint_s_t0 = new b2Vec2();\r\n  // #endif\r\n\r\n  /*\r\n   * Copyright (c) 2013 Google, Inc.\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  class b2StackQueue {\r\n      constructor(capacity) {\r\n          this.m_front = 0;\r\n          this.m_back = 0;\r\n          this.m_capacity = 0;\r\n          this.m_buffer = b2MakeArray(capacity, (index) => null);\r\n          this.m_capacity = capacity;\r\n      }\r\n      Push(item) {\r\n          if (this.m_back >= this.m_capacity) {\r\n              for (let i = this.m_front; i < this.m_back; i++) {\r\n                  this.m_buffer[i - this.m_front] = this.m_buffer[i];\r\n              }\r\n              this.m_back -= this.m_front;\r\n              this.m_front = 0;\r\n              if (this.m_back >= this.m_capacity) {\r\n                  if (this.m_capacity > 0) {\r\n                      this.m_buffer.concat(b2MakeArray(this.m_capacity, (index) => null));\r\n                      this.m_capacity *= 2;\r\n                  }\r\n                  else {\r\n                      this.m_buffer.concat(b2MakeArray(1, (index) => null));\r\n                      this.m_capacity = 1;\r\n                  }\r\n                  ///m_buffer = (T*) m_allocator->Reallocate(m_buffer, sizeof(T) * m_capacity);\r\n              }\r\n          }\r\n          this.m_buffer[this.m_back] = item;\r\n          this.m_back++;\r\n      }\r\n      Pop() {\r\n          // DEBUG: b2Assert(this.m_front < this.m_back);\r\n          this.m_buffer[this.m_front] = null;\r\n          this.m_front++;\r\n      }\r\n      Empty() {\r\n          // DEBUG: b2Assert(this.m_front <= this.m_back);\r\n          return this.m_front === this.m_back;\r\n      }\r\n      Front() {\r\n          const item = this.m_buffer[this.m_front];\r\n          if (!item) {\r\n              throw new Error();\r\n          }\r\n          return item;\r\n      }\r\n  }\r\n  // #endif\r\n\r\n  /*\r\n   * Copyright (c) 2013 Google, Inc.\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  /**\r\n   * A field representing the nearest generator from each point.\r\n   */\r\n  class b2VoronoiDiagram {\r\n      constructor(generatorCapacity) {\r\n          this.m_generatorCapacity = 0;\r\n          this.m_generatorCount = 0;\r\n          this.m_countX = 0;\r\n          this.m_countY = 0;\r\n          this.m_diagram = [];\r\n          this.m_generatorBuffer = b2MakeArray(generatorCapacity, (index) => new b2VoronoiDiagram.Generator());\r\n          this.m_generatorCapacity = generatorCapacity;\r\n      }\r\n      /**\r\n       * Add a generator.\r\n       *\r\n       * @param center the position of the generator.\r\n       * @param tag a tag used to identify the generator in callback functions.\r\n       * @param necessary whether to callback for nodes associated with the generator.\r\n       */\r\n      AddGenerator(center, tag, necessary) {\r\n          // DEBUG: b2Assert(this.m_generatorCount < this.m_generatorCapacity);\r\n          const g = this.m_generatorBuffer[this.m_generatorCount++];\r\n          g.center.Copy(center);\r\n          g.tag = tag;\r\n          g.necessary = necessary;\r\n      }\r\n      /**\r\n       * Generate the Voronoi diagram. It is rasterized with a given\r\n       * interval in the same range as the necessary generators exist.\r\n       *\r\n       * @param radius the interval of the diagram.\r\n       * @param margin margin for which the range of the diagram is extended.\r\n       */\r\n      Generate(radius, margin) {\r\n          const inverseRadius = 1 / radius;\r\n          const lower = new b2Vec2(+b2_maxFloat, +b2_maxFloat);\r\n          const upper = new b2Vec2(-b2_maxFloat, -b2_maxFloat);\r\n          let necessary_count = 0;\r\n          for (let k = 0; k < this.m_generatorCount; k++) {\r\n              const g = this.m_generatorBuffer[k];\r\n              if (g.necessary) {\r\n                  b2Vec2.MinV(lower, g.center, lower);\r\n                  b2Vec2.MaxV(upper, g.center, upper);\r\n                  ++necessary_count;\r\n              }\r\n          }\r\n          if (necessary_count === 0) {\r\n              ///debugger;\r\n              this.m_countX = 0;\r\n              this.m_countY = 0;\r\n              return;\r\n          }\r\n          lower.x -= margin;\r\n          lower.y -= margin;\r\n          upper.x += margin;\r\n          upper.y += margin;\r\n          this.m_countX = 1 + Math.floor(inverseRadius * (upper.x - lower.x));\r\n          this.m_countY = 1 + Math.floor(inverseRadius * (upper.y - lower.y));\r\n          ///  m_diagram = (Generator**) m_allocator->Allocate(sizeof(Generator*) * m_countX * m_countY);\r\n          ///  for (int32 i = 0; i < m_countX * m_countY; i++)\r\n          ///  {\r\n          ///    m_diagram[i] = NULL;\r\n          ///  }\r\n          this.m_diagram = []; // b2MakeArray(this.m_countX * this.m_countY, (index) => null);\r\n          // (4 * m_countX * m_countY) is the queue capacity that is experimentally\r\n          // known to be necessary and sufficient for general particle distributions.\r\n          const queue = new b2StackQueue(4 * this.m_countX * this.m_countY);\r\n          for (let k = 0; k < this.m_generatorCount; k++) {\r\n              const g = this.m_generatorBuffer[k];\r\n              ///  g.center = inverseRadius * (g.center - lower);\r\n              g.center.SelfSub(lower).SelfMul(inverseRadius);\r\n              const x = Math.floor(g.center.x);\r\n              const y = Math.floor(g.center.y);\r\n              if (x >= 0 && y >= 0 && x < this.m_countX && y < this.m_countY) {\r\n                  queue.Push(new b2VoronoiDiagram.Task(x, y, x + y * this.m_countX, g));\r\n              }\r\n          }\r\n          while (!queue.Empty()) {\r\n              const task = queue.Front();\r\n              const x = task.m_x;\r\n              const y = task.m_y;\r\n              const i = task.m_i;\r\n              const g = task.m_generator;\r\n              queue.Pop();\r\n              if (!this.m_diagram[i]) {\r\n                  this.m_diagram[i] = g;\r\n                  if (x > 0) {\r\n                      queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, g));\r\n                  }\r\n                  if (y > 0) {\r\n                      queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, g));\r\n                  }\r\n                  if (x < this.m_countX - 1) {\r\n                      queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, g));\r\n                  }\r\n                  if (y < this.m_countY - 1) {\r\n                      queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, g));\r\n                  }\r\n              }\r\n          }\r\n          for (let y = 0; y < this.m_countY; y++) {\r\n              for (let x = 0; x < this.m_countX - 1; x++) {\r\n                  const i = x + y * this.m_countX;\r\n                  const a = this.m_diagram[i];\r\n                  const b = this.m_diagram[i + 1];\r\n                  if (a !== b) {\r\n                      queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                      queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, a));\r\n                  }\r\n              }\r\n          }\r\n          for (let y = 0; y < this.m_countY - 1; y++) {\r\n              for (let x = 0; x < this.m_countX; x++) {\r\n                  const i = x + y * this.m_countX;\r\n                  const a = this.m_diagram[i];\r\n                  const b = this.m_diagram[i + this.m_countX];\r\n                  if (a !== b) {\r\n                      queue.Push(new b2VoronoiDiagram.Task(x, y, i, b));\r\n                      queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, a));\r\n                  }\r\n              }\r\n          }\r\n          while (!queue.Empty()) {\r\n              const task = queue.Front();\r\n              const x = task.m_x;\r\n              const y = task.m_y;\r\n              const i = task.m_i;\r\n              const k = task.m_generator;\r\n              queue.Pop();\r\n              const a = this.m_diagram[i];\r\n              const b = k;\r\n              if (a !== b) {\r\n                  const ax = a.center.x - x;\r\n                  const ay = a.center.y - y;\r\n                  const bx = b.center.x - x;\r\n                  const by = b.center.y - y;\r\n                  const a2 = ax * ax + ay * ay;\r\n                  const b2 = bx * bx + by * by;\r\n                  if (a2 > b2) {\r\n                      this.m_diagram[i] = b;\r\n                      if (x > 0) {\r\n                          queue.Push(new b2VoronoiDiagram.Task(x - 1, y, i - 1, b));\r\n                      }\r\n                      if (y > 0) {\r\n                          queue.Push(new b2VoronoiDiagram.Task(x, y - 1, i - this.m_countX, b));\r\n                      }\r\n                      if (x < this.m_countX - 1) {\r\n                          queue.Push(new b2VoronoiDiagram.Task(x + 1, y, i + 1, b));\r\n                      }\r\n                      if (y < this.m_countY - 1) {\r\n                          queue.Push(new b2VoronoiDiagram.Task(x, y + 1, i + this.m_countX, b));\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Enumerate all nodes that contain at least one necessary\r\n       * generator.\r\n       */\r\n      GetNodes(callback) {\r\n          for (let y = 0; y < this.m_countY - 1; y++) {\r\n              for (let x = 0; x < this.m_countX - 1; x++) {\r\n                  const i = x + y * this.m_countX;\r\n                  const a = this.m_diagram[i];\r\n                  const b = this.m_diagram[i + 1];\r\n                  const c = this.m_diagram[i + this.m_countX];\r\n                  const d = this.m_diagram[i + 1 + this.m_countX];\r\n                  if (b !== c) {\r\n                      if (a !== b && a !== c &&\r\n                          (a.necessary || b.necessary || c.necessary)) {\r\n                          callback(a.tag, b.tag, c.tag);\r\n                      }\r\n                      if (d !== b && d !== c &&\r\n                          (a.necessary || b.necessary || c.necessary)) {\r\n                          callback(b.tag, d.tag, c.tag);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  }\r\n  (function (b2VoronoiDiagram) {\r\n      class Generator {\r\n          constructor() {\r\n              this.center = new b2Vec2();\r\n              this.tag = 0;\r\n              this.necessary = false;\r\n          }\r\n      }\r\n      b2VoronoiDiagram.Generator = Generator;\r\n      class Task {\r\n          constructor(x, y, i, g) {\r\n              this.m_x = x;\r\n              this.m_y = y;\r\n              this.m_i = i;\r\n              this.m_generator = g;\r\n          }\r\n      }\r\n      b2VoronoiDiagram.Task = Task;\r\n  })(b2VoronoiDiagram || (b2VoronoiDiagram = {})); // namespace b2VoronoiDiagram\r\n  // #endif\r\n\r\n  /*\r\n   * Copyright (c) 2013 Google, Inc.\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  function std_iter_swap(array, a, b) {\r\n      const tmp = array[a];\r\n      array[a] = array[b];\r\n      array[b] = tmp;\r\n  }\r\n  function default_compare(a, b) { return a < b; }\r\n  function std_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n      let left = first;\r\n      const stack = [];\r\n      let pos = 0;\r\n      for (;;) { /* outer loop */\r\n          for (; left + 1 < len; len++) { /* sort left to len-1 */\r\n              const pivot = array[left + Math.floor(Math.random() * (len - left))]; /* pick random pivot */\r\n              stack[pos++] = len; /* sort right part later */\r\n              for (let right = left - 1;;) { /* inner loop: partitioning */\r\n                  while (cmp(array[++right], pivot)) { } /* look for greater element */\r\n                  while (cmp(pivot, array[--len])) { } /* look for smaller element */\r\n                  if (right >= len) {\r\n                      break;\r\n                  } /* partition point found? */\r\n                  std_iter_swap(array, right, len); /* the only swap */\r\n              } /* partitioned, continue left part */\r\n          }\r\n          if (pos === 0) {\r\n              break;\r\n          } /* stack empty? */\r\n          left = len; /* left to right is sorted */\r\n          len = stack[--pos]; /* get next range to sort */\r\n      }\r\n      return array;\r\n  }\r\n  function std_stable_sort(array, first = 0, len = array.length - first, cmp = default_compare) {\r\n      return std_sort(array, first, len, cmp);\r\n  }\r\n  function std_remove_if(array, predicate, length = array.length) {\r\n      let l = 0;\r\n      for (let c = 0; c < length; ++c) {\r\n          // if we can be collapsed, keep l where it is.\r\n          if (predicate(array[c])) {\r\n              continue;\r\n          }\r\n          // this node can't be collapsed; push it back as far as we can.\r\n          if (c === l) {\r\n              ++l;\r\n              continue; // quick exit if we're already in the right spot\r\n          }\r\n          // array[l++] = array[c];\r\n          std_iter_swap(array, l++, c);\r\n      }\r\n      return l;\r\n  }\r\n  function std_lower_bound(array, first, last, val, cmp = default_compare) {\r\n      let count = last - first;\r\n      while (count > 0) {\r\n          const step = Math.floor(count / 2);\r\n          let it = first + step;\r\n          if (cmp(array[it], val)) {\r\n              first = ++it;\r\n              count -= step + 1;\r\n          }\r\n          else {\r\n              count = step;\r\n          }\r\n      }\r\n      return first;\r\n  }\r\n  function std_upper_bound(array, first, last, val, cmp = default_compare) {\r\n      let count = last - first;\r\n      while (count > 0) {\r\n          const step = Math.floor(count / 2);\r\n          let it = first + step;\r\n          if (!cmp(val, array[it])) {\r\n              first = ++it;\r\n              count -= step + 1;\r\n          }\r\n          else {\r\n              count = step;\r\n          }\r\n      }\r\n      return first;\r\n  }\r\n  function std_rotate(array, first, n_first, last) {\r\n      let next = n_first;\r\n      while (first !== next) {\r\n          std_iter_swap(array, first++, next++);\r\n          if (next === last) {\r\n              next = n_first;\r\n          }\r\n          else if (first === n_first) {\r\n              n_first = next;\r\n          }\r\n      }\r\n  }\r\n  function std_unique(array, first, last, cmp) {\r\n      if (first === last) {\r\n          return last;\r\n      }\r\n      let result = first;\r\n      while (++first !== last) {\r\n          if (!cmp(array[result], array[first])) {\r\n              ///array[++result] = array[first];\r\n              std_iter_swap(array, ++result, first);\r\n          }\r\n      }\r\n      return ++result;\r\n  }\r\n  class b2GrowableBuffer {\r\n      constructor(allocator) {\r\n          this.data = [];\r\n          this.count = 0;\r\n          this.capacity = 0;\r\n          this.allocator = allocator;\r\n      }\r\n      Append() {\r\n          if (this.count >= this.capacity) {\r\n              this.Grow();\r\n          }\r\n          return this.count++;\r\n      }\r\n      Reserve(newCapacity) {\r\n          if (this.capacity >= newCapacity) {\r\n              return;\r\n          }\r\n          // DEBUG: b2Assert(this.capacity === this.data.length);\r\n          for (let i = this.capacity; i < newCapacity; ++i) {\r\n              this.data[i] = this.allocator();\r\n          }\r\n          this.capacity = newCapacity;\r\n      }\r\n      Grow() {\r\n          // Double the capacity.\r\n          const newCapacity = this.capacity ? 2 * this.capacity : b2_minParticleSystemBufferCapacity;\r\n          // DEBUG: b2Assert(newCapacity > this.capacity);\r\n          this.Reserve(newCapacity);\r\n      }\r\n      Free() {\r\n          if (this.data.length === 0) {\r\n              return;\r\n          }\r\n          this.data = [];\r\n          this.capacity = 0;\r\n          this.count = 0;\r\n      }\r\n      Shorten(newEnd) {\r\n          // DEBUG: b2Assert(false);\r\n      }\r\n      Data() {\r\n          return this.data;\r\n      }\r\n      GetCount() {\r\n          return this.count;\r\n      }\r\n      SetCount(newCount) {\r\n          // DEBUG: b2Assert(0 <= newCount && newCount <= this.capacity);\r\n          this.count = newCount;\r\n      }\r\n      GetCapacity() {\r\n          return this.capacity;\r\n      }\r\n      RemoveIf(pred) {\r\n          // DEBUG: let count = 0;\r\n          // DEBUG: for (let i = 0; i < this.count; ++i) {\r\n          // DEBUG:   if (!pred(this.data[i])) {\r\n          // DEBUG:     count++;\r\n          // DEBUG:   }\r\n          // DEBUG: }\r\n          this.count = std_remove_if(this.data, pred, this.count);\r\n          // DEBUG: b2Assert(count === this.count);\r\n      }\r\n      Unique(pred) {\r\n          this.count = std_unique(this.data, 0, this.count, pred);\r\n      }\r\n  }\r\n  class b2FixtureParticleQueryCallback extends b2QueryCallback {\r\n      constructor(system) {\r\n          super();\r\n          this.m_system = system;\r\n      }\r\n      ShouldQueryParticleSystem(system) {\r\n          // Skip reporting particles.\r\n          return false;\r\n      }\r\n      ReportFixture(fixture) {\r\n          if (fixture.IsSensor()) {\r\n              return true;\r\n          }\r\n          const shape = fixture.GetShape();\r\n          const childCount = shape.GetChildCount();\r\n          for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n              const aabb = fixture.GetAABB(childIndex);\r\n              const enumerator = this.m_system.GetInsideBoundsEnumerator(aabb);\r\n              let index;\r\n              while ((index = enumerator.GetNext()) >= 0) {\r\n                  this.ReportFixtureAndParticle(fixture, childIndex, index);\r\n              }\r\n          }\r\n          return true;\r\n      }\r\n      ReportParticle(system, index) {\r\n          return false;\r\n      }\r\n      ReportFixtureAndParticle(fixture, childIndex, index) {\r\n          // DEBUG: b2Assert(false); // pure virtual\r\n      }\r\n  }\r\n  class b2ParticleContact {\r\n      constructor() {\r\n          this.indexA = 0;\r\n          this.indexB = 0;\r\n          this.weight = 0;\r\n          this.normal = new b2Vec2();\r\n          this.flags = 0;\r\n      }\r\n      SetIndices(a, b) {\r\n          // DEBUG: b2Assert(a <= b2_maxParticleIndex && b <= b2_maxParticleIndex);\r\n          this.indexA = a;\r\n          this.indexB = b;\r\n      }\r\n      SetWeight(w) {\r\n          this.weight = w;\r\n      }\r\n      SetNormal(n) {\r\n          this.normal.Copy(n);\r\n      }\r\n      SetFlags(f) {\r\n          this.flags = f;\r\n      }\r\n      GetIndexA() {\r\n          return this.indexA;\r\n      }\r\n      GetIndexB() {\r\n          return this.indexB;\r\n      }\r\n      GetWeight() {\r\n          return this.weight;\r\n      }\r\n      GetNormal() {\r\n          return this.normal;\r\n      }\r\n      GetFlags() {\r\n          return this.flags;\r\n      }\r\n      IsEqual(rhs) {\r\n          return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && this.weight === rhs.weight && this.normal.x === rhs.normal.x && this.normal.y === rhs.normal.y;\r\n      }\r\n      IsNotEqual(rhs) {\r\n          return !this.IsEqual(rhs);\r\n      }\r\n      ApproximatelyEqual(rhs) {\r\n          const MAX_WEIGHT_DIFF = 0.01; // Weight 0 ~ 1, so about 1%\r\n          const MAX_NORMAL_DIFF_SQ = 0.01 * 0.01; // Normal length = 1, so 1%\r\n          return this.indexA === rhs.indexA && this.indexB === rhs.indexB && this.flags === rhs.flags && b2Abs(this.weight - rhs.weight) < MAX_WEIGHT_DIFF && b2Vec2.DistanceSquaredVV(this.normal, rhs.normal) < MAX_NORMAL_DIFF_SQ;\r\n      }\r\n  }\r\n  class b2ParticleBodyContact {\r\n      constructor() {\r\n          this.index = 0; // Index of the particle making contact.\r\n          this.weight = 0.0; // Weight of the contact. A value between 0.0f and 1.0f.\r\n          this.normal = new b2Vec2(); // The normalized direction from the particle to the body.\r\n          this.mass = 0.0; // The effective mass used in calculating force.\r\n      }\r\n  }\r\n  class b2ParticlePair {\r\n      constructor() {\r\n          this.indexA = 0; // Indices of the respective particles making pair.\r\n          this.indexB = 0;\r\n          this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n          this.strength = 0.0; // The strength of cohesion among the particles.\r\n          this.distance = 0.0; // The initial distance of the particles.\r\n      }\r\n  }\r\n  class b2ParticleTriad {\r\n      constructor() {\r\n          this.indexA = 0; // Indices of the respective particles making triad.\r\n          this.indexB = 0;\r\n          this.indexC = 0;\r\n          this.flags = 0; // The logical sum of the particle flags. See the b2ParticleFlag enum.\r\n          this.strength = 0.0; // The strength of cohesion among the particles.\r\n          this.pa = new b2Vec2(0.0, 0.0); // Values used for calculation.\r\n          this.pb = new b2Vec2(0.0, 0.0);\r\n          this.pc = new b2Vec2(0.0, 0.0);\r\n          this.ka = 0.0;\r\n          this.kb = 0.0;\r\n          this.kc = 0.0;\r\n          this.s = 0.0;\r\n      }\r\n  }\r\n  class b2ParticleSystemDef {\r\n      constructor() {\r\n          // Initialize physical coefficients to the maximum values that\r\n          // maintain numerical stability.\r\n          /**\r\n           * Enable strict Particle/Body contact check.\r\n           * See SetStrictContactCheck for details.\r\n           */\r\n          this.strictContactCheck = false;\r\n          /**\r\n           * Set the particle density.\r\n           * See SetDensity for details.\r\n           */\r\n          this.density = 1.0;\r\n          /**\r\n           * Change the particle gravity scale. Adjusts the effect of the\r\n           * global gravity vector on particles. Default value is 1.0f.\r\n           */\r\n          this.gravityScale = 1.0;\r\n          /**\r\n           * Particles behave as circles with this radius. In Box2D units.\r\n           */\r\n          this.radius = 1.0;\r\n          /**\r\n           * Set the maximum number of particles.\r\n           * By default, there is no maximum. The particle buffers can\r\n           * continue to grow while b2World's block allocator still has\r\n           * memory.\r\n           * See SetMaxParticleCount for details.\r\n           */\r\n          this.maxCount = 0;\r\n          /**\r\n           * Increases pressure in response to compression\r\n           * Smaller values allow more compression\r\n           */\r\n          this.pressureStrength = 0.005;\r\n          /**\r\n           * Reduces velocity along the collision normal\r\n           * Smaller value reduces less\r\n           */\r\n          this.dampingStrength = 1.0;\r\n          /**\r\n           * Restores shape of elastic particle groups\r\n           * Larger values increase elastic particle velocity\r\n           */\r\n          this.elasticStrength = 0.25;\r\n          /**\r\n           * Restores length of spring particle groups\r\n           * Larger values increase spring particle velocity\r\n           */\r\n          this.springStrength = 0.25;\r\n          /**\r\n           * Reduces relative velocity of viscous particles\r\n           * Larger values slow down viscous particles more\r\n           */\r\n          this.viscousStrength = 0.25;\r\n          /**\r\n           * Produces pressure on tensile particles\r\n           * 0~0.2. Larger values increase the amount of surface tension.\r\n           */\r\n          this.surfaceTensionPressureStrength = 0.2;\r\n          /**\r\n           * Smoothes outline of tensile particles\r\n           * 0~0.2. Larger values result in rounder, smoother,\r\n           * water-drop-like clusters of particles.\r\n           */\r\n          this.surfaceTensionNormalStrength = 0.2;\r\n          /**\r\n           * Produces additional pressure on repulsive particles\r\n           * Larger values repulse more\r\n           * Negative values mean attraction. The range where particles\r\n           * behave stably is about -0.2 to 2.0.\r\n           */\r\n          this.repulsiveStrength = 1.0;\r\n          /**\r\n           * Produces repulsion between powder particles\r\n           * Larger values repulse more\r\n           */\r\n          this.powderStrength = 0.5;\r\n          /**\r\n           * Pushes particles out of solid particle group\r\n           * Larger values repulse more\r\n           */\r\n          this.ejectionStrength = 0.5;\r\n          /**\r\n           * Produces static pressure\r\n           * Larger values increase the pressure on neighboring partilces\r\n           * For a description of static pressure, see\r\n           * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n           */\r\n          this.staticPressureStrength = 0.2;\r\n          /**\r\n           * Reduces instability in static pressure calculation\r\n           * Larger values make stabilize static pressure with fewer\r\n           * iterations\r\n           */\r\n          this.staticPressureRelaxation = 0.2;\r\n          /**\r\n           * Computes static pressure more precisely\r\n           * See SetStaticPressureIterations for details\r\n           */\r\n          this.staticPressureIterations = 8;\r\n          /**\r\n           * Determines how fast colors are mixed\r\n           * 1.0f ==> mixed immediately\r\n           * 0.5f ==> mixed half way each simulation step (see\r\n           * b2World::Step())\r\n           */\r\n          this.colorMixingStrength = 0.5;\r\n          /**\r\n           * Whether to destroy particles by age when no more particles\r\n           * can be created.  See #b2ParticleSystem::SetDestructionByAge()\r\n           * for more information.\r\n           */\r\n          this.destroyByAge = true;\r\n          /**\r\n           * Granularity of particle lifetimes in seconds.  By default\r\n           * this is set to (1.0f / 60.0f) seconds.  b2ParticleSystem uses\r\n           * a 32-bit signed value to track particle lifetimes so the\r\n           * maximum lifetime of a particle is (2^32 - 1) / (1.0f /\r\n           * lifetimeGranularity) seconds. With the value set to 1/60 the\r\n           * maximum lifetime or age of a particle is 2.27 years.\r\n           */\r\n          this.lifetimeGranularity = 1.0 / 60.0;\r\n      }\r\n      Copy(def) {\r\n          this.strictContactCheck = def.strictContactCheck;\r\n          this.density = def.density;\r\n          this.gravityScale = def.gravityScale;\r\n          this.radius = def.radius;\r\n          this.maxCount = def.maxCount;\r\n          this.pressureStrength = def.pressureStrength;\r\n          this.dampingStrength = def.dampingStrength;\r\n          this.elasticStrength = def.elasticStrength;\r\n          this.springStrength = def.springStrength;\r\n          this.viscousStrength = def.viscousStrength;\r\n          this.surfaceTensionPressureStrength = def.surfaceTensionPressureStrength;\r\n          this.surfaceTensionNormalStrength = def.surfaceTensionNormalStrength;\r\n          this.repulsiveStrength = def.repulsiveStrength;\r\n          this.powderStrength = def.powderStrength;\r\n          this.ejectionStrength = def.ejectionStrength;\r\n          this.staticPressureStrength = def.staticPressureStrength;\r\n          this.staticPressureRelaxation = def.staticPressureRelaxation;\r\n          this.staticPressureIterations = def.staticPressureIterations;\r\n          this.colorMixingStrength = def.colorMixingStrength;\r\n          this.destroyByAge = def.destroyByAge;\r\n          this.lifetimeGranularity = def.lifetimeGranularity;\r\n          return this;\r\n      }\r\n      Clone() {\r\n          return new b2ParticleSystemDef().Copy(this);\r\n      }\r\n  }\r\n  class b2ParticleSystem {\r\n      constructor(def, world) {\r\n          this.m_paused = false;\r\n          this.m_timestamp = 0;\r\n          this.m_allParticleFlags = 0;\r\n          this.m_needsUpdateAllParticleFlags = false;\r\n          this.m_allGroupFlags = 0;\r\n          this.m_needsUpdateAllGroupFlags = false;\r\n          this.m_hasForce = false;\r\n          this.m_iterationIndex = 0;\r\n          this.m_inverseDensity = 0.0;\r\n          this.m_particleDiameter = 0.0;\r\n          this.m_inverseDiameter = 0.0;\r\n          this.m_squaredDiameter = 0.0;\r\n          this.m_count = 0;\r\n          this.m_internalAllocatedCapacity = 0;\r\n          /**\r\n           * Allocator for b2ParticleHandle instances.\r\n           */\r\n          ///m_handleAllocator: any = null;\r\n          /**\r\n           * Maps particle indicies to handles.\r\n           */\r\n          this.m_handleIndexBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          this.m_flagsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          this.m_positionBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          this.m_velocityBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          this.m_forceBuffer = [];\r\n          /**\r\n           * this.m_weightBuffer is populated in ComputeWeight and used in\r\n           * ComputeDepth(), SolveStaticPressure() and SolvePressure().\r\n           */\r\n          this.m_weightBuffer = [];\r\n          /**\r\n           * When any particles have the flag b2_staticPressureParticle,\r\n           * this.m_staticPressureBuffer is first allocated and used in\r\n           * SolveStaticPressure() and SolvePressure().  It will be\r\n           * reallocated on subsequent CreateParticle() calls.\r\n           */\r\n          this.m_staticPressureBuffer = [];\r\n          /**\r\n           * this.m_accumulationBuffer is used in many functions as a temporary\r\n           * buffer for scalar values.\r\n           */\r\n          this.m_accumulationBuffer = [];\r\n          /**\r\n           * When any particles have the flag b2_tensileParticle,\r\n           * this.m_accumulation2Buffer is first allocated and used in\r\n           * SolveTensile() as a temporary buffer for vector values.  It\r\n           * will be reallocated on subsequent CreateParticle() calls.\r\n           */\r\n          this.m_accumulation2Buffer = [];\r\n          /**\r\n           * When any particle groups have the flag b2_solidParticleGroup,\r\n           * this.m_depthBuffer is first allocated and populated in\r\n           * ComputeDepth() and used in SolveSolid(). It will be\r\n           * reallocated on subsequent CreateParticle() calls.\r\n           */\r\n          this.m_depthBuffer = [];\r\n          this.m_colorBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          this.m_groupBuffer = [];\r\n          this.m_userDataBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          /**\r\n           * Stuck particle detection parameters and record keeping\r\n           */\r\n          this.m_stuckThreshold = 0;\r\n          this.m_lastBodyContactStepBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          this.m_bodyContactCountBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          this.m_consecutiveContactStepsBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          this.m_stuckParticleBuffer = new b2GrowableBuffer(() => 0);\r\n          this.m_proxyBuffer = new b2GrowableBuffer(() => new b2ParticleSystem.Proxy());\r\n          this.m_contactBuffer = new b2GrowableBuffer(() => new b2ParticleContact());\r\n          this.m_bodyContactBuffer = new b2GrowableBuffer(() => new b2ParticleBodyContact());\r\n          this.m_pairBuffer = new b2GrowableBuffer(() => new b2ParticlePair());\r\n          this.m_triadBuffer = new b2GrowableBuffer(() => new b2ParticleTriad());\r\n          /**\r\n           * Time each particle should be destroyed relative to the last\r\n           * time this.m_timeElapsed was initialized.  Each unit of time\r\n           * corresponds to b2ParticleSystemDef::lifetimeGranularity\r\n           * seconds.\r\n           */\r\n          this.m_expirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          /**\r\n           * List of particle indices sorted by expiration time.\r\n           */\r\n          this.m_indexByExpirationTimeBuffer = new b2ParticleSystem.UserOverridableBuffer();\r\n          /**\r\n           * Time elapsed in 32:32 fixed point.  Each non-fractional unit\r\n           * of time corresponds to\r\n           * b2ParticleSystemDef::lifetimeGranularity seconds.\r\n           */\r\n          this.m_timeElapsed = 0;\r\n          /**\r\n           * Whether the expiration time buffer has been modified and\r\n           * needs to be resorted.\r\n           */\r\n          this.m_expirationTimeBufferRequiresSorting = false;\r\n          this.m_groupCount = 0;\r\n          this.m_groupList = null;\r\n          this.m_def = new b2ParticleSystemDef();\r\n          this.m_prev = null;\r\n          this.m_next = null;\r\n          this.SetStrictContactCheck(def.strictContactCheck);\r\n          this.SetDensity(def.density);\r\n          this.SetGravityScale(def.gravityScale);\r\n          this.SetRadius(def.radius);\r\n          this.SetMaxParticleCount(def.maxCount);\r\n          // DEBUG: b2Assert(def.lifetimeGranularity > 0.0);\r\n          this.m_def = def.Clone();\r\n          this.m_world = world;\r\n          this.SetDestructionByAge(this.m_def.destroyByAge);\r\n      }\r\n      static computeTag(x, y) {\r\n          ///return ((uint32)(y + yOffset) << yShift) + (uint32)(xScale * x + xOffset);\r\n          return ((((y + b2ParticleSystem.yOffset) >>> 0) << b2ParticleSystem.yShift) + ((b2ParticleSystem.xScale * x + b2ParticleSystem.xOffset) >>> 0)) >>> 0;\r\n      }\r\n      static computeRelativeTag(tag, x, y) {\r\n          ///return tag + (y << yShift) + (x << xShift);\r\n          return (tag + (y << b2ParticleSystem.yShift) + (x << b2ParticleSystem.xShift)) >>> 0;\r\n      }\r\n      Drop() {\r\n          while (this.m_groupList) {\r\n              this.DestroyParticleGroup(this.m_groupList);\r\n          }\r\n          this.FreeUserOverridableBuffer(this.m_handleIndexBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_flagsBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_lastBodyContactStepBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_bodyContactCountBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_consecutiveContactStepsBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_positionBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_velocityBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_colorBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_userDataBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_expirationTimeBuffer);\r\n          this.FreeUserOverridableBuffer(this.m_indexByExpirationTimeBuffer);\r\n          this.FreeBuffer(this.m_forceBuffer, this.m_internalAllocatedCapacity);\r\n          this.FreeBuffer(this.m_weightBuffer, this.m_internalAllocatedCapacity);\r\n          this.FreeBuffer(this.m_staticPressureBuffer, this.m_internalAllocatedCapacity);\r\n          this.FreeBuffer(this.m_accumulationBuffer, this.m_internalAllocatedCapacity);\r\n          this.FreeBuffer(this.m_accumulation2Buffer, this.m_internalAllocatedCapacity);\r\n          this.FreeBuffer(this.m_depthBuffer, this.m_internalAllocatedCapacity);\r\n          this.FreeBuffer(this.m_groupBuffer, this.m_internalAllocatedCapacity);\r\n      }\r\n      /**\r\n       * Create a particle whose properties have been defined.\r\n       *\r\n       * No reference to the definition is retained.\r\n       *\r\n       * A simulation step must occur before it's possible to interact\r\n       * with a newly created particle.  For example,\r\n       * DestroyParticleInShape() will not destroy a particle until\r\n       * b2World::Step() has been called.\r\n       *\r\n       * warning: This function is locked during callbacks.\r\n       */\r\n      CreateParticle(def) {\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n              // Double the particle capacity.\r\n              const capacity = this.m_count ? 2 * this.m_count : b2_minParticleSystemBufferCapacity;\r\n              this.ReallocateInternalAllocatedBuffers(capacity);\r\n          }\r\n          if (this.m_count >= this.m_internalAllocatedCapacity) {\r\n              // If the oldest particle should be destroyed...\r\n              if (this.m_def.destroyByAge) {\r\n                  this.DestroyOldestParticle(0, false);\r\n                  // Need to destroy this particle *now* so that it's possible to\r\n                  // create a new particle.\r\n                  this.SolveZombie();\r\n              }\r\n              else {\r\n                  return b2_invalidParticleIndex;\r\n              }\r\n          }\r\n          const index = this.m_count++;\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          this.m_flagsBuffer.data[index] = 0;\r\n          if (this.m_lastBodyContactStepBuffer.data) {\r\n              this.m_lastBodyContactStepBuffer.data[index] = 0;\r\n          }\r\n          if (this.m_bodyContactCountBuffer.data) {\r\n              this.m_bodyContactCountBuffer.data[index] = 0;\r\n          }\r\n          if (this.m_consecutiveContactStepsBuffer.data) {\r\n              this.m_consecutiveContactStepsBuffer.data[index] = 0;\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          this.m_positionBuffer.data[index] = (this.m_positionBuffer.data[index] || new b2Vec2()).Copy(b2Maybe(def.position, b2Vec2.ZERO));\r\n          this.m_velocityBuffer.data[index] = (this.m_velocityBuffer.data[index] || new b2Vec2()).Copy(b2Maybe(def.velocity, b2Vec2.ZERO));\r\n          this.m_weightBuffer[index] = 0;\r\n          this.m_forceBuffer[index] = (this.m_forceBuffer[index] || new b2Vec2()).SetZero();\r\n          if (this.m_staticPressureBuffer) {\r\n              this.m_staticPressureBuffer[index] = 0;\r\n          }\r\n          if (this.m_depthBuffer) {\r\n              this.m_depthBuffer[index] = 0;\r\n          }\r\n          const color = new b2Color().Copy(b2Maybe(def.color, b2Color.ZERO));\r\n          if (this.m_colorBuffer.data || !color.IsZero()) {\r\n              this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n              this.m_colorBuffer.data[index] = (this.m_colorBuffer.data[index] || new b2Color()).Copy(color);\r\n          }\r\n          if (this.m_userDataBuffer.data || def.userData) {\r\n              this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n              this.m_userDataBuffer.data[index] = def.userData;\r\n          }\r\n          if (this.m_handleIndexBuffer.data) {\r\n              this.m_handleIndexBuffer.data[index] = null;\r\n          }\r\n          ///Proxy& proxy = m_proxyBuffer.Append();\r\n          const proxy = this.m_proxyBuffer.data[this.m_proxyBuffer.Append()];\r\n          // If particle lifetimes are enabled or the lifetime is set in the particle\r\n          // definition, initialize the lifetime.\r\n          const lifetime = b2Maybe(def.lifetime, 0.0);\r\n          const finiteLifetime = lifetime > 0.0;\r\n          if (this.m_expirationTimeBuffer.data || finiteLifetime) {\r\n              this.SetParticleLifetime(index, finiteLifetime ? lifetime :\r\n                  this.ExpirationTimeToLifetime(-this.GetQuantizedTimeElapsed()));\r\n              // Add a reference to the newly added particle to the end of the\r\n              // queue.\r\n              if (!this.m_indexByExpirationTimeBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              this.m_indexByExpirationTimeBuffer.data[index] = index;\r\n          }\r\n          proxy.index = index;\r\n          const group = b2Maybe(def.group, null);\r\n          this.m_groupBuffer[index] = group;\r\n          if (group) {\r\n              if (group.m_firstIndex < group.m_lastIndex) {\r\n                  // Move particles in the group just before the new particle.\r\n                  this.RotateBuffer(group.m_firstIndex, group.m_lastIndex, index);\r\n                  // DEBUG: b2Assert(group.m_lastIndex === index);\r\n                  // Update the index range of the group to contain the new particle.\r\n                  group.m_lastIndex = index + 1;\r\n              }\r\n              else {\r\n                  // If the group is empty, reset the index range to contain only the\r\n                  // new particle.\r\n                  group.m_firstIndex = index;\r\n                  group.m_lastIndex = index + 1;\r\n              }\r\n          }\r\n          this.SetParticleFlags(index, b2Maybe(def.flags, 0));\r\n          return index;\r\n      }\r\n      /**\r\n       * Retrieve a handle to the particle at the specified index.\r\n       *\r\n       * Please see #b2ParticleHandle for why you might want a handle.\r\n       */\r\n      GetParticleHandleFromIndex(index) {\r\n          // DEBUG: b2Assert(index >= 0 && index < this.GetParticleCount() && index !== b2_invalidParticleIndex);\r\n          this.m_handleIndexBuffer.data = this.RequestBuffer(this.m_handleIndexBuffer.data);\r\n          let handle = this.m_handleIndexBuffer.data[index];\r\n          if (handle) {\r\n              return handle;\r\n          }\r\n          // Create a handle.\r\n          ///handle = m_handleAllocator.Allocate();\r\n          handle = new b2ParticleHandle();\r\n          // DEBUG: b2Assert(handle !== null);\r\n          handle.SetIndex(index);\r\n          this.m_handleIndexBuffer.data[index] = handle;\r\n          return handle;\r\n      }\r\n      /**\r\n       * Destroy a particle.\r\n       *\r\n       * The particle is removed after the next simulation step (see\r\n       * b2World::Step()).\r\n       *\r\n       * @param index Index of the particle to destroy.\r\n       * @param callDestructionListener Whether to call the\r\n       *      destruction listener just before the particle is\r\n       *      destroyed.\r\n       */\r\n      DestroyParticle(index, callDestructionListener = false) {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          let flags = exports.b2ParticleFlag.b2_zombieParticle;\r\n          if (callDestructionListener) {\r\n              flags |= exports.b2ParticleFlag.b2_destructionListenerParticle;\r\n          }\r\n          this.SetParticleFlags(index, this.m_flagsBuffer.data[index] | flags);\r\n      }\r\n      /**\r\n       * Destroy the Nth oldest particle in the system.\r\n       *\r\n       * The particle is removed after the next b2World::Step().\r\n       *\r\n       * @param index Index of the Nth oldest particle to\r\n       *      destroy, 0 will destroy the oldest particle in the\r\n       *      system, 1 will destroy the next oldest particle etc.\r\n       * @param callDestructionListener Whether to call the\r\n       *      destruction listener just before the particle is\r\n       *      destroyed.\r\n       */\r\n      DestroyOldestParticle(index, callDestructionListener = false) {\r\n          const particleCount = this.GetParticleCount();\r\n          // DEBUG: b2Assert(index >= 0 && index < particleCount);\r\n          // Make sure particle lifetime tracking is enabled.\r\n          // DEBUG: b2Assert(this.m_indexByExpirationTimeBuffer.data !== null);\r\n          if (!this.m_indexByExpirationTimeBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_expirationTimeBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          // Destroy the oldest particle (preferring to destroy finite\r\n          // lifetime particles first) to free a slot in the buffer.\r\n          const oldestFiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[particleCount - (index + 1)];\r\n          const oldestInfiniteLifetimeParticle = this.m_indexByExpirationTimeBuffer.data[index];\r\n          this.DestroyParticle(this.m_expirationTimeBuffer.data[oldestFiniteLifetimeParticle] > 0.0 ?\r\n              oldestFiniteLifetimeParticle : oldestInfiniteLifetimeParticle, callDestructionListener);\r\n      }\r\n      /**\r\n       * Destroy particles inside a shape.\r\n       *\r\n       * warning: This function is locked during callbacks.\r\n       *\r\n       * In addition, this function immediately destroys particles in\r\n       * the shape in constrast to DestroyParticle() which defers the\r\n       * destruction until the next simulation step.\r\n       *\r\n       * @return Number of particles destroyed.\r\n       * @param shape Shape which encloses particles\r\n       *      that should be destroyed.\r\n       * @param xf Transform applied to the shape.\r\n       * @param callDestructionListener Whether to call the\r\n       *      world b2DestructionListener for each particle\r\n       *      destroyed.\r\n       */\r\n      DestroyParticlesInShape(shape, xf, callDestructionListener = false) {\r\n          const s_aabb = b2ParticleSystem.DestroyParticlesInShape_s_aabb;\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          const callback = new b2ParticleSystem.DestroyParticlesInShapeCallback(this, shape, xf, callDestructionListener);\r\n          const aabb = s_aabb;\r\n          shape.ComputeAABB(aabb, xf, 0);\r\n          this.m_world.QueryAABB(callback, aabb);\r\n          return callback.Destroyed();\r\n      }\r\n      /**\r\n       * Create a particle group whose properties have been defined.\r\n       *\r\n       * No reference to the definition is retained.\r\n       *\r\n       * warning: This function is locked during callbacks.\r\n       */\r\n      CreateParticleGroup(groupDef) {\r\n          const s_transform = b2ParticleSystem.CreateParticleGroup_s_transform;\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          const transform = s_transform;\r\n          transform.SetPositionAngle(b2Maybe(groupDef.position, b2Vec2.ZERO), b2Maybe(groupDef.angle, 0));\r\n          const firstIndex = this.m_count;\r\n          if (groupDef.shape) {\r\n              this.CreateParticlesWithShapeForGroup(groupDef.shape, groupDef, transform);\r\n          }\r\n          if (groupDef.shapes) {\r\n              this.CreateParticlesWithShapesForGroup(groupDef.shapes, b2Maybe(groupDef.shapeCount, groupDef.shapes.length), groupDef, transform);\r\n          }\r\n          if (groupDef.positionData) {\r\n              const count = b2Maybe(groupDef.particleCount, groupDef.positionData.length);\r\n              for (let i = 0; i < count; i++) {\r\n                  const p = groupDef.positionData[i];\r\n                  this.CreateParticleForGroup(groupDef, transform, p);\r\n              }\r\n          }\r\n          const lastIndex = this.m_count;\r\n          let group = new b2ParticleGroup(this);\r\n          group.m_firstIndex = firstIndex;\r\n          group.m_lastIndex = lastIndex;\r\n          group.m_strength = b2Maybe(groupDef.strength, 1);\r\n          group.m_userData = groupDef.userData;\r\n          group.m_transform.Copy(transform);\r\n          group.m_prev = null;\r\n          group.m_next = this.m_groupList;\r\n          if (this.m_groupList) {\r\n              this.m_groupList.m_prev = group;\r\n          }\r\n          this.m_groupList = group;\r\n          ++this.m_groupCount;\r\n          for (let i = firstIndex; i < lastIndex; i++) {\r\n              this.m_groupBuffer[i] = group;\r\n          }\r\n          this.SetGroupFlags(group, b2Maybe(groupDef.groupFlags, 0));\r\n          // Create pairs and triads between particles in the group.\r\n          const filter = new b2ParticleSystem.ConnectionFilter();\r\n          this.UpdateContacts(true);\r\n          this.UpdatePairsAndTriads(firstIndex, lastIndex, filter);\r\n          if (groupDef.group) {\r\n              this.JoinParticleGroups(groupDef.group, group);\r\n              group = groupDef.group;\r\n          }\r\n          return group;\r\n      }\r\n      /**\r\n       * Join two particle groups.\r\n       *\r\n       * warning: This function is locked during callbacks.\r\n       *\r\n       * @param groupA the first group. Expands to encompass the second group.\r\n       * @param groupB the second group. It is destroyed.\r\n       */\r\n      JoinParticleGroups(groupA, groupB) {\r\n          if (this.m_world.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          // DEBUG: b2Assert(groupA !== groupB);\r\n          this.RotateBuffer(groupB.m_firstIndex, groupB.m_lastIndex, this.m_count);\r\n          // DEBUG: b2Assert(groupB.m_lastIndex === this.m_count);\r\n          this.RotateBuffer(groupA.m_firstIndex, groupA.m_lastIndex, groupB.m_firstIndex);\r\n          // DEBUG: b2Assert(groupA.m_lastIndex === groupB.m_firstIndex);\r\n          // Create pairs and triads connecting groupA and groupB.\r\n          const filter = new b2ParticleSystem.JoinParticleGroupsFilter(groupB.m_firstIndex);\r\n          this.UpdateContacts(true);\r\n          this.UpdatePairsAndTriads(groupA.m_firstIndex, groupB.m_lastIndex, filter);\r\n          for (let i = groupB.m_firstIndex; i < groupB.m_lastIndex; i++) {\r\n              this.m_groupBuffer[i] = groupA;\r\n          }\r\n          const groupFlags = groupA.m_groupFlags | groupB.m_groupFlags;\r\n          this.SetGroupFlags(groupA, groupFlags);\r\n          groupA.m_lastIndex = groupB.m_lastIndex;\r\n          groupB.m_firstIndex = groupB.m_lastIndex;\r\n          this.DestroyParticleGroup(groupB);\r\n      }\r\n      /**\r\n       * Split particle group into multiple disconnected groups.\r\n       *\r\n       * warning: This function is locked during callbacks.\r\n       *\r\n       * @param group the group to be split.\r\n       */\r\n      SplitParticleGroup(group) {\r\n          this.UpdateContacts(true);\r\n          const particleCount = group.GetParticleCount();\r\n          // We create several linked lists. Each list represents a set of connected particles.\r\n          ///ParticleListNode* nodeBuffer = (ParticleListNode*) m_world.m_stackAllocator.Allocate(sizeof(ParticleListNode) * particleCount);\r\n          const nodeBuffer = b2MakeArray(particleCount, (index) => new b2ParticleSystem.ParticleListNode());\r\n          b2ParticleSystem.InitializeParticleLists(group, nodeBuffer);\r\n          this.MergeParticleListsInContact(group, nodeBuffer);\r\n          const survivingList = b2ParticleSystem.FindLongestParticleList(group, nodeBuffer);\r\n          this.MergeZombieParticleListNodes(group, nodeBuffer, survivingList);\r\n          this.CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList);\r\n          this.UpdatePairsAndTriadsWithParticleList(group, nodeBuffer);\r\n          ///this.m_world.m_stackAllocator.Free(nodeBuffer);\r\n      }\r\n      /**\r\n       * Get the world particle group list. With the returned group,\r\n       * use b2ParticleGroup::GetNext to get the next group in the\r\n       * world list.\r\n       *\r\n       * A null group indicates the end of the list.\r\n       *\r\n       * @return the head of the world particle group list.\r\n       */\r\n      GetParticleGroupList() {\r\n          return this.m_groupList;\r\n      }\r\n      /**\r\n       * Get the number of particle groups.\r\n       */\r\n      GetParticleGroupCount() {\r\n          return this.m_groupCount;\r\n      }\r\n      /**\r\n       * Get the number of particles.\r\n       */\r\n      GetParticleCount() {\r\n          return this.m_count;\r\n      }\r\n      /**\r\n       * Get the maximum number of particles.\r\n       */\r\n      GetMaxParticleCount() {\r\n          return this.m_def.maxCount;\r\n      }\r\n      /**\r\n       * Set the maximum number of particles.\r\n       *\r\n       * A value of 0 means there is no maximum. The particle buffers\r\n       * can continue to grow while b2World's block allocator still\r\n       * has memory.\r\n       *\r\n       * Note: If you try to CreateParticle() with more than this\r\n       * count, b2_invalidParticleIndex is returned unless\r\n       * SetDestructionByAge() is used to enable the destruction of\r\n       * the oldest particles in the system.\r\n       */\r\n      SetMaxParticleCount(count) {\r\n          // DEBUG: b2Assert(this.m_count <= count);\r\n          this.m_def.maxCount = count;\r\n      }\r\n      /**\r\n       * Get all existing particle flags.\r\n       */\r\n      GetAllParticleFlags() {\r\n          return this.m_allParticleFlags;\r\n      }\r\n      /**\r\n       * Get all existing particle group flags.\r\n       */\r\n      GetAllGroupFlags() {\r\n          return this.m_allGroupFlags;\r\n      }\r\n      /**\r\n       * Pause or unpause the particle system. When paused,\r\n       * b2World::Step() skips over this particle system. All\r\n       * b2ParticleSystem function calls still work.\r\n       *\r\n       * @param paused paused is true to pause, false to un-pause.\r\n       */\r\n      SetPaused(paused) {\r\n          this.m_paused = paused;\r\n      }\r\n      /**\r\n       * Initially, true, then, the last value passed into\r\n       * SetPaused().\r\n       *\r\n       * @return true if the particle system is being updated in b2World::Step().\r\n       */\r\n      GetPaused() {\r\n          return this.m_paused;\r\n      }\r\n      /**\r\n       * Change the particle density.\r\n       *\r\n       * Particle density affects the mass of the particles, which in\r\n       * turn affects how the particles interact with b2Bodies. Note\r\n       * that the density does not affect how the particles interact\r\n       * with each other.\r\n       */\r\n      SetDensity(density) {\r\n          this.m_def.density = density;\r\n          this.m_inverseDensity = 1 / this.m_def.density;\r\n      }\r\n      /**\r\n       * Get the particle density.\r\n       */\r\n      GetDensity() {\r\n          return this.m_def.density;\r\n      }\r\n      /**\r\n       * Change the particle gravity scale. Adjusts the effect of the\r\n       * global gravity vector on particles.\r\n       */\r\n      SetGravityScale(gravityScale) {\r\n          this.m_def.gravityScale = gravityScale;\r\n      }\r\n      /**\r\n       * Get the particle gravity scale.\r\n       */\r\n      GetGravityScale() {\r\n          return this.m_def.gravityScale;\r\n      }\r\n      /**\r\n       * Damping is used to reduce the velocity of particles. The\r\n       * damping parameter can be larger than 1.0f but the damping\r\n       * effect becomes sensitive to the time step when the damping\r\n       * parameter is large.\r\n       */\r\n      SetDamping(damping) {\r\n          this.m_def.dampingStrength = damping;\r\n      }\r\n      /**\r\n       * Get damping for particles\r\n       */\r\n      GetDamping() {\r\n          return this.m_def.dampingStrength;\r\n      }\r\n      /**\r\n       * Change the number of iterations when calculating the static\r\n       * pressure of particles. By default, 8 iterations. You can\r\n       * reduce the number of iterations down to 1 in some situations,\r\n       * but this may cause instabilities when many particles come\r\n       * together. If you see particles popping away from each other\r\n       * like popcorn, you may have to increase the number of\r\n       * iterations.\r\n       *\r\n       * For a description of static pressure, see\r\n       * http://en.wikipedia.org/wiki/Static_pressure#Static_pressure_in_fluid_dynamics\r\n       */\r\n      SetStaticPressureIterations(iterations) {\r\n          this.m_def.staticPressureIterations = iterations;\r\n      }\r\n      /**\r\n       * Get the number of iterations for static pressure of\r\n       * particles.\r\n       */\r\n      GetStaticPressureIterations() {\r\n          return this.m_def.staticPressureIterations;\r\n      }\r\n      /**\r\n       * Change the particle radius.\r\n       *\r\n       * You should set this only once, on world start.\r\n       * If you change the radius during execution, existing particles\r\n       * may explode, shrink, or behave unexpectedly.\r\n       */\r\n      SetRadius(radius) {\r\n          this.m_particleDiameter = 2 * radius;\r\n          this.m_squaredDiameter = this.m_particleDiameter * this.m_particleDiameter;\r\n          this.m_inverseDiameter = 1 / this.m_particleDiameter;\r\n      }\r\n      /**\r\n       * Get the particle radius.\r\n       */\r\n      GetRadius() {\r\n          return this.m_particleDiameter / 2;\r\n      }\r\n      /**\r\n       * Get the position of each particle\r\n       *\r\n       * Array is length GetParticleCount()\r\n       *\r\n       * @return the pointer to the head of the particle positions array.\r\n       */\r\n      GetPositionBuffer() {\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          return this.m_positionBuffer.data;\r\n      }\r\n      /**\r\n       * Get the velocity of each particle\r\n       *\r\n       * Array is length GetParticleCount()\r\n       *\r\n       * @return the pointer to the head of the particle velocities array.\r\n       */\r\n      GetVelocityBuffer() {\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          return this.m_velocityBuffer.data;\r\n      }\r\n      /**\r\n       * Get the color of each particle\r\n       *\r\n       * Array is length GetParticleCount()\r\n       *\r\n       * @return the pointer to the head of the particle colors array.\r\n       */\r\n      GetColorBuffer() {\r\n          this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n          return this.m_colorBuffer.data;\r\n      }\r\n      /**\r\n       * Get the particle-group of each particle.\r\n       *\r\n       * Array is length GetParticleCount()\r\n       *\r\n       * @return the pointer to the head of the particle group array.\r\n       */\r\n      GetGroupBuffer() {\r\n          return this.m_groupBuffer;\r\n      }\r\n      /**\r\n       * Get the weight of each particle\r\n       *\r\n       * Array is length GetParticleCount()\r\n       *\r\n       * @return the pointer to the head of the particle positions array.\r\n       */\r\n      GetWeightBuffer() {\r\n          return this.m_weightBuffer;\r\n      }\r\n      /**\r\n       * Get the user-specified data of each particle.\r\n       *\r\n       * Array is length GetParticleCount()\r\n       *\r\n       * @return the pointer to the head of the particle user-data array.\r\n       */\r\n      GetUserDataBuffer() {\r\n          this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);\r\n          return this.m_userDataBuffer.data;\r\n      }\r\n      /**\r\n       * Get the flags for each particle. See the b2ParticleFlag enum.\r\n       *\r\n       * Array is length GetParticleCount()\r\n       *\r\n       * @return the pointer to the head of the particle-flags array.\r\n       */\r\n      GetFlagsBuffer() {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          return this.m_flagsBuffer.data;\r\n      }\r\n      /**\r\n       * Set flags for a particle. See the b2ParticleFlag enum.\r\n       */\r\n      SetParticleFlags(index, newFlags) {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const oldFlags = this.m_flagsBuffer.data[index];\r\n          if (oldFlags & ~newFlags) {\r\n              // If any flags might be removed\r\n              this.m_needsUpdateAllParticleFlags = true;\r\n          }\r\n          if (~this.m_allParticleFlags & newFlags) {\r\n              // If any flags were added\r\n              if (newFlags & exports.b2ParticleFlag.b2_tensileParticle) {\r\n                  this.m_accumulation2Buffer = this.RequestBuffer(this.m_accumulation2Buffer);\r\n              }\r\n              if (newFlags & exports.b2ParticleFlag.b2_colorMixingParticle) {\r\n                  this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);\r\n              }\r\n              this.m_allParticleFlags |= newFlags;\r\n          }\r\n          this.m_flagsBuffer.data[index] = newFlags;\r\n      }\r\n      /**\r\n       * Get flags for a particle. See the b2ParticleFlag enum.\r\n       */\r\n      GetParticleFlags(index) {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          return this.m_flagsBuffer.data[index];\r\n      }\r\n      /**\r\n       * Set an external buffer for particle data.\r\n       *\r\n       * Normally, the b2World's block allocator is used for particle\r\n       * data. However, sometimes you may have an OpenGL or Java\r\n       * buffer for particle data. To avoid data duplication, you may\r\n       * supply this external buffer.\r\n       *\r\n       * Note that, when b2World's block allocator is used, the\r\n       * particle data buffers can grow as required. However, when\r\n       * external buffers are used, the maximum number of particles is\r\n       * clamped to the size of the smallest external buffer.\r\n       *\r\n       * @param buffer a pointer to a block of memory.\r\n       * @param capacity the number of values in the block.\r\n       */\r\n      SetFlagsBuffer(buffer, capacity) {\r\n          this.SetUserOverridableBuffer(this.m_flagsBuffer, buffer, capacity);\r\n      }\r\n      SetPositionBuffer(buffer, capacity) {\r\n          ///if (buffer instanceof Float32Array) {\r\n          ///let array = [];\r\n          ///for (let i = 0; i < capacity; ++i) {\r\n          ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n          ///}\r\n          ///this.SetUserOverridableBuffer(this.m_positionBuffer, array, capacity);\r\n          ///} else {\r\n          this.SetUserOverridableBuffer(this.m_positionBuffer, buffer, capacity);\r\n          ///}\r\n      }\r\n      SetVelocityBuffer(buffer, capacity) {\r\n          ///if (buffer instanceof Float32Array) {\r\n          ///let array = [];\r\n          ///for (let i = 0; i < capacity; ++i) {\r\n          ///  array[i] = new b2Vec2(buffer.subarray(i * 2, i * 2 + 2));\r\n          ///}\r\n          ///this.SetUserOverridableBuffer(this.m_velocityBuffer, array, capacity);\r\n          ///} else {\r\n          this.SetUserOverridableBuffer(this.m_velocityBuffer, buffer, capacity);\r\n          ///}\r\n      }\r\n      SetColorBuffer(buffer, capacity) {\r\n          ///if (buffer instanceof Uint8Array) {\r\n          ///let array: b2Color[] = [];\r\n          ///for (let i = 0; i < capacity; ++i) {\r\n          ///  array[i] = new b2Color(buffer.subarray(i * 4, i * 4 + 4));\r\n          ///}\r\n          ///this.SetUserOverridableBuffer(this.m_colorBuffer, array, capacity);\r\n          ///} else {\r\n          this.SetUserOverridableBuffer(this.m_colorBuffer, buffer, capacity);\r\n          ///}\r\n      }\r\n      SetUserDataBuffer(buffer, capacity) {\r\n          this.SetUserOverridableBuffer(this.m_userDataBuffer, buffer, capacity);\r\n      }\r\n      /**\r\n       * Get contacts between particles\r\n       * Contact data can be used for many reasons, for example to\r\n       * trigger rendering or audio effects.\r\n       */\r\n      GetContacts() {\r\n          return this.m_contactBuffer.data;\r\n      }\r\n      GetContactCount() {\r\n          return this.m_contactBuffer.count;\r\n      }\r\n      /**\r\n       * Get contacts between particles and bodies\r\n       *\r\n       * Contact data can be used for many reasons, for example to\r\n       * trigger rendering or audio effects.\r\n       */\r\n      GetBodyContacts() {\r\n          return this.m_bodyContactBuffer.data;\r\n      }\r\n      GetBodyContactCount() {\r\n          return this.m_bodyContactBuffer.count;\r\n      }\r\n      /**\r\n       * Get array of particle pairs. The particles in a pair:\r\n       *   (1) are contacting,\r\n       *   (2) are in the same particle group,\r\n       *   (3) are part of a rigid particle group, or are spring, elastic,\r\n       *       or wall particles.\r\n       *   (4) have at least one particle that is a spring or barrier\r\n       *       particle (i.e. one of the types in k_pairFlags),\r\n       *   (5) have at least one particle that returns true for\r\n       *       ConnectionFilter::IsNecessary,\r\n       *   (6) are not zombie particles.\r\n       *\r\n       * Essentially, this is an array of spring or barrier particles\r\n       * that are interacting. The array is sorted by b2ParticlePair's\r\n       * indexA, and then indexB. There are no duplicate entries.\r\n       */\r\n      GetPairs() {\r\n          return this.m_pairBuffer.data;\r\n      }\r\n      GetPairCount() {\r\n          return this.m_pairBuffer.count;\r\n      }\r\n      /**\r\n       * Get array of particle triads. The particles in a triad:\r\n       *   (1) are in the same particle group,\r\n       *   (2) are in a Voronoi triangle together,\r\n       *   (3) are within b2_maxTriadDistance particle diameters of each\r\n       *       other,\r\n       *   (4) return true for ConnectionFilter::ShouldCreateTriad\r\n       *   (5) have at least one particle of type elastic (i.e. one of the\r\n       *       types in k_triadFlags),\r\n       *   (6) are part of a rigid particle group, or are spring, elastic,\r\n       *       or wall particles.\r\n       *   (7) are not zombie particles.\r\n       *\r\n       * Essentially, this is an array of elastic particles that are\r\n       * interacting. The array is sorted by b2ParticleTriad's indexA,\r\n       * then indexB, then indexC. There are no duplicate entries.\r\n       */\r\n      GetTriads() {\r\n          return this.m_triadBuffer.data;\r\n      }\r\n      GetTriadCount() {\r\n          return this.m_triadBuffer.count;\r\n      }\r\n      /**\r\n       * Set an optional threshold for the maximum number of\r\n       * consecutive particle iterations that a particle may contact\r\n       * multiple bodies before it is considered a candidate for being\r\n       * \"stuck\". Setting to zero or less disables.\r\n       */\r\n      SetStuckThreshold(steps) {\r\n          this.m_stuckThreshold = steps;\r\n          if (steps > 0) {\r\n              this.m_lastBodyContactStepBuffer.data = this.RequestBuffer(this.m_lastBodyContactStepBuffer.data);\r\n              this.m_bodyContactCountBuffer.data = this.RequestBuffer(this.m_bodyContactCountBuffer.data);\r\n              this.m_consecutiveContactStepsBuffer.data = this.RequestBuffer(this.m_consecutiveContactStepsBuffer.data);\r\n          }\r\n      }\r\n      /**\r\n       * Get potentially stuck particles from the last step; the user\r\n       * must decide if they are stuck or not, and if so, delete or\r\n       * move them\r\n       */\r\n      GetStuckCandidates() {\r\n          ///return m_stuckParticleBuffer.Data();\r\n          return this.m_stuckParticleBuffer.Data();\r\n      }\r\n      /**\r\n       * Get the number of stuck particle candidates from the last\r\n       * step.\r\n       */\r\n      GetStuckCandidateCount() {\r\n          ///return m_stuckParticleBuffer.GetCount();\r\n          return this.m_stuckParticleBuffer.GetCount();\r\n      }\r\n      /**\r\n       * Compute the kinetic energy that can be lost by damping force\r\n       */\r\n      ComputeCollisionEnergy() {\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const s_v = b2ParticleSystem.ComputeCollisionEnergy_s_v;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          let sum_v2 = 0;\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              const a = contact.indexA;\r\n              const b = contact.indexB;\r\n              const n = contact.normal;\r\n              ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n              const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n              const vn = b2Vec2.DotVV(v, n);\r\n              if (vn < 0) {\r\n                  sum_v2 += vn * vn;\r\n              }\r\n          }\r\n          return 0.5 * this.GetParticleMass() * sum_v2;\r\n      }\r\n      /**\r\n       * Set strict Particle/Body contact check.\r\n       *\r\n       * This is an option that will help ensure correct behavior if\r\n       * there are corners in the world model where Particle/Body\r\n       * contact is ambiguous. This option scales at n*log(n) of the\r\n       * number of Particle/Body contacts, so it is best to only\r\n       * enable if it is necessary for your geometry. Enable if you\r\n       * see strange particle behavior around b2Body intersections.\r\n       */\r\n      SetStrictContactCheck(enabled) {\r\n          this.m_def.strictContactCheck = enabled;\r\n      }\r\n      /**\r\n       * Get the status of the strict contact check.\r\n       */\r\n      GetStrictContactCheck() {\r\n          return this.m_def.strictContactCheck;\r\n      }\r\n      /**\r\n       * Set the lifetime (in seconds) of a particle relative to the\r\n       * current time.  A lifetime of less than or equal to 0.0f\r\n       * results in the particle living forever until it's manually\r\n       * destroyed by the application.\r\n       */\r\n      SetParticleLifetime(index, lifetime) {\r\n          // DEBUG: b2Assert(this.ValidateParticleIndex(index));\r\n          const initializeExpirationTimes = this.m_indexByExpirationTimeBuffer.data === null;\r\n          this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n          this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n          // Initialize the inverse mapping buffer.\r\n          if (initializeExpirationTimes) {\r\n              const particleCount = this.GetParticleCount();\r\n              for (let i = 0; i < particleCount; ++i) {\r\n                  this.m_indexByExpirationTimeBuffer.data[i] = i;\r\n              }\r\n          }\r\n          ///const int32 quantizedLifetime = (int32)(lifetime / m_def.lifetimeGranularity);\r\n          const quantizedLifetime = lifetime / this.m_def.lifetimeGranularity;\r\n          // Use a negative lifetime so that it's possible to track which\r\n          // of the infinite lifetime particles are older.\r\n          const newExpirationTime = quantizedLifetime > 0.0 ? this.GetQuantizedTimeElapsed() + quantizedLifetime : quantizedLifetime;\r\n          if (newExpirationTime !== this.m_expirationTimeBuffer.data[index]) {\r\n              this.m_expirationTimeBuffer.data[index] = newExpirationTime;\r\n              this.m_expirationTimeBufferRequiresSorting = true;\r\n          }\r\n      }\r\n      /**\r\n       * Get the lifetime (in seconds) of a particle relative to the\r\n       * current time.  A value > 0.0f is returned if the particle is\r\n       * scheduled to be destroyed in the future, values <= 0.0f\r\n       * indicate the particle has an infinite lifetime.\r\n       */\r\n      GetParticleLifetime(index) {\r\n          // DEBUG: b2Assert(this.ValidateParticleIndex(index));\r\n          return this.ExpirationTimeToLifetime(this.GetExpirationTimeBuffer()[index]);\r\n      }\r\n      /**\r\n       * Enable / disable destruction of particles in CreateParticle()\r\n       * when no more particles can be created due to a prior call to\r\n       * SetMaxParticleCount().  When this is enabled, the oldest\r\n       * particle is destroyed in CreateParticle() favoring the\r\n       * destruction of particles with a finite lifetime over\r\n       * particles with infinite lifetimes. This feature is enabled by\r\n       * default when particle lifetimes are tracked.  Explicitly\r\n       * enabling this feature using this function enables particle\r\n       * lifetime tracking.\r\n       */\r\n      SetDestructionByAge(enable) {\r\n          if (enable) {\r\n              this.GetExpirationTimeBuffer();\r\n          }\r\n          this.m_def.destroyByAge = enable;\r\n      }\r\n      /**\r\n       * Get whether the oldest particle will be destroyed in\r\n       * CreateParticle() when the maximum number of particles are\r\n       * present in the system.\r\n       */\r\n      GetDestructionByAge() {\r\n          return this.m_def.destroyByAge;\r\n      }\r\n      /**\r\n       * Get the array of particle expiration times indexed by\r\n       * particle index.\r\n       *\r\n       * GetParticleCount() items are in the returned array.\r\n       */\r\n      GetExpirationTimeBuffer() {\r\n          this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);\r\n          return this.m_expirationTimeBuffer.data;\r\n      }\r\n      /**\r\n       * Convert a expiration time value in returned by\r\n       * GetExpirationTimeBuffer() to a time in seconds relative to\r\n       * the current simulation time.\r\n       */\r\n      ExpirationTimeToLifetime(expirationTime) {\r\n          return (expirationTime > 0 ?\r\n              expirationTime - this.GetQuantizedTimeElapsed() :\r\n              expirationTime) * this.m_def.lifetimeGranularity;\r\n      }\r\n      /**\r\n       * Get the array of particle indices ordered by reverse\r\n       * lifetime. The oldest particle indexes are at the end of the\r\n       * array with the newest at the start.  Particles with infinite\r\n       * lifetimes (i.e expiration times less than or equal to 0) are\r\n       * placed at the start of the array.\r\n       * ExpirationTimeToLifetime(GetExpirationTimeBuffer()[index]) is\r\n       * equivalent to GetParticleLifetime(index).\r\n       *\r\n       * GetParticleCount() items are in the returned array.\r\n       */\r\n      GetIndexByExpirationTimeBuffer() {\r\n          // If particles are present, initialize / reinitialize the lifetime buffer.\r\n          if (this.GetParticleCount()) {\r\n              this.SetParticleLifetime(0, this.GetParticleLifetime(0));\r\n          }\r\n          else {\r\n              this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);\r\n          }\r\n          if (!this.m_indexByExpirationTimeBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          return this.m_indexByExpirationTimeBuffer.data;\r\n      }\r\n      /**\r\n       * Apply an impulse to one particle. This immediately modifies\r\n       * the velocity. Similar to b2Body::ApplyLinearImpulse.\r\n       *\r\n       * @param index the particle that will be modified.\r\n       * @param impulse impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n       */\r\n      ParticleApplyLinearImpulse(index, impulse) {\r\n          this.ApplyLinearImpulse(index, index + 1, impulse);\r\n      }\r\n      /**\r\n       * Apply an impulse to all particles between 'firstIndex' and\r\n       * 'lastIndex'. This immediately modifies the velocity. Note\r\n       * that the impulse is applied to the total mass of all\r\n       * particles. So, calling ParticleApplyLinearImpulse(0, impulse)\r\n       * and ParticleApplyLinearImpulse(1, impulse) will impart twice\r\n       * as much velocity as calling just ApplyLinearImpulse(0, 1,\r\n       * impulse).\r\n       *\r\n       * @param firstIndex the first particle to be modified.\r\n       * @param lastIndex the last particle to be modified.\r\n       * @param impulse the world impulse vector, usually in N-seconds or kg-m/s.\r\n       */\r\n      ApplyLinearImpulse(firstIndex, lastIndex, impulse) {\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          const numParticles = (lastIndex - firstIndex);\r\n          const totalMass = numParticles * this.GetParticleMass();\r\n          ///const b2Vec2 velocityDelta = impulse / totalMass;\r\n          const velocityDelta = new b2Vec2().Copy(impulse).SelfMul(1 / totalMass);\r\n          for (let i = firstIndex; i < lastIndex; i++) {\r\n              ///m_velocityBuffer.data[i] += velocityDelta;\r\n              vel_data[i].SelfAdd(velocityDelta);\r\n          }\r\n      }\r\n      static IsSignificantForce(force) {\r\n          return force.x !== 0 || force.y !== 0;\r\n      }\r\n      /**\r\n       * Apply a force to the center of a particle.\r\n       *\r\n       * @param index the particle that will be modified.\r\n       * @param force the world force vector, usually in Newtons (N).\r\n       */\r\n      ParticleApplyForce(index, force) {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (b2ParticleSystem.IsSignificantForce(force) &&\r\n              this.ForceCanBeApplied(this.m_flagsBuffer.data[index])) {\r\n              this.PrepareForceBuffer();\r\n              ///m_forceBuffer[index] += force;\r\n              this.m_forceBuffer[index].SelfAdd(force);\r\n          }\r\n      }\r\n      /**\r\n       * Distribute a force across several particles. The particles\r\n       * must not be wall particles. Note that the force is\r\n       * distributed across all the particles, so calling this\r\n       * function for indices 0..N is not the same as calling\r\n       * ParticleApplyForce(i, force) for i in 0..N.\r\n       *\r\n       * @param firstIndex the first particle to be modified.\r\n       * @param lastIndex the last particle to be modified.\r\n       * @param force the world force vector, usually in Newtons (N).\r\n       */\r\n      ApplyForce(firstIndex, lastIndex, force) {\r\n          // Ensure we're not trying to apply force to particles that can't move,\r\n          // such as wall particles.\r\n          // DEBUG: if (!this.m_flagsBuffer.data) { throw new Error(); }\r\n          // DEBUG: let flags = 0;\r\n          // DEBUG: for (let i = firstIndex; i < lastIndex; i++) {\r\n          // DEBUG:   flags |= this.m_flagsBuffer.data[i];\r\n          // DEBUG: }\r\n          // DEBUG: b2Assert(this.ForceCanBeApplied(flags));\r\n          // Early out if force does nothing (optimization).\r\n          ///const b2Vec2 distributedForce = force / (float32)(lastIndex - firstIndex);\r\n          const distributedForce = new b2Vec2().Copy(force).SelfMul(1 / (lastIndex - firstIndex));\r\n          if (b2ParticleSystem.IsSignificantForce(distributedForce)) {\r\n              this.PrepareForceBuffer();\r\n              // Distribute the force over all the particles.\r\n              for (let i = firstIndex; i < lastIndex; i++) {\r\n                  ///m_forceBuffer[i] += distributedForce;\r\n                  this.m_forceBuffer[i].SelfAdd(distributedForce);\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Get the next particle-system in the world's particle-system\r\n       * list.\r\n       */\r\n      GetNext() {\r\n          return this.m_next;\r\n      }\r\n      /**\r\n       * Query the particle system for all particles that potentially\r\n       * overlap the provided AABB.\r\n       * b2QueryCallback::ShouldQueryParticleSystem is ignored.\r\n       *\r\n       * @param callback a user implemented callback class.\r\n       * @param aabb the query box.\r\n       */\r\n      QueryAABB(callback, aabb) {\r\n          if (this.m_proxyBuffer.count === 0) {\r\n              return;\r\n          }\r\n          const beginProxy = 0;\r\n          const endProxy = this.m_proxyBuffer.count;\r\n          const firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x, this.m_inverseDiameter * aabb.lowerBound.y), b2ParticleSystem.Proxy.CompareProxyTag);\r\n          const lastProxy = std_upper_bound(this.m_proxyBuffer.data, firstProxy, endProxy, b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x, this.m_inverseDiameter * aabb.upperBound.y), b2ParticleSystem.Proxy.CompareTagProxy);\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          for (let k = firstProxy; k < lastProxy; ++k) {\r\n              const proxy = this.m_proxyBuffer.data[k];\r\n              const i = proxy.index;\r\n              const p = pos_data[i];\r\n              if (aabb.lowerBound.x < p.x && p.x < aabb.upperBound.x &&\r\n                  aabb.lowerBound.y < p.y && p.y < aabb.upperBound.y) {\r\n                  if (!callback.ReportParticle(this, i)) {\r\n                      break;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Query the particle system for all particles that potentially\r\n       * overlap the provided shape's AABB. Calls QueryAABB\r\n       * internally. b2QueryCallback::ShouldQueryParticleSystem is\r\n       * ignored.\r\n       *\r\n       * @param callback a user implemented callback class.\r\n       * @param shape the query shape\r\n       * @param xf the transform of the AABB\r\n       * @param childIndex\r\n       */\r\n      QueryShapeAABB(callback, shape, xf, childIndex = 0) {\r\n          const s_aabb = b2ParticleSystem.QueryShapeAABB_s_aabb;\r\n          const aabb = s_aabb;\r\n          shape.ComputeAABB(aabb, xf, childIndex);\r\n          this.QueryAABB(callback, aabb);\r\n      }\r\n      QueryPointAABB(callback, point, slop = b2_linearSlop) {\r\n          const s_aabb = b2ParticleSystem.QueryPointAABB_s_aabb;\r\n          const aabb = s_aabb;\r\n          aabb.lowerBound.Set(point.x - slop, point.y - slop);\r\n          aabb.upperBound.Set(point.x + slop, point.y + slop);\r\n          this.QueryAABB(callback, aabb);\r\n      }\r\n      /**\r\n       * Ray-cast the particle system for all particles in the path of\r\n       * the ray. Your callback controls whether you get the closest\r\n       * point, any point, or n-points. The ray-cast ignores particles\r\n       * that contain the starting point.\r\n       * b2RayCastCallback::ShouldQueryParticleSystem is ignored.\r\n       *\r\n       * @param callback a user implemented callback class.\r\n       * @param point1 the ray starting point\r\n       * @param point2 the ray ending point\r\n       */\r\n      RayCast(callback, point1, point2) {\r\n          const s_aabb = b2ParticleSystem.RayCast_s_aabb;\r\n          const s_p = b2ParticleSystem.RayCast_s_p;\r\n          const s_v = b2ParticleSystem.RayCast_s_v;\r\n          const s_n = b2ParticleSystem.RayCast_s_n;\r\n          const s_point = b2ParticleSystem.RayCast_s_point;\r\n          if (this.m_proxyBuffer.count === 0) {\r\n              return;\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const aabb = s_aabb;\r\n          b2Vec2.MinV(point1, point2, aabb.lowerBound);\r\n          b2Vec2.MaxV(point1, point2, aabb.upperBound);\r\n          let fraction = 1;\r\n          // solving the following equation:\r\n          // ((1-t)*point1+t*point2-position)^2=diameter^2\r\n          // where t is a potential fraction\r\n          ///b2Vec2 v = point2 - point1;\r\n          const v = b2Vec2.SubVV(point2, point1, s_v);\r\n          const v2 = b2Vec2.DotVV(v, v);\r\n          const enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n          let i;\r\n          while ((i = enumerator.GetNext()) >= 0) {\r\n              ///b2Vec2 p = point1 - m_positionBuffer.data[i];\r\n              const p = b2Vec2.SubVV(point1, pos_data[i], s_p);\r\n              const pv = b2Vec2.DotVV(p, v);\r\n              const p2 = b2Vec2.DotVV(p, p);\r\n              const determinant = pv * pv - v2 * (p2 - this.m_squaredDiameter);\r\n              if (determinant >= 0) {\r\n                  const sqrtDeterminant = b2Sqrt(determinant);\r\n                  // find a solution between 0 and fraction\r\n                  let t = (-pv - sqrtDeterminant) / v2;\r\n                  if (t > fraction) {\r\n                      continue;\r\n                  }\r\n                  if (t < 0) {\r\n                      t = (-pv + sqrtDeterminant) / v2;\r\n                      if (t < 0 || t > fraction) {\r\n                          continue;\r\n                      }\r\n                  }\r\n                  ///b2Vec2 n = p + t * v;\r\n                  const n = b2Vec2.AddVMulSV(p, t, v, s_n);\r\n                  n.Normalize();\r\n                  ///float32 f = callback.ReportParticle(this, i, point1 + t * v, n, t);\r\n                  const f = callback.ReportParticle(this, i, b2Vec2.AddVMulSV(point1, t, v, s_point), n, t);\r\n                  fraction = b2Min(fraction, f);\r\n                  if (fraction <= 0) {\r\n                      break;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Compute the axis-aligned bounding box for all particles\r\n       * contained within this particle system.\r\n       * @param aabb Returns the axis-aligned bounding box of the system.\r\n       */\r\n      ComputeAABB(aabb) {\r\n          const particleCount = this.GetParticleCount();\r\n          // DEBUG: b2Assert(aabb !== null);\r\n          aabb.lowerBound.x = +b2_maxFloat;\r\n          aabb.lowerBound.y = +b2_maxFloat;\r\n          aabb.upperBound.x = -b2_maxFloat;\r\n          aabb.upperBound.y = -b2_maxFloat;\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          for (let i = 0; i < particleCount; i++) {\r\n              const p = pos_data[i];\r\n              b2Vec2.MinV(aabb.lowerBound, p, aabb.lowerBound);\r\n              b2Vec2.MaxV(aabb.upperBound, p, aabb.upperBound);\r\n          }\r\n          aabb.lowerBound.x -= this.m_particleDiameter;\r\n          aabb.lowerBound.y -= this.m_particleDiameter;\r\n          aabb.upperBound.x += this.m_particleDiameter;\r\n          aabb.upperBound.y += this.m_particleDiameter;\r\n      }\r\n      FreeBuffer(b, capacity) {\r\n          if (b === null) {\r\n              return;\r\n          }\r\n          b.length = 0;\r\n      }\r\n      FreeUserOverridableBuffer(b) {\r\n          if (b.userSuppliedCapacity === 0) {\r\n              this.FreeBuffer(b.data, this.m_internalAllocatedCapacity);\r\n          }\r\n      }\r\n      /**\r\n       * Reallocate a buffer\r\n       */\r\n      ReallocateBuffer3(oldBuffer, oldCapacity, newCapacity) {\r\n          // b2Assert(newCapacity > oldCapacity);\r\n          if (newCapacity <= oldCapacity) {\r\n              throw new Error();\r\n          }\r\n          const newBuffer = (oldBuffer) ? oldBuffer.slice() : [];\r\n          newBuffer.length = newCapacity;\r\n          return newBuffer;\r\n      }\r\n      /**\r\n       * Reallocate a buffer\r\n       */\r\n      ReallocateBuffer5(buffer, userSuppliedCapacity, oldCapacity, newCapacity, deferred) {\r\n          // b2Assert(newCapacity > oldCapacity);\r\n          if (newCapacity <= oldCapacity) {\r\n              throw new Error();\r\n          }\r\n          // A 'deferred' buffer is reallocated only if it is not NULL.\r\n          // If 'userSuppliedCapacity' is not zero, buffer is user supplied and must\r\n          // be kept.\r\n          // b2Assert(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity);\r\n          if (!(!userSuppliedCapacity || newCapacity <= userSuppliedCapacity)) {\r\n              throw new Error();\r\n          }\r\n          if ((!deferred || buffer) && !userSuppliedCapacity) {\r\n              buffer = this.ReallocateBuffer3(buffer, oldCapacity, newCapacity);\r\n          }\r\n          return buffer; // TODO: fix this\r\n      }\r\n      /**\r\n       * Reallocate a buffer\r\n       */\r\n      ReallocateBuffer4(buffer, oldCapacity, newCapacity, deferred) {\r\n          // DEBUG: b2Assert(newCapacity > oldCapacity);\r\n          return this.ReallocateBuffer5(buffer.data, buffer.userSuppliedCapacity, oldCapacity, newCapacity, deferred);\r\n      }\r\n      RequestBuffer(buffer) {\r\n          if (!buffer) {\r\n              if (this.m_internalAllocatedCapacity === 0) {\r\n                  this.ReallocateInternalAllocatedBuffers(b2_minParticleSystemBufferCapacity);\r\n              }\r\n              buffer = [];\r\n              buffer.length = this.m_internalAllocatedCapacity;\r\n          }\r\n          return buffer;\r\n      }\r\n      /**\r\n       * Reallocate the handle / index map and schedule the allocation\r\n       * of a new pool for handle allocation.\r\n       */\r\n      ReallocateHandleBuffers(newCapacity) {\r\n          // DEBUG: b2Assert(newCapacity > this.m_internalAllocatedCapacity);\r\n          // Reallocate a new handle / index map buffer, copying old handle pointers\r\n          // is fine since they're kept around.\r\n          this.m_handleIndexBuffer.data = this.ReallocateBuffer4(this.m_handleIndexBuffer, this.m_internalAllocatedCapacity, newCapacity, true);\r\n          // Set the size of the next handle allocation.\r\n          ///this.m_handleAllocator.SetItemsPerSlab(newCapacity - this.m_internalAllocatedCapacity);\r\n      }\r\n      ReallocateInternalAllocatedBuffers(capacity) {\r\n          function LimitCapacity(capacity, maxCount) {\r\n              return maxCount && capacity > maxCount ? maxCount : capacity;\r\n          }\r\n          // Don't increase capacity beyond the smallest user-supplied buffer size.\r\n          capacity = LimitCapacity(capacity, this.m_def.maxCount);\r\n          capacity = LimitCapacity(capacity, this.m_flagsBuffer.userSuppliedCapacity);\r\n          capacity = LimitCapacity(capacity, this.m_positionBuffer.userSuppliedCapacity);\r\n          capacity = LimitCapacity(capacity, this.m_velocityBuffer.userSuppliedCapacity);\r\n          capacity = LimitCapacity(capacity, this.m_colorBuffer.userSuppliedCapacity);\r\n          capacity = LimitCapacity(capacity, this.m_userDataBuffer.userSuppliedCapacity);\r\n          if (this.m_internalAllocatedCapacity < capacity) {\r\n              this.ReallocateHandleBuffers(capacity);\r\n              this.m_flagsBuffer.data = this.ReallocateBuffer4(this.m_flagsBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n              // Conditionally defer these as they are optional if the feature is\r\n              // not enabled.\r\n              const stuck = this.m_stuckThreshold > 0;\r\n              this.m_lastBodyContactStepBuffer.data = this.ReallocateBuffer4(this.m_lastBodyContactStepBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n              this.m_bodyContactCountBuffer.data = this.ReallocateBuffer4(this.m_bodyContactCountBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n              this.m_consecutiveContactStepsBuffer.data = this.ReallocateBuffer4(this.m_consecutiveContactStepsBuffer, this.m_internalAllocatedCapacity, capacity, stuck);\r\n              this.m_positionBuffer.data = this.ReallocateBuffer4(this.m_positionBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n              this.m_velocityBuffer.data = this.ReallocateBuffer4(this.m_velocityBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n              this.m_forceBuffer = this.ReallocateBuffer5(this.m_forceBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n              this.m_weightBuffer = this.ReallocateBuffer5(this.m_weightBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n              this.m_staticPressureBuffer = this.ReallocateBuffer5(this.m_staticPressureBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n              this.m_accumulationBuffer = this.ReallocateBuffer5(this.m_accumulationBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n              this.m_accumulation2Buffer = this.ReallocateBuffer5(this.m_accumulation2Buffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n              this.m_depthBuffer = this.ReallocateBuffer5(this.m_depthBuffer, 0, this.m_internalAllocatedCapacity, capacity, true);\r\n              this.m_colorBuffer.data = this.ReallocateBuffer4(this.m_colorBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n              this.m_groupBuffer = this.ReallocateBuffer5(this.m_groupBuffer, 0, this.m_internalAllocatedCapacity, capacity, false);\r\n              this.m_userDataBuffer.data = this.ReallocateBuffer4(this.m_userDataBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n              this.m_expirationTimeBuffer.data = this.ReallocateBuffer4(this.m_expirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, true);\r\n              this.m_indexByExpirationTimeBuffer.data = this.ReallocateBuffer4(this.m_indexByExpirationTimeBuffer, this.m_internalAllocatedCapacity, capacity, false);\r\n              this.m_internalAllocatedCapacity = capacity;\r\n          }\r\n      }\r\n      CreateParticleForGroup(groupDef, xf, p) {\r\n          const particleDef = new b2ParticleDef();\r\n          particleDef.flags = b2Maybe(groupDef.flags, 0);\r\n          ///particleDef.position = b2Mul(xf, p);\r\n          b2Transform.MulXV(xf, p, particleDef.position);\r\n          ///particleDef.velocity =\r\n          ///  groupDef.linearVelocity +\r\n          ///  b2Cross(groupDef.angularVelocity,\r\n          ///      particleDef.position - groupDef.position);\r\n          b2Vec2.AddVV(b2Maybe(groupDef.linearVelocity, b2Vec2.ZERO), b2Vec2.CrossSV(b2Maybe(groupDef.angularVelocity, 0), b2Vec2.SubVV(particleDef.position, b2Maybe(groupDef.position, b2Vec2.ZERO), b2Vec2.s_t0), b2Vec2.s_t0), particleDef.velocity);\r\n          particleDef.color.Copy(b2Maybe(groupDef.color, b2Color.ZERO));\r\n          particleDef.lifetime = b2Maybe(groupDef.lifetime, 0);\r\n          particleDef.userData = groupDef.userData;\r\n          this.CreateParticle(particleDef);\r\n      }\r\n      CreateParticlesStrokeShapeForGroup(shape, groupDef, xf) {\r\n          const s_edge = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge;\r\n          const s_d = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d;\r\n          const s_p = b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p;\r\n          let stride = b2Maybe(groupDef.stride, 0);\r\n          if (stride === 0) {\r\n              stride = this.GetParticleStride();\r\n          }\r\n          let positionOnEdge = 0;\r\n          const childCount = shape.GetChildCount();\r\n          for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n              let edge = null;\r\n              if (shape.GetType() === exports.b2ShapeType.e_edgeShape) {\r\n                  edge = shape;\r\n              }\r\n              else {\r\n                  // DEBUG: b2Assert(shape.GetType() === b2ShapeType.e_chainShape);\r\n                  edge = s_edge;\r\n                  shape.GetChildEdge(edge, childIndex);\r\n              }\r\n              const d = b2Vec2.SubVV(edge.m_vertex2, edge.m_vertex1, s_d);\r\n              const edgeLength = d.Length();\r\n              while (positionOnEdge < edgeLength) {\r\n                  ///b2Vec2 p = edge.m_vertex1 + positionOnEdge / edgeLength * d;\r\n                  const p = b2Vec2.AddVMulSV(edge.m_vertex1, positionOnEdge / edgeLength, d, s_p);\r\n                  this.CreateParticleForGroup(groupDef, xf, p);\r\n                  positionOnEdge += stride;\r\n              }\r\n              positionOnEdge -= edgeLength;\r\n          }\r\n      }\r\n      CreateParticlesFillShapeForGroup(shape, groupDef, xf) {\r\n          const s_aabb = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb;\r\n          const s_p = b2ParticleSystem.CreateParticlesFillShapeForGroup_s_p;\r\n          let stride = b2Maybe(groupDef.stride, 0);\r\n          if (stride === 0) {\r\n              stride = this.GetParticleStride();\r\n          }\r\n          ///b2Transform identity;\r\n          /// identity.SetIdentity();\r\n          const identity = b2Transform.IDENTITY;\r\n          const aabb = s_aabb;\r\n          // DEBUG: b2Assert(shape.GetChildCount() === 1);\r\n          shape.ComputeAABB(aabb, identity, 0);\r\n          for (let y = Math.floor(aabb.lowerBound.y / stride) * stride; y < aabb.upperBound.y; y += stride) {\r\n              for (let x = Math.floor(aabb.lowerBound.x / stride) * stride; x < aabb.upperBound.x; x += stride) {\r\n                  const p = s_p.Set(x, y);\r\n                  if (shape.TestPoint(identity, p)) {\r\n                      this.CreateParticleForGroup(groupDef, xf, p);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      CreateParticlesWithShapeForGroup(shape, groupDef, xf) {\r\n          switch (shape.GetType()) {\r\n              case exports.b2ShapeType.e_edgeShape:\r\n              case exports.b2ShapeType.e_chainShape:\r\n                  this.CreateParticlesStrokeShapeForGroup(shape, groupDef, xf);\r\n                  break;\r\n              case exports.b2ShapeType.e_polygonShape:\r\n              case exports.b2ShapeType.e_circleShape:\r\n                  this.CreateParticlesFillShapeForGroup(shape, groupDef, xf);\r\n                  break;\r\n              default:\r\n                  // DEBUG: b2Assert(false);\r\n                  break;\r\n          }\r\n      }\r\n      CreateParticlesWithShapesForGroup(shapes, shapeCount, groupDef, xf) {\r\n          const compositeShape = new b2ParticleSystem.CompositeShape(shapes, shapeCount);\r\n          this.CreateParticlesFillShapeForGroup(compositeShape, groupDef, xf);\r\n      }\r\n      CloneParticle(oldIndex, group) {\r\n          const def = new b2ParticleDef();\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          def.flags = this.m_flagsBuffer.data[oldIndex];\r\n          def.position.Copy(this.m_positionBuffer.data[oldIndex]);\r\n          def.velocity.Copy(this.m_velocityBuffer.data[oldIndex]);\r\n          if (this.m_colorBuffer.data) {\r\n              def.color.Copy(this.m_colorBuffer.data[oldIndex]);\r\n          }\r\n          if (this.m_userDataBuffer.data) {\r\n              def.userData = this.m_userDataBuffer.data[oldIndex];\r\n          }\r\n          def.group = group;\r\n          const newIndex = this.CreateParticle(def);\r\n          if (this.m_handleIndexBuffer.data) {\r\n              const handle = this.m_handleIndexBuffer.data[oldIndex];\r\n              if (handle) {\r\n                  handle.SetIndex(newIndex);\r\n              }\r\n              this.m_handleIndexBuffer.data[newIndex] = handle;\r\n              this.m_handleIndexBuffer.data[oldIndex] = null;\r\n          }\r\n          if (this.m_lastBodyContactStepBuffer.data) {\r\n              this.m_lastBodyContactStepBuffer.data[newIndex] =\r\n                  this.m_lastBodyContactStepBuffer.data[oldIndex];\r\n          }\r\n          if (this.m_bodyContactCountBuffer.data) {\r\n              this.m_bodyContactCountBuffer.data[newIndex] =\r\n                  this.m_bodyContactCountBuffer.data[oldIndex];\r\n          }\r\n          if (this.m_consecutiveContactStepsBuffer.data) {\r\n              this.m_consecutiveContactStepsBuffer.data[newIndex] =\r\n                  this.m_consecutiveContactStepsBuffer.data[oldIndex];\r\n          }\r\n          if (this.m_hasForce) {\r\n              this.m_forceBuffer[newIndex].Copy(this.m_forceBuffer[oldIndex]);\r\n          }\r\n          if (this.m_staticPressureBuffer) {\r\n              this.m_staticPressureBuffer[newIndex] = this.m_staticPressureBuffer[oldIndex];\r\n          }\r\n          if (this.m_depthBuffer) {\r\n              this.m_depthBuffer[newIndex] = this.m_depthBuffer[oldIndex];\r\n          }\r\n          if (this.m_expirationTimeBuffer.data) {\r\n              this.m_expirationTimeBuffer.data[newIndex] =\r\n                  this.m_expirationTimeBuffer.data[oldIndex];\r\n          }\r\n          return newIndex;\r\n      }\r\n      DestroyParticlesInGroup(group, callDestructionListener = false) {\r\n          for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n              this.DestroyParticle(i, callDestructionListener);\r\n          }\r\n      }\r\n      DestroyParticleGroup(group) {\r\n          // DEBUG: b2Assert(this.m_groupCount > 0);\r\n          // DEBUG: b2Assert(group !== null);\r\n          if (this.m_world.m_destructionListener) {\r\n              this.m_world.m_destructionListener.SayGoodbyeParticleGroup(group);\r\n          }\r\n          this.SetGroupFlags(group, 0);\r\n          for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n              this.m_groupBuffer[i] = null;\r\n          }\r\n          if (group.m_prev) {\r\n              group.m_prev.m_next = group.m_next;\r\n          }\r\n          if (group.m_next) {\r\n              group.m_next.m_prev = group.m_prev;\r\n          }\r\n          if (group === this.m_groupList) {\r\n              this.m_groupList = group.m_next;\r\n          }\r\n          --this.m_groupCount;\r\n      }\r\n      static ParticleCanBeConnected(flags, group) {\r\n          return ((flags & (exports.b2ParticleFlag.b2_wallParticle | exports.b2ParticleFlag.b2_springParticle | exports.b2ParticleFlag.b2_elasticParticle)) !== 0) ||\r\n              ((group !== null) && ((group.GetGroupFlags() & exports.b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0));\r\n      }\r\n      UpdatePairsAndTriads(firstIndex, lastIndex, filter) {\r\n          const s_dab = b2ParticleSystem.UpdatePairsAndTriads_s_dab;\r\n          const s_dbc = b2ParticleSystem.UpdatePairsAndTriads_s_dbc;\r\n          const s_dca = b2ParticleSystem.UpdatePairsAndTriads_s_dca;\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          // Create pairs or triads.\r\n          // All particles in each pair/triad should satisfy the following:\r\n          // * firstIndex <= index < lastIndex\r\n          // * don't have b2_zombieParticle\r\n          // * ParticleCanBeConnected returns true\r\n          // * ShouldCreatePair/ShouldCreateTriad returns true\r\n          // Any particles in each pair/triad should satisfy the following:\r\n          // * filter.IsNeeded returns true\r\n          // * have one of k_pairFlags/k_triadsFlags\r\n          // DEBUG: b2Assert(firstIndex <= lastIndex);\r\n          let particleFlags = 0;\r\n          for (let i = firstIndex; i < lastIndex; i++) {\r\n              particleFlags |= this.m_flagsBuffer.data[i];\r\n          }\r\n          if (particleFlags & b2ParticleSystem.k_pairFlags) {\r\n              for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                  const contact = this.m_contactBuffer.data[k];\r\n                  const a = contact.indexA;\r\n                  const b = contact.indexB;\r\n                  const af = this.m_flagsBuffer.data[a];\r\n                  const bf = this.m_flagsBuffer.data[b];\r\n                  const groupA = this.m_groupBuffer[a];\r\n                  const groupB = this.m_groupBuffer[b];\r\n                  if (a >= firstIndex && a < lastIndex &&\r\n                      b >= firstIndex && b < lastIndex &&\r\n                      !((af | bf) & exports.b2ParticleFlag.b2_zombieParticle) &&\r\n                      ((af | bf) & b2ParticleSystem.k_pairFlags) &&\r\n                      (filter.IsNecessary(a) || filter.IsNecessary(b)) &&\r\n                      b2ParticleSystem.ParticleCanBeConnected(af, groupA) &&\r\n                      b2ParticleSystem.ParticleCanBeConnected(bf, groupB) &&\r\n                      filter.ShouldCreatePair(a, b)) {\r\n                      ///b2ParticlePair& pair = m_pairBuffer.Append();\r\n                      const pair = this.m_pairBuffer.data[this.m_pairBuffer.Append()];\r\n                      pair.indexA = a;\r\n                      pair.indexB = b;\r\n                      pair.flags = contact.flags;\r\n                      pair.strength = b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1);\r\n                      ///pair.distance = b2Distance(pos_data[a], pos_data[b]); // TODO: this was wrong!\r\n                      pair.distance = b2Vec2.DistanceVV(pos_data[a], pos_data[b]);\r\n                  }\r\n                  ///std::stable_sort(m_pairBuffer.Begin(), m_pairBuffer.End(), ComparePairIndices);\r\n                  std_stable_sort(this.m_pairBuffer.data, 0, this.m_pairBuffer.count, b2ParticleSystem.ComparePairIndices);\r\n                  ///m_pairBuffer.Unique(MatchPairIndices);\r\n                  this.m_pairBuffer.Unique(b2ParticleSystem.MatchPairIndices);\r\n              }\r\n          }\r\n          if (particleFlags & b2ParticleSystem.k_triadFlags) {\r\n              const diagram = new b2VoronoiDiagram(lastIndex - firstIndex);\r\n              ///let necessary_count = 0;\r\n              for (let i = firstIndex; i < lastIndex; i++) {\r\n                  const flags = this.m_flagsBuffer.data[i];\r\n                  const group = this.m_groupBuffer[i];\r\n                  if (!(flags & exports.b2ParticleFlag.b2_zombieParticle) &&\r\n                      b2ParticleSystem.ParticleCanBeConnected(flags, group)) {\r\n                      ///if (filter.IsNecessary(i)) {\r\n                      ///++necessary_count;\r\n                      ///}\r\n                      diagram.AddGenerator(pos_data[i], i, filter.IsNecessary(i));\r\n                  }\r\n              }\r\n              ///if (necessary_count === 0) {\r\n              /////debugger;\r\n              ///for (let i = firstIndex; i < lastIndex; i++) {\r\n              ///  filter.IsNecessary(i);\r\n              ///}\r\n              ///}\r\n              const stride = this.GetParticleStride();\r\n              diagram.Generate(stride / 2, stride * 2);\r\n              const system = this;\r\n              const callback = /*UpdateTriadsCallback*/ (a, b, c) => {\r\n                  if (!system.m_flagsBuffer.data) {\r\n                      throw new Error();\r\n                  }\r\n                  const af = system.m_flagsBuffer.data[a];\r\n                  const bf = system.m_flagsBuffer.data[b];\r\n                  const cf = system.m_flagsBuffer.data[c];\r\n                  if (((af | bf | cf) & b2ParticleSystem.k_triadFlags) &&\r\n                      filter.ShouldCreateTriad(a, b, c)) {\r\n                      const pa = pos_data[a];\r\n                      const pb = pos_data[b];\r\n                      const pc = pos_data[c];\r\n                      const dab = b2Vec2.SubVV(pa, pb, s_dab);\r\n                      const dbc = b2Vec2.SubVV(pb, pc, s_dbc);\r\n                      const dca = b2Vec2.SubVV(pc, pa, s_dca);\r\n                      const maxDistanceSquared = b2_maxTriadDistanceSquared * system.m_squaredDiameter;\r\n                      if (b2Vec2.DotVV(dab, dab) > maxDistanceSquared ||\r\n                          b2Vec2.DotVV(dbc, dbc) > maxDistanceSquared ||\r\n                          b2Vec2.DotVV(dca, dca) > maxDistanceSquared) {\r\n                          return;\r\n                      }\r\n                      const groupA = system.m_groupBuffer[a];\r\n                      const groupB = system.m_groupBuffer[b];\r\n                      const groupC = system.m_groupBuffer[c];\r\n                      ///b2ParticleTriad& triad = m_system.m_triadBuffer.Append();\r\n                      const triad = system.m_triadBuffer.data[system.m_triadBuffer.Append()];\r\n                      triad.indexA = a;\r\n                      triad.indexB = b;\r\n                      triad.indexC = c;\r\n                      triad.flags = af | bf | cf;\r\n                      triad.strength = b2Min(b2Min(groupA ? groupA.m_strength : 1, groupB ? groupB.m_strength : 1), groupC ? groupC.m_strength : 1);\r\n                      ///let midPoint = b2Vec2.MulSV(1.0 / 3.0, b2Vec2.AddVV(pa, b2Vec2.AddVV(pb, pc, new b2Vec2()), new b2Vec2()), new b2Vec2());\r\n                      const midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                      const midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                      ///triad.pa = b2Vec2.SubVV(pa, midPoint, new b2Vec2());\r\n                      triad.pa.x = pa.x - midPoint_x;\r\n                      triad.pa.y = pa.y - midPoint_y;\r\n                      ///triad.pb = b2Vec2.SubVV(pb, midPoint, new b2Vec2());\r\n                      triad.pb.x = pb.x - midPoint_x;\r\n                      triad.pb.y = pb.y - midPoint_y;\r\n                      ///triad.pc = b2Vec2.SubVV(pc, midPoint, new b2Vec2());\r\n                      triad.pc.x = pc.x - midPoint_x;\r\n                      triad.pc.y = pc.y - midPoint_y;\r\n                      triad.ka = -b2Vec2.DotVV(dca, dab);\r\n                      triad.kb = -b2Vec2.DotVV(dab, dbc);\r\n                      triad.kc = -b2Vec2.DotVV(dbc, dca);\r\n                      triad.s = b2Vec2.CrossVV(pa, pb) + b2Vec2.CrossVV(pb, pc) + b2Vec2.CrossVV(pc, pa);\r\n                  }\r\n              };\r\n              diagram.GetNodes(callback);\r\n              ///std::stable_sort(m_triadBuffer.Begin(), m_triadBuffer.End(), CompareTriadIndices);\r\n              std_stable_sort(this.m_triadBuffer.data, 0, this.m_triadBuffer.count, b2ParticleSystem.CompareTriadIndices);\r\n              ///m_triadBuffer.Unique(MatchTriadIndices);\r\n              this.m_triadBuffer.Unique(b2ParticleSystem.MatchTriadIndices);\r\n          }\r\n      }\r\n      UpdatePairsAndTriadsWithReactiveParticles() {\r\n          const filter = new b2ParticleSystem.ReactiveFilter(this.m_flagsBuffer);\r\n          this.UpdatePairsAndTriads(0, this.m_count, filter);\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              this.m_flagsBuffer.data[i] &= ~exports.b2ParticleFlag.b2_reactiveParticle;\r\n          }\r\n          this.m_allParticleFlags &= ~exports.b2ParticleFlag.b2_reactiveParticle;\r\n      }\r\n      static ComparePairIndices(a, b) {\r\n          const diffA = a.indexA - b.indexA;\r\n          if (diffA !== 0) {\r\n              return diffA < 0;\r\n          }\r\n          return a.indexB < b.indexB;\r\n      }\r\n      static MatchPairIndices(a, b) {\r\n          return a.indexA === b.indexA && a.indexB === b.indexB;\r\n      }\r\n      static CompareTriadIndices(a, b) {\r\n          const diffA = a.indexA - b.indexA;\r\n          if (diffA !== 0) {\r\n              return diffA < 0;\r\n          }\r\n          const diffB = a.indexB - b.indexB;\r\n          if (diffB !== 0) {\r\n              return diffB < 0;\r\n          }\r\n          return a.indexC < b.indexC;\r\n      }\r\n      static MatchTriadIndices(a, b) {\r\n          return a.indexA === b.indexA && a.indexB === b.indexB && a.indexC === b.indexC;\r\n      }\r\n      static InitializeParticleLists(group, nodeBuffer) {\r\n          const bufferIndex = group.GetBufferIndex();\r\n          const particleCount = group.GetParticleCount();\r\n          for (let i = 0; i < particleCount; i++) {\r\n              const node = nodeBuffer[i];\r\n              node.list = node;\r\n              node.next = null;\r\n              node.count = 1;\r\n              node.index = i + bufferIndex;\r\n          }\r\n      }\r\n      MergeParticleListsInContact(group, nodeBuffer) {\r\n          const bufferIndex = group.GetBufferIndex();\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              /*const b2ParticleContact&*/\r\n              const contact = this.m_contactBuffer.data[k];\r\n              const a = contact.indexA;\r\n              const b = contact.indexB;\r\n              if (!group.ContainsParticle(a) || !group.ContainsParticle(b)) {\r\n                  continue;\r\n              }\r\n              let listA = nodeBuffer[a - bufferIndex].list;\r\n              let listB = nodeBuffer[b - bufferIndex].list;\r\n              if (listA === listB) {\r\n                  continue;\r\n              }\r\n              // To minimize the cost of insertion, make sure listA is longer than\r\n              // listB.\r\n              if (listA.count < listB.count) {\r\n                  const _tmp = listA;\r\n                  listA = listB;\r\n                  listB = _tmp; ///b2Swap(listA, listB);\r\n              }\r\n              // DEBUG: b2Assert(listA.count >= listB.count);\r\n              b2ParticleSystem.MergeParticleLists(listA, listB);\r\n          }\r\n      }\r\n      static MergeParticleLists(listA, listB) {\r\n          // Insert listB between index 0 and 1 of listA\r\n          // Example:\r\n          //     listA => a1 => a2 => a3 => null\r\n          //     listB => b1 => b2 => null\r\n          // to\r\n          //     listA => listB => b1 => b2 => a1 => a2 => a3 => null\r\n          // DEBUG: b2Assert(listA !== listB);\r\n          for (let b = listB;;) {\r\n              b.list = listA;\r\n              const nextB = b.next;\r\n              if (nextB) {\r\n                  b = nextB;\r\n              }\r\n              else {\r\n                  b.next = listA.next;\r\n                  break;\r\n              }\r\n          }\r\n          listA.next = listB;\r\n          listA.count += listB.count;\r\n          listB.count = 0;\r\n      }\r\n      static FindLongestParticleList(group, nodeBuffer) {\r\n          const particleCount = group.GetParticleCount();\r\n          let result = nodeBuffer[0];\r\n          for (let i = 0; i < particleCount; i++) {\r\n              const node = nodeBuffer[i];\r\n              if (result.count < node.count) {\r\n                  result = node;\r\n              }\r\n          }\r\n          return result;\r\n      }\r\n      MergeZombieParticleListNodes(group, nodeBuffer, survivingList) {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const particleCount = group.GetParticleCount();\r\n          for (let i = 0; i < particleCount; i++) {\r\n              const node = nodeBuffer[i];\r\n              if (node !== survivingList &&\r\n                  (this.m_flagsBuffer.data[node.index] & exports.b2ParticleFlag.b2_zombieParticle)) {\r\n                  b2ParticleSystem.MergeParticleListAndNode(survivingList, node);\r\n              }\r\n          }\r\n      }\r\n      static MergeParticleListAndNode(list, node) {\r\n          // Insert node between index 0 and 1 of list\r\n          // Example:\r\n          //     list => a1 => a2 => a3 => null\r\n          //     node => null\r\n          // to\r\n          //     list => node => a1 => a2 => a3 => null\r\n          // DEBUG: b2Assert(node !== list);\r\n          // DEBUG: b2Assert(node.list === node);\r\n          // DEBUG: b2Assert(node.count === 1);\r\n          node.list = list;\r\n          node.next = list.next;\r\n          list.next = node;\r\n          list.count++;\r\n          node.count = 0;\r\n      }\r\n      CreateParticleGroupsFromParticleList(group, nodeBuffer, survivingList) {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const particleCount = group.GetParticleCount();\r\n          const def = new b2ParticleGroupDef();\r\n          def.groupFlags = group.GetGroupFlags();\r\n          def.userData = group.GetUserData();\r\n          for (let i = 0; i < particleCount; i++) {\r\n              const list = nodeBuffer[i];\r\n              if (!list.count || list === survivingList) {\r\n                  continue;\r\n              }\r\n              // DEBUG: b2Assert(list.list === list);\r\n              const newGroup = this.CreateParticleGroup(def);\r\n              for (let node = list; node; node = node.next) {\r\n                  const oldIndex = node.index;\r\n                  // DEBUG: const flags = this.m_flagsBuffer.data[oldIndex];\r\n                  // DEBUG: b2Assert(!(flags & b2ParticleFlag.b2_zombieParticle));\r\n                  const newIndex = this.CloneParticle(oldIndex, newGroup);\r\n                  this.m_flagsBuffer.data[oldIndex] |= exports.b2ParticleFlag.b2_zombieParticle;\r\n                  node.index = newIndex;\r\n              }\r\n          }\r\n      }\r\n      UpdatePairsAndTriadsWithParticleList(group, nodeBuffer) {\r\n          const bufferIndex = group.GetBufferIndex();\r\n          // Update indices in pairs and triads. If an index belongs to the group,\r\n          // replace it with the corresponding value in nodeBuffer.\r\n          // Note that nodeBuffer is allocated only for the group and the index should\r\n          // be shifted by bufferIndex.\r\n          for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n              const pair = this.m_pairBuffer.data[k];\r\n              const a = pair.indexA;\r\n              const b = pair.indexB;\r\n              if (group.ContainsParticle(a)) {\r\n                  pair.indexA = nodeBuffer[a - bufferIndex].index;\r\n              }\r\n              if (group.ContainsParticle(b)) {\r\n                  pair.indexB = nodeBuffer[b - bufferIndex].index;\r\n              }\r\n          }\r\n          for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n              const triad = this.m_triadBuffer.data[k];\r\n              const a = triad.indexA;\r\n              const b = triad.indexB;\r\n              const c = triad.indexC;\r\n              if (group.ContainsParticle(a)) {\r\n                  triad.indexA = nodeBuffer[a - bufferIndex].index;\r\n              }\r\n              if (group.ContainsParticle(b)) {\r\n                  triad.indexB = nodeBuffer[b - bufferIndex].index;\r\n              }\r\n              if (group.ContainsParticle(c)) {\r\n                  triad.indexC = nodeBuffer[c - bufferIndex].index;\r\n              }\r\n          }\r\n      }\r\n      ComputeDepth() {\r\n          ///b2ParticleContact* contactGroups = (b2ParticleContact*) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleContact) * this.m_contactBuffer.GetCount());\r\n          const contactGroups = []; // TODO: static\r\n          let contactGroupsCount = 0;\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              const a = contact.indexA;\r\n              const b = contact.indexB;\r\n              const groupA = this.m_groupBuffer[a];\r\n              const groupB = this.m_groupBuffer[b];\r\n              if (groupA && groupA === groupB &&\r\n                  (groupA.m_groupFlags & exports.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth)) {\r\n                  contactGroups[contactGroupsCount++] = contact;\r\n              }\r\n          }\r\n          ///b2ParticleGroup** groupsToUpdate = (b2ParticleGroup**) this.m_world.m_stackAllocator.Allocate(sizeof(b2ParticleGroup*) * this.m_groupCount);\r\n          const groupsToUpdate = []; // TODO: static\r\n          let groupsToUpdateCount = 0;\r\n          for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n              if (group.m_groupFlags & exports.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                  groupsToUpdate[groupsToUpdateCount++] = group;\r\n                  this.SetGroupFlags(group, group.m_groupFlags &\r\n                      ~exports.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                  for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                      this.m_accumulationBuffer[i] = 0;\r\n                  }\r\n              }\r\n          }\r\n          // Compute sum of weight of contacts except between different groups.\r\n          for (let k = 0; k < contactGroupsCount; k++) {\r\n              const contact = contactGroups[k];\r\n              const a = contact.indexA;\r\n              const b = contact.indexB;\r\n              const w = contact.weight;\r\n              this.m_accumulationBuffer[a] += w;\r\n              this.m_accumulationBuffer[b] += w;\r\n          }\r\n          // DEBUG: b2Assert(this.m_depthBuffer !== null);\r\n          for (let i = 0; i < groupsToUpdateCount; i++) {\r\n              const group = groupsToUpdate[i];\r\n              for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                  const w = this.m_accumulationBuffer[i];\r\n                  this.m_depthBuffer[i] = w < 0.8 ? 0 : b2_maxFloat;\r\n              }\r\n          }\r\n          // The number of iterations is equal to particle number from the deepest\r\n          // particle to the nearest surface particle, and in general it is smaller\r\n          // than sqrt of total particle number.\r\n          ///int32 iterationCount = (int32)b2Sqrt((float)m_count);\r\n          const iterationCount = b2Sqrt(this.m_count) >> 0;\r\n          for (let t = 0; t < iterationCount; t++) {\r\n              let updated = false;\r\n              for (let k = 0; k < contactGroupsCount; k++) {\r\n                  const contact = contactGroups[k];\r\n                  const a = contact.indexA;\r\n                  const b = contact.indexB;\r\n                  const r = 1 - contact.weight;\r\n                  ///float32& ap0 = m_depthBuffer[a];\r\n                  const ap0 = this.m_depthBuffer[a];\r\n                  ///float32& bp0 = m_depthBuffer[b];\r\n                  const bp0 = this.m_depthBuffer[b];\r\n                  const ap1 = bp0 + r;\r\n                  const bp1 = ap0 + r;\r\n                  if (ap0 > ap1) {\r\n                      ///ap0 = ap1;\r\n                      this.m_depthBuffer[a] = ap1;\r\n                      updated = true;\r\n                  }\r\n                  if (bp0 > bp1) {\r\n                      ///bp0 = bp1;\r\n                      this.m_depthBuffer[b] = bp1;\r\n                      updated = true;\r\n                  }\r\n              }\r\n              if (!updated) {\r\n                  break;\r\n              }\r\n          }\r\n          for (let i = 0; i < groupsToUpdateCount; i++) {\r\n              const group = groupsToUpdate[i];\r\n              for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                  if (this.m_depthBuffer[i] < b2_maxFloat) {\r\n                      this.m_depthBuffer[i] *= this.m_particleDiameter;\r\n                  }\r\n                  else {\r\n                      this.m_depthBuffer[i] = 0;\r\n                  }\r\n              }\r\n          }\r\n          ///this.m_world.m_stackAllocator.Free(groupsToUpdate);\r\n          ///this.m_world.m_stackAllocator.Free(contactGroups);\r\n      }\r\n      GetInsideBoundsEnumerator(aabb) {\r\n          const lowerTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.lowerBound.x - 1, this.m_inverseDiameter * aabb.lowerBound.y - 1);\r\n          const upperTag = b2ParticleSystem.computeTag(this.m_inverseDiameter * aabb.upperBound.x + 1, this.m_inverseDiameter * aabb.upperBound.y + 1);\r\n          ///const Proxy* beginProxy = m_proxyBuffer.Begin();\r\n          const beginProxy = 0;\r\n          ///const Proxy* endProxy = m_proxyBuffer.End();\r\n          const endProxy = this.m_proxyBuffer.count;\r\n          ///const Proxy* firstProxy = std::lower_bound(beginProxy, endProxy, lowerTag);\r\n          const firstProxy = std_lower_bound(this.m_proxyBuffer.data, beginProxy, endProxy, lowerTag, b2ParticleSystem.Proxy.CompareProxyTag);\r\n          ///const Proxy* lastProxy = std::upper_bound(firstProxy, endProxy, upperTag);\r\n          const lastProxy = std_upper_bound(this.m_proxyBuffer.data, beginProxy, endProxy, upperTag, b2ParticleSystem.Proxy.CompareTagProxy);\r\n          // DEBUG: b2Assert(beginProxy <= firstProxy);\r\n          // DEBUG: b2Assert(firstProxy <= lastProxy);\r\n          // DEBUG: b2Assert(lastProxy <= endProxy);\r\n          return new b2ParticleSystem.InsideBoundsEnumerator(this, lowerTag, upperTag, firstProxy, lastProxy);\r\n      }\r\n      UpdateAllParticleFlags() {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          this.m_allParticleFlags = 0;\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              this.m_allParticleFlags |= this.m_flagsBuffer.data[i];\r\n          }\r\n          this.m_needsUpdateAllParticleFlags = false;\r\n      }\r\n      UpdateAllGroupFlags() {\r\n          this.m_allGroupFlags = 0;\r\n          for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n              this.m_allGroupFlags |= group.m_groupFlags;\r\n          }\r\n          this.m_needsUpdateAllGroupFlags = false;\r\n      }\r\n      AddContact(a, b, contacts) {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const s_d = b2ParticleSystem.AddContact_s_d;\r\n          const pos_data = this.m_positionBuffer.data;\r\n          // DEBUG: b2Assert(contacts === this.m_contactBuffer);\r\n          ///b2Vec2 d = m_positionBuffer.data[b] - m_positionBuffer.data[a];\r\n          const d = b2Vec2.SubVV(pos_data[b], pos_data[a], s_d);\r\n          const distBtParticlesSq = b2Vec2.DotVV(d, d);\r\n          if (distBtParticlesSq < this.m_squaredDiameter) {\r\n              let invD = b2InvSqrt(distBtParticlesSq);\r\n              if (!isFinite(invD)) {\r\n                  invD = 1.98177537e+019;\r\n              }\r\n              ///b2ParticleContact& contact = contacts.Append();\r\n              const contact = this.m_contactBuffer.data[this.m_contactBuffer.Append()];\r\n              contact.indexA = a;\r\n              contact.indexB = b;\r\n              contact.flags = this.m_flagsBuffer.data[a] | this.m_flagsBuffer.data[b];\r\n              contact.weight = 1 - distBtParticlesSq * invD * this.m_inverseDiameter;\r\n              ///contact.SetNormal(invD * d);\r\n              b2Vec2.MulSV(invD, d, contact.normal);\r\n          }\r\n      }\r\n      FindContacts_Reference(contacts) {\r\n          // DEBUG: b2Assert(contacts === this.m_contactBuffer);\r\n          const beginProxy = 0;\r\n          const endProxy = this.m_proxyBuffer.count;\r\n          this.m_contactBuffer.count = 0;\r\n          for (let a = beginProxy, c = beginProxy; a < endProxy; a++) {\r\n              const rightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 0);\r\n              for (let b = a + 1; b < endProxy; b++) {\r\n                  if (rightTag < this.m_proxyBuffer.data[b].tag) {\r\n                      break;\r\n                  }\r\n                  this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n              }\r\n              const bottomLeftTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, -1, 1);\r\n              for (; c < endProxy; c++) {\r\n                  if (bottomLeftTag <= this.m_proxyBuffer.data[c].tag) {\r\n                      break;\r\n                  }\r\n              }\r\n              const bottomRightTag = b2ParticleSystem.computeRelativeTag(this.m_proxyBuffer.data[a].tag, 1, 1);\r\n              for (let b = c; b < endProxy; b++) {\r\n                  if (bottomRightTag < this.m_proxyBuffer.data[b].tag) {\r\n                      break;\r\n                  }\r\n                  this.AddContact(this.m_proxyBuffer.data[a].index, this.m_proxyBuffer.data[b].index, this.m_contactBuffer);\r\n              }\r\n          }\r\n      }\r\n      ///void ReorderForFindContact(FindContactInput* reordered, int alignedCount) const;\r\n      ///void GatherChecksOneParticle(const uint32 bound, const int startIndex, const int particleIndex, int* nextUncheckedIndex, b2GrowableBuffer<FindContactCheck>& checks) const;\r\n      ///void GatherChecks(b2GrowableBuffer<FindContactCheck>& checks) const;\r\n      ///void FindContacts_Simd(b2GrowableBuffer<b2ParticleContact>& contacts) const;\r\n      FindContacts(contacts) {\r\n          this.FindContacts_Reference(contacts);\r\n      }\r\n      ///static void UpdateProxyTags(const uint32* const tags, b2GrowableBuffer<Proxy>& proxies);\r\n      ///static bool ProxyBufferHasIndex(int32 index, const Proxy* const a, int count);\r\n      ///static int NumProxiesWithSameTag(const Proxy* const a, const Proxy* const b, int count);\r\n      ///static bool AreProxyBuffersTheSame(const b2GrowableBuffer<Proxy>& a, const b2GrowableBuffer<Proxy>& b);\r\n      UpdateProxies_Reference(proxies) {\r\n          // DEBUG: b2Assert(proxies === this.m_proxyBuffer);\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const inv_diam = this.m_inverseDiameter;\r\n          for (let k = 0; k < this.m_proxyBuffer.count; ++k) {\r\n              const proxy = this.m_proxyBuffer.data[k];\r\n              const i = proxy.index;\r\n              const p = pos_data[i];\r\n              proxy.tag = b2ParticleSystem.computeTag(inv_diam * p.x, inv_diam * p.y);\r\n          }\r\n      }\r\n      ///void UpdateProxies_Simd(b2GrowableBuffer<Proxy>& proxies) const;\r\n      UpdateProxies(proxies) {\r\n          this.UpdateProxies_Reference(proxies);\r\n      }\r\n      SortProxies(proxies) {\r\n          // DEBUG: b2Assert(proxies === this.m_proxyBuffer);\r\n          ///std::sort(proxies.Begin(), proxies.End());\r\n          std_sort(this.m_proxyBuffer.data, 0, this.m_proxyBuffer.count, b2ParticleSystem.Proxy.CompareProxyProxy);\r\n      }\r\n      FilterContacts(contacts) {\r\n          // Optionally filter the contact.\r\n          const contactFilter = this.GetParticleContactFilter();\r\n          if (contactFilter === null) {\r\n              return;\r\n          }\r\n          /// contacts.RemoveIf(b2ParticleContactRemovePredicate(this, contactFilter));\r\n          // DEBUG: b2Assert(contacts === this.m_contactBuffer);\r\n          const system = this;\r\n          const predicate = (contact) => {\r\n              return ((contact.flags & exports.b2ParticleFlag.b2_particleContactFilterParticle) !== 0) && !contactFilter.ShouldCollideParticleParticle(system, contact.indexA, contact.indexB);\r\n          };\r\n          this.m_contactBuffer.RemoveIf(predicate);\r\n      }\r\n      NotifyContactListenerPreContact(particlePairs) {\r\n          const contactListener = this.GetParticleContactListener();\r\n          if (contactListener === null) {\r\n              return;\r\n          }\r\n          ///particlePairs.Initialize(m_contactBuffer.Begin(), m_contactBuffer.GetCount(), GetFlagsBuffer());\r\n          particlePairs.Initialize(this.m_contactBuffer, this.m_flagsBuffer);\r\n          throw new Error(); // TODO: notify\r\n      }\r\n      NotifyContactListenerPostContact(particlePairs) {\r\n          const contactListener = this.GetParticleContactListener();\r\n          if (contactListener === null) {\r\n              return;\r\n          }\r\n          // Loop through all new contacts, reporting any new ones, and\r\n          // \"invalidating\" the ones that still exist.\r\n          ///const b2ParticleContact* const endContact = m_contactBuffer.End();\r\n          ///for (b2ParticleContact* contact = m_contactBuffer.Begin(); contact < endContact; ++contact)\r\n          for (let k = 0; k < this.m_contactBuffer.count; ++k) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              {\r\n                  // Just started touching, inform the listener.\r\n                  contactListener.BeginContactParticleParticle(this, contact);\r\n              }\r\n          }\r\n          // Report particles that are no longer touching.\r\n          // That is, any pairs that were not invalidated above.\r\n          ///const int32 pairCount = particlePairs.GetCount();\r\n          ///const ParticlePair* const pairs = particlePairs.GetBuffer();\r\n          ///const int8* const valid = particlePairs.GetValidBuffer();\r\n          ///for (int32 i = 0; i < pairCount; ++i)\r\n          ///{\r\n          ///  if (valid[i])\r\n          ///  {\r\n          ///    contactListener.EndContactParticleParticle(this, pairs[i].first, pairs[i].second);\r\n          ///  }\r\n          ///}\r\n          throw new Error(); // TODO: notify\r\n      }\r\n      static b2ParticleContactIsZombie(contact) {\r\n          return (contact.flags & exports.b2ParticleFlag.b2_zombieParticle) === exports.b2ParticleFlag.b2_zombieParticle;\r\n      }\r\n      UpdateContacts(exceptZombie) {\r\n          this.UpdateProxies(this.m_proxyBuffer);\r\n          this.SortProxies(this.m_proxyBuffer);\r\n          ///b2ParticlePairSet particlePairs(&this.m_world.m_stackAllocator);\r\n          const particlePairs = new b2ParticleSystem.b2ParticlePairSet(); // TODO: static\r\n          this.NotifyContactListenerPreContact(particlePairs);\r\n          this.FindContacts(this.m_contactBuffer);\r\n          this.FilterContacts(this.m_contactBuffer);\r\n          this.NotifyContactListenerPostContact(particlePairs);\r\n          if (exceptZombie) {\r\n              this.m_contactBuffer.RemoveIf(b2ParticleSystem.b2ParticleContactIsZombie);\r\n          }\r\n      }\r\n      NotifyBodyContactListenerPreContact(fixtureSet) {\r\n          const contactListener = this.GetFixtureContactListener();\r\n          if (contactListener === null) {\r\n              return;\r\n          }\r\n          ///fixtureSet.Initialize(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.GetCount(), GetFlagsBuffer());\r\n          fixtureSet.Initialize(this.m_bodyContactBuffer, this.m_flagsBuffer);\r\n          throw new Error(); // TODO: notify\r\n      }\r\n      NotifyBodyContactListenerPostContact(fixtureSet) {\r\n          const contactListener = this.GetFixtureContactListener();\r\n          if (contactListener === null) {\r\n              return;\r\n          }\r\n          // Loop through all new contacts, reporting any new ones, and\r\n          // \"invalidating\" the ones that still exist.\r\n          ///for (b2ParticleBodyContact* contact = m_bodyContactBuffer.Begin(); contact !== m_bodyContactBuffer.End(); ++contact)\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              {\r\n                  // Just started touching, report it!\r\n                  contactListener.BeginContactFixtureParticle(this, contact);\r\n              }\r\n          }\r\n          // If the contact listener is enabled, report all fixtures that are no\r\n          // longer in contact with particles.\r\n          ///const FixtureParticle* const fixtureParticles = fixtureSet.GetBuffer();\r\n          ///const int8* const fixtureParticlesValid = fixtureSet.GetValidBuffer();\r\n          ///const int32 fixtureParticleCount = fixtureSet.GetCount();\r\n          ///for (int32 i = 0; i < fixtureParticleCount; ++i)\r\n          ///{\r\n          ///  if (fixtureParticlesValid[i])\r\n          ///  {\r\n          ///    const FixtureParticle* const fixtureParticle = &fixtureParticles[i];\r\n          ///    contactListener.EndContactFixtureParticle(fixtureParticle.first, this, fixtureParticle.second);\r\n          ///  }\r\n          ///}\r\n          throw new Error(); // TODO: notify\r\n      }\r\n      UpdateBodyContacts() {\r\n          const s_aabb = b2ParticleSystem.UpdateBodyContacts_s_aabb;\r\n          // If the particle contact listener is enabled, generate a set of\r\n          // fixture / particle contacts.\r\n          ///FixtureParticleSet fixtureSet(&m_world.m_stackAllocator);\r\n          const fixtureSet = new b2ParticleSystem.FixtureParticleSet(); // TODO: static\r\n          this.NotifyBodyContactListenerPreContact(fixtureSet);\r\n          if (this.m_stuckThreshold > 0) {\r\n              if (!this.m_bodyContactCountBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              if (!this.m_lastBodyContactStepBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              if (!this.m_consecutiveContactStepsBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              const particleCount = this.GetParticleCount();\r\n              for (let i = 0; i < particleCount; i++) {\r\n                  // Detect stuck particles, see comment in\r\n                  // b2ParticleSystem::DetectStuckParticle()\r\n                  this.m_bodyContactCountBuffer.data[i] = 0;\r\n                  if (this.m_timestamp > (this.m_lastBodyContactStepBuffer.data[i] + 1)) {\r\n                      this.m_consecutiveContactStepsBuffer.data[i] = 0;\r\n                  }\r\n              }\r\n          }\r\n          this.m_bodyContactBuffer.SetCount(0);\r\n          this.m_stuckParticleBuffer.SetCount(0);\r\n          const aabb = s_aabb;\r\n          this.ComputeAABB(aabb);\r\n          const callback = new b2ParticleSystem.UpdateBodyContactsCallback(this, this.GetFixtureContactFilter());\r\n          this.m_world.QueryAABB(callback, aabb);\r\n          if (this.m_def.strictContactCheck) {\r\n              this.RemoveSpuriousBodyContacts();\r\n          }\r\n          this.NotifyBodyContactListenerPostContact(fixtureSet);\r\n      }\r\n      Solve(step) {\r\n          const s_subStep = b2ParticleSystem.Solve_s_subStep;\r\n          if (this.m_count === 0) {\r\n              return;\r\n          }\r\n          // If particle lifetimes are enabled, destroy particles that are too old.\r\n          if (this.m_expirationTimeBuffer.data) {\r\n              this.SolveLifetimes(step);\r\n          }\r\n          if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_zombieParticle) {\r\n              this.SolveZombie();\r\n          }\r\n          if (this.m_needsUpdateAllParticleFlags) {\r\n              this.UpdateAllParticleFlags();\r\n          }\r\n          if (this.m_needsUpdateAllGroupFlags) {\r\n              this.UpdateAllGroupFlags();\r\n          }\r\n          if (this.m_paused) {\r\n              return;\r\n          }\r\n          for (this.m_iterationIndex = 0; this.m_iterationIndex < step.particleIterations; this.m_iterationIndex++) {\r\n              ++this.m_timestamp;\r\n              const subStep = s_subStep.Copy(step);\r\n              subStep.dt /= step.particleIterations;\r\n              subStep.inv_dt *= step.particleIterations;\r\n              this.UpdateContacts(false);\r\n              this.UpdateBodyContacts();\r\n              this.ComputeWeight();\r\n              if (this.m_allGroupFlags & exports.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {\r\n                  this.ComputeDepth();\r\n              }\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_reactiveParticle) {\r\n                  this.UpdatePairsAndTriadsWithReactiveParticles();\r\n              }\r\n              if (this.m_hasForce) {\r\n                  this.SolveForce(subStep);\r\n              }\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_viscousParticle) {\r\n                  this.SolveViscous();\r\n              }\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_repulsiveParticle) {\r\n                  this.SolveRepulsive(subStep);\r\n              }\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_powderParticle) {\r\n                  this.SolvePowder(subStep);\r\n              }\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_tensileParticle) {\r\n                  this.SolveTensile(subStep);\r\n              }\r\n              if (this.m_allGroupFlags & exports.b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                  this.SolveSolid(subStep);\r\n              }\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_colorMixingParticle) {\r\n                  this.SolveColorMixing();\r\n              }\r\n              this.SolveGravity(subStep);\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_staticPressureParticle) {\r\n                  this.SolveStaticPressure(subStep);\r\n              }\r\n              this.SolvePressure(subStep);\r\n              this.SolveDamping(subStep);\r\n              if (this.m_allParticleFlags & b2ParticleSystem.k_extraDampingFlags) {\r\n                  this.SolveExtraDamping();\r\n              }\r\n              // SolveElastic and SolveSpring refer the current velocities for\r\n              // numerical stability, they should be called as late as possible.\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_elasticParticle) {\r\n                  this.SolveElastic(subStep);\r\n              }\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_springParticle) {\r\n                  this.SolveSpring(subStep);\r\n              }\r\n              this.LimitVelocity(subStep);\r\n              if (this.m_allGroupFlags & exports.b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                  this.SolveRigidDamping();\r\n              }\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_barrierParticle) {\r\n                  this.SolveBarrier(subStep);\r\n              }\r\n              // SolveCollision, SolveRigid and SolveWall should be called after\r\n              // other force functions because they may require particles to have\r\n              // specific velocities.\r\n              this.SolveCollision(subStep);\r\n              if (this.m_allGroupFlags & exports.b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                  this.SolveRigid(subStep);\r\n              }\r\n              if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_wallParticle) {\r\n                  this.SolveWall();\r\n              }\r\n              // The particle positions can be updated only at the end of substep.\r\n              if (!this.m_positionBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              if (!this.m_velocityBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              for (let i = 0; i < this.m_count; i++) {\r\n                  ///m_positionBuffer.data[i] += subStep.dt * m_velocityBuffer.data[i];\r\n                  this.m_positionBuffer.data[i].SelfMulAdd(subStep.dt, this.m_velocityBuffer.data[i]);\r\n              }\r\n          }\r\n      }\r\n      SolveCollision(step) {\r\n          const s_aabb = b2ParticleSystem.SolveCollision_s_aabb;\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          // This function detects particles which are crossing boundary of bodies\r\n          // and modifies velocities of them so that they will move just in front of\r\n          // boundary. This function function also applies the reaction force to\r\n          // bodies as precisely as the numerical stability is kept.\r\n          const aabb = s_aabb;\r\n          aabb.lowerBound.x = +b2_maxFloat;\r\n          aabb.lowerBound.y = +b2_maxFloat;\r\n          aabb.upperBound.x = -b2_maxFloat;\r\n          aabb.upperBound.y = -b2_maxFloat;\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              const v = vel_data[i];\r\n              const p1 = pos_data[i];\r\n              ///let p2 = p1 + step.dt * v;\r\n              const p2_x = p1.x + step.dt * v.x;\r\n              const p2_y = p1.y + step.dt * v.y;\r\n              ///aabb.lowerBound = b2Min(aabb.lowerBound, b2Min(p1, p2));\r\n              aabb.lowerBound.x = b2Min(aabb.lowerBound.x, b2Min(p1.x, p2_x));\r\n              aabb.lowerBound.y = b2Min(aabb.lowerBound.y, b2Min(p1.y, p2_y));\r\n              ///aabb.upperBound = b2Max(aabb.upperBound, b2Max(p1, p2));\r\n              aabb.upperBound.x = b2Max(aabb.upperBound.x, b2Max(p1.x, p2_x));\r\n              aabb.upperBound.y = b2Max(aabb.upperBound.y, b2Max(p1.y, p2_y));\r\n          }\r\n          const callback = new b2ParticleSystem.SolveCollisionCallback(this, step);\r\n          this.m_world.QueryAABB(callback, aabb);\r\n      }\r\n      LimitVelocity(step) {\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          const criticalVelocitySquared = this.GetCriticalVelocitySquared(step);\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              const v = vel_data[i];\r\n              const v2 = b2Vec2.DotVV(v, v);\r\n              if (v2 > criticalVelocitySquared) {\r\n                  ///v *= b2Sqrt(criticalVelocitySquared / v2);\r\n                  v.SelfMul(b2Sqrt(criticalVelocitySquared / v2));\r\n              }\r\n          }\r\n      }\r\n      SolveGravity(step) {\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const s_gravity = b2ParticleSystem.SolveGravity_s_gravity;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          ///b2Vec2 gravity = step.dt * m_def.gravityScale * m_world.GetGravity();\r\n          const gravity = b2Vec2.MulSV(step.dt * this.m_def.gravityScale, this.m_world.GetGravity(), s_gravity);\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              vel_data[i].SelfAdd(gravity);\r\n          }\r\n      }\r\n      SolveBarrier(step) {\r\n          const s_aabb = b2ParticleSystem.SolveBarrier_s_aabb;\r\n          const s_va = b2ParticleSystem.SolveBarrier_s_va;\r\n          const s_vb = b2ParticleSystem.SolveBarrier_s_vb;\r\n          const s_pba = b2ParticleSystem.SolveBarrier_s_pba;\r\n          const s_vba = b2ParticleSystem.SolveBarrier_s_vba;\r\n          const s_vc = b2ParticleSystem.SolveBarrier_s_vc;\r\n          const s_pca = b2ParticleSystem.SolveBarrier_s_pca;\r\n          const s_vca = b2ParticleSystem.SolveBarrier_s_vca;\r\n          const s_qba = b2ParticleSystem.SolveBarrier_s_qba;\r\n          const s_qca = b2ParticleSystem.SolveBarrier_s_qca;\r\n          const s_dv = b2ParticleSystem.SolveBarrier_s_dv;\r\n          const s_f = b2ParticleSystem.SolveBarrier_s_f;\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          // If a particle is passing between paired barrier particles,\r\n          // its velocity will be decelerated to avoid passing.\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              const flags = this.m_flagsBuffer.data[i];\r\n              ///if ((flags & b2ParticleSystem.k_barrierWallFlags) === b2ParticleSystem.k_barrierWallFlags)\r\n              if ((flags & b2ParticleSystem.k_barrierWallFlags) !== 0) {\r\n                  vel_data[i].SetZero();\r\n              }\r\n          }\r\n          const tmax = b2_barrierCollisionTime * step.dt;\r\n          const mass = this.GetParticleMass();\r\n          for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n              const pair = this.m_pairBuffer.data[k];\r\n              if (pair.flags & exports.b2ParticleFlag.b2_barrierParticle) {\r\n                  const a = pair.indexA;\r\n                  const b = pair.indexB;\r\n                  const pa = pos_data[a];\r\n                  const pb = pos_data[b];\r\n                  /// b2AABB aabb;\r\n                  const aabb = s_aabb;\r\n                  ///aabb.lowerBound = b2Min(pa, pb);\r\n                  b2Vec2.MinV(pa, pb, aabb.lowerBound);\r\n                  ///aabb.upperBound = b2Max(pa, pb);\r\n                  b2Vec2.MaxV(pa, pb, aabb.upperBound);\r\n                  const aGroup = this.m_groupBuffer[a];\r\n                  const bGroup = this.m_groupBuffer[b];\r\n                  ///b2Vec2 va = GetLinearVelocity(aGroup, a, pa);\r\n                  const va = this.GetLinearVelocity(aGroup, a, pa, s_va);\r\n                  ///b2Vec2 vb = GetLinearVelocity(bGroup, b, pb);\r\n                  const vb = this.GetLinearVelocity(bGroup, b, pb, s_vb);\r\n                  ///b2Vec2 pba = pb - pa;\r\n                  const pba = b2Vec2.SubVV(pb, pa, s_pba);\r\n                  ///b2Vec2 vba = vb - va;\r\n                  const vba = b2Vec2.SubVV(vb, va, s_vba);\r\n                  ///InsideBoundsEnumerator enumerator = GetInsideBoundsEnumerator(aabb);\r\n                  const enumerator = this.GetInsideBoundsEnumerator(aabb);\r\n                  let c;\r\n                  while ((c = enumerator.GetNext()) >= 0) {\r\n                      const pc = pos_data[c];\r\n                      const cGroup = this.m_groupBuffer[c];\r\n                      if (aGroup !== cGroup && bGroup !== cGroup) {\r\n                          ///b2Vec2 vc = GetLinearVelocity(cGroup, c, pc);\r\n                          const vc = this.GetLinearVelocity(cGroup, c, pc, s_vc);\r\n                          // Solve the equation below:\r\n                          //   (1-s)*(pa+t*va)+s*(pb+t*vb) = pc+t*vc\r\n                          // which expresses that the particle c will pass a line\r\n                          // connecting the particles a and b at the time of t.\r\n                          // if s is between 0 and 1, c will pass between a and b.\r\n                          ///b2Vec2 pca = pc - pa;\r\n                          const pca = b2Vec2.SubVV(pc, pa, s_pca);\r\n                          ///b2Vec2 vca = vc - va;\r\n                          const vca = b2Vec2.SubVV(vc, va, s_vca);\r\n                          const e2 = b2Vec2.CrossVV(vba, vca);\r\n                          const e1 = b2Vec2.CrossVV(pba, vca) - b2Vec2.CrossVV(pca, vba);\r\n                          const e0 = b2Vec2.CrossVV(pba, pca);\r\n                          let s, t;\r\n                          ///b2Vec2 qba, qca;\r\n                          const qba = s_qba, qca = s_qca;\r\n                          if (e2 === 0) {\r\n                              if (e1 === 0) {\r\n                                  continue;\r\n                              }\r\n                              t = -e0 / e1;\r\n                              if (!(t >= 0 && t < tmax)) {\r\n                                  continue;\r\n                              }\r\n                              ///qba = pba + t * vba;\r\n                              b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                              ///qca = pca + t * vca;\r\n                              b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                              s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                              if (!(s >= 0 && s <= 1)) {\r\n                                  continue;\r\n                              }\r\n                          }\r\n                          else {\r\n                              const det = e1 * e1 - 4 * e0 * e2;\r\n                              if (det < 0) {\r\n                                  continue;\r\n                              }\r\n                              const sqrtDet = b2Sqrt(det);\r\n                              let t1 = (-e1 - sqrtDet) / (2 * e2);\r\n                              let t2 = (-e1 + sqrtDet) / (2 * e2);\r\n                              ///if (t1 > t2) b2Swap(t1, t2);\r\n                              if (t1 > t2) {\r\n                                  const tmp = t1;\r\n                                  t1 = t2;\r\n                                  t2 = tmp;\r\n                              }\r\n                              t = t1;\r\n                              ///qba = pba + t * vba;\r\n                              b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                              ///qca = pca + t * vca;\r\n                              b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                              ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                              s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                              if (!(t >= 0 && t < tmax && s >= 0 && s <= 1)) {\r\n                                  t = t2;\r\n                                  if (!(t >= 0 && t < tmax)) {\r\n                                      continue;\r\n                                  }\r\n                                  ///qba = pba + t * vba;\r\n                                  b2Vec2.AddVMulSV(pba, t, vba, qba);\r\n                                  ///qca = pca + t * vca;\r\n                                  b2Vec2.AddVMulSV(pca, t, vca, qca);\r\n                                  ///s = b2Dot(qba, qca) / b2Dot(qba, qba);\r\n                                  s = b2Vec2.DotVV(qba, qca) / b2Vec2.DotVV(qba, qba);\r\n                                  if (!(s >= 0 && s <= 1)) {\r\n                                      continue;\r\n                                  }\r\n                              }\r\n                          }\r\n                          // Apply a force to particle c so that it will have the\r\n                          // interpolated velocity at the collision point on line ab.\r\n                          ///b2Vec2 dv = va + s * vba - vc;\r\n                          const dv = s_dv;\r\n                          dv.x = va.x + s * vba.x - vc.x;\r\n                          dv.y = va.y + s * vba.y - vc.y;\r\n                          ///b2Vec2 f = GetParticleMass() * dv;\r\n                          const f = b2Vec2.MulSV(mass, dv, s_f);\r\n                          if (cGroup && this.IsRigidGroup(cGroup)) {\r\n                              // If c belongs to a rigid group, the force will be\r\n                              // distributed in the group.\r\n                              const mass = cGroup.GetMass();\r\n                              const inertia = cGroup.GetInertia();\r\n                              if (mass > 0) {\r\n                                  ///cGroup.m_linearVelocity += 1 / mass * f;\r\n                                  cGroup.m_linearVelocity.SelfMulAdd(1 / mass, f);\r\n                              }\r\n                              if (inertia > 0) {\r\n                                  ///cGroup.m_angularVelocity += b2Cross(pc - cGroup.GetCenter(), f) / inertia;\r\n                                  cGroup.m_angularVelocity += b2Vec2.CrossVV(b2Vec2.SubVV(pc, cGroup.GetCenter(), b2Vec2.s_t0), f) / inertia;\r\n                              }\r\n                          }\r\n                          else {\r\n                              ///m_velocityBuffer.data[c] += dv;\r\n                              vel_data[c].SelfAdd(dv);\r\n                          }\r\n                          // Apply a reversed force to particle c after particle\r\n                          // movement so that momentum will be preserved.\r\n                          ///ParticleApplyForce(c, -step.inv_dt * f);\r\n                          this.ParticleApplyForce(c, f.SelfMul(-step.inv_dt));\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      SolveStaticPressure(step) {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          this.m_staticPressureBuffer = this.RequestBuffer(this.m_staticPressureBuffer);\r\n          const criticalPressure = this.GetCriticalPressure(step);\r\n          const pressurePerWeight = this.m_def.staticPressureStrength * criticalPressure;\r\n          const maxPressure = b2_maxParticlePressure * criticalPressure;\r\n          const relaxation = this.m_def.staticPressureRelaxation;\r\n          /// Compute pressure satisfying the modified Poisson equation:\r\n          ///   Sum_for_j((p_i - p_j) * w_ij) + relaxation * p_i =\r\n          ///   pressurePerWeight * (w_i - b2_minParticleWeight)\r\n          /// by iterating the calculation:\r\n          ///   p_i = (Sum_for_j(p_j * w_ij) + pressurePerWeight *\r\n          ///         (w_i - b2_minParticleWeight)) / (w_i + relaxation)\r\n          /// where\r\n          ///   p_i and p_j are static pressure of particle i and j\r\n          ///   w_ij is contact weight between particle i and j\r\n          ///   w_i is sum of contact weight of particle i\r\n          for (let t = 0; t < this.m_def.staticPressureIterations; t++) {\r\n              ///memset(m_accumulationBuffer, 0, sizeof(*m_accumulationBuffer) * m_count);\r\n              for (let i = 0; i < this.m_count; i++) {\r\n                  this.m_accumulationBuffer[i] = 0;\r\n              }\r\n              for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                  const contact = this.m_contactBuffer.data[k];\r\n                  if (contact.flags & exports.b2ParticleFlag.b2_staticPressureParticle) {\r\n                      const a = contact.indexA;\r\n                      const b = contact.indexB;\r\n                      const w = contact.weight;\r\n                      this.m_accumulationBuffer[a] += w * this.m_staticPressureBuffer[b]; // a <- b\r\n                      this.m_accumulationBuffer[b] += w * this.m_staticPressureBuffer[a]; // b <- a\r\n                  }\r\n              }\r\n              for (let i = 0; i < this.m_count; i++) {\r\n                  const w = this.m_weightBuffer[i];\r\n                  if (this.m_flagsBuffer.data[i] & exports.b2ParticleFlag.b2_staticPressureParticle) {\r\n                      const wh = this.m_accumulationBuffer[i];\r\n                      const h = (wh + pressurePerWeight * (w - b2_minParticleWeight)) /\r\n                          (w + relaxation);\r\n                      this.m_staticPressureBuffer[i] = b2Clamp(h, 0.0, maxPressure);\r\n                  }\r\n                  else {\r\n                      this.m_staticPressureBuffer[i] = 0;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      ComputeWeight() {\r\n          // calculates the sum of contact-weights for each particle\r\n          // that means dimensionless density\r\n          ///memset(m_weightBuffer, 0, sizeof(*m_weightBuffer) * m_count);\r\n          for (let k = 0; k < this.m_count; k++) {\r\n              this.m_weightBuffer[k] = 0;\r\n          }\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              const a = contact.index;\r\n              const w = contact.weight;\r\n              this.m_weightBuffer[a] += w;\r\n          }\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              const a = contact.indexA;\r\n              const b = contact.indexB;\r\n              const w = contact.weight;\r\n              this.m_weightBuffer[a] += w;\r\n              this.m_weightBuffer[b] += w;\r\n          }\r\n      }\r\n      SolvePressure(step) {\r\n          const s_f = b2ParticleSystem.SolvePressure_s_f;\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          // calculates pressure as a linear function of density\r\n          const criticalPressure = this.GetCriticalPressure(step);\r\n          const pressurePerWeight = this.m_def.pressureStrength * criticalPressure;\r\n          const maxPressure = b2_maxParticlePressure * criticalPressure;\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              const w = this.m_weightBuffer[i];\r\n              const h = pressurePerWeight * b2Max(0.0, w - b2_minParticleWeight);\r\n              this.m_accumulationBuffer[i] = b2Min(h, maxPressure);\r\n          }\r\n          // ignores particles which have their own repulsive force\r\n          if (this.m_allParticleFlags & b2ParticleSystem.k_noPressureFlags) {\r\n              for (let i = 0; i < this.m_count; i++) {\r\n                  if (this.m_flagsBuffer.data[i] & b2ParticleSystem.k_noPressureFlags) {\r\n                      this.m_accumulationBuffer[i] = 0;\r\n                  }\r\n              }\r\n          }\r\n          // static pressure\r\n          if (this.m_allParticleFlags & exports.b2ParticleFlag.b2_staticPressureParticle) {\r\n              // DEBUG: b2Assert(this.m_staticPressureBuffer !== null);\r\n              for (let i = 0; i < this.m_count; i++) {\r\n                  if (this.m_flagsBuffer.data[i] & exports.b2ParticleFlag.b2_staticPressureParticle) {\r\n                      this.m_accumulationBuffer[i] += this.m_staticPressureBuffer[i];\r\n                  }\r\n              }\r\n          }\r\n          // applies pressure between each particles in contact\r\n          const velocityPerPressure = step.dt / (this.m_def.density * this.m_particleDiameter);\r\n          const inv_mass = this.GetParticleInvMass();\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              const a = contact.index;\r\n              const b = contact.body;\r\n              const w = contact.weight;\r\n              const m = contact.mass;\r\n              const n = contact.normal;\r\n              const p = pos_data[a];\r\n              const h = this.m_accumulationBuffer[a] + pressurePerWeight * w;\r\n              ///b2Vec2 f = velocityPerPressure * w * m * h * n;\r\n              const f = b2Vec2.MulSV(velocityPerPressure * w * m * h, n, s_f);\r\n              ///m_velocityBuffer.data[a] -= GetParticleInvMass() * f;\r\n              vel_data[a].SelfMulSub(inv_mass, f);\r\n              b.ApplyLinearImpulse(f, p, true);\r\n          }\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              const a = contact.indexA;\r\n              const b = contact.indexB;\r\n              const w = contact.weight;\r\n              const n = contact.normal;\r\n              const h = this.m_accumulationBuffer[a] + this.m_accumulationBuffer[b];\r\n              ///b2Vec2 f = velocityPerPressure * w * h * n;\r\n              const f = b2Vec2.MulSV(velocityPerPressure * w * h, n, s_f);\r\n              ///m_velocityBuffer.data[a] -= f;\r\n              vel_data[a].SelfSub(f);\r\n              ///m_velocityBuffer.data[b] += f;\r\n              vel_data[b].SelfAdd(f);\r\n          }\r\n      }\r\n      SolveDamping(step) {\r\n          const s_v = b2ParticleSystem.SolveDamping_s_v;\r\n          const s_f = b2ParticleSystem.SolveDamping_s_f;\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          // reduces normal velocity of each contact\r\n          const linearDamping = this.m_def.dampingStrength;\r\n          const quadraticDamping = 1 / this.GetCriticalVelocity(step);\r\n          const inv_mass = this.GetParticleInvMass();\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              const a = contact.index;\r\n              const b = contact.body;\r\n              const w = contact.weight;\r\n              const m = contact.mass;\r\n              const n = contact.normal;\r\n              const p = pos_data[a];\r\n              ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n              const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n              const vn = b2Vec2.DotVV(v, n);\r\n              if (vn < 0) {\r\n                  const damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                  ///b2Vec2 f = damping * m * vn * n;\r\n                  const f = b2Vec2.MulSV(damping * m * vn, n, s_f);\r\n                  ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                  vel_data[a].SelfMulAdd(inv_mass, f);\r\n                  ///b.ApplyLinearImpulse(-f, p, true);\r\n                  b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n              }\r\n          }\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              const a = contact.indexA;\r\n              const b = contact.indexB;\r\n              const w = contact.weight;\r\n              const n = contact.normal;\r\n              ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n              const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n              const vn = b2Vec2.DotVV(v, n);\r\n              if (vn < 0) {\r\n                  ///float32 damping = b2Max(linearDamping * w, b2Min(- quadraticDamping * vn, 0.5f));\r\n                  const damping = b2Max(linearDamping * w, b2Min(-quadraticDamping * vn, 0.5));\r\n                  ///b2Vec2 f = damping * vn * n;\r\n                  const f = b2Vec2.MulSV(damping * vn, n, s_f);\r\n                  ///this.m_velocityBuffer.data[a] += f;\r\n                  vel_data[a].SelfAdd(f);\r\n                  ///this.m_velocityBuffer.data[b] -= f;\r\n                  vel_data[b].SelfSub(f);\r\n              }\r\n          }\r\n      }\r\n      SolveRigidDamping() {\r\n          const s_t0 = b2ParticleSystem.SolveRigidDamping_s_t0;\r\n          const s_t1 = b2ParticleSystem.SolveRigidDamping_s_t1;\r\n          const s_p = b2ParticleSystem.SolveRigidDamping_s_p;\r\n          const s_v = b2ParticleSystem.SolveRigidDamping_s_v;\r\n          const invMassA = [0.0], invInertiaA = [0.0], tangentDistanceA = [0.0]; // TODO: static\r\n          const invMassB = [0.0], invInertiaB = [0.0], tangentDistanceB = [0.0]; // TODO: static\r\n          // Apply impulse to rigid particle groups colliding with other objects\r\n          // to reduce relative velocity at the colliding point.\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const damping = this.m_def.dampingStrength;\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              const a = contact.index;\r\n              const aGroup = this.m_groupBuffer[a];\r\n              if (aGroup && this.IsRigidGroup(aGroup)) {\r\n                  const b = contact.body;\r\n                  const n = contact.normal;\r\n                  const w = contact.weight;\r\n                  const p = pos_data[a];\r\n                  ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - aGroup.GetLinearVelocityFromWorldPoint(p);\r\n                  const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, s_t0), aGroup.GetLinearVelocityFromWorldPoint(p, s_t1), s_v);\r\n                  const vn = b2Vec2.DotVV(v, n);\r\n                  if (vn < 0) {\r\n                      // The group's average velocity at particle position 'p' is pushing\r\n                      // the particle into the body.\r\n                      ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, true, aGroup, a, p, n);\r\n                      this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, p, n);\r\n                      // Calculate b.m_I from public functions of b2Body.\r\n                      ///this.InitDampingParameter(&invMassB, &invInertiaB, &tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                      this.InitDampingParameter(invMassB, invInertiaB, tangentDistanceB, b.GetMass(), b.GetInertia() - b.GetMass() * b.GetLocalCenter().LengthSquared(), b.GetWorldCenter(), p, n);\r\n                      ///float32 f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                      const f = damping * b2Min(w, 1.0) * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                      ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, true, aGroup, a, f, n);\r\n                      this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], true, aGroup, a, f, n);\r\n                      ///b.ApplyLinearImpulse(-f * n, p, true);\r\n                      b.ApplyLinearImpulse(b2Vec2.MulSV(-f, n, b2Vec2.s_t0), p, true);\r\n                  }\r\n              }\r\n          }\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              const a = contact.indexA;\r\n              const b = contact.indexB;\r\n              const n = contact.normal;\r\n              const w = contact.weight;\r\n              const aGroup = this.m_groupBuffer[a];\r\n              const bGroup = this.m_groupBuffer[b];\r\n              const aRigid = this.IsRigidGroup(aGroup);\r\n              const bRigid = this.IsRigidGroup(bGroup);\r\n              if (aGroup !== bGroup && (aRigid || bRigid)) {\r\n                  ///b2Vec2 p = 0.5f * (this.m_positionBuffer.data[a] + this.m_positionBuffer.data[b]);\r\n                  const p = b2Vec2.MidVV(pos_data[a], pos_data[b], s_p);\r\n                  ///b2Vec2 v = GetLinearVelocity(bGroup, b, p) - GetLinearVelocity(aGroup, a, p);\r\n                  const v = b2Vec2.SubVV(this.GetLinearVelocity(bGroup, b, p, s_t0), this.GetLinearVelocity(aGroup, a, p, s_t1), s_v);\r\n                  const vn = b2Vec2.DotVV(v, n);\r\n                  if (vn < 0) {\r\n                      ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassA, &invInertiaA, &tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                      this.InitDampingParameterWithRigidGroupOrParticle(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, p, n);\r\n                      ///this.InitDampingParameterWithRigidGroupOrParticle(&invMassB, &invInertiaB, &tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                      this.InitDampingParameterWithRigidGroupOrParticle(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, p, n);\r\n                      ///float32 f = damping * w * this.ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, vn);\r\n                      const f = damping * w * this.ComputeDampingImpulse(invMassA[0], invInertiaA[0], tangentDistanceA[0], invMassB[0], invInertiaB[0], tangentDistanceB[0], vn);\r\n                      ///this.ApplyDamping(invMassA, invInertiaA, tangentDistanceA, aRigid, aGroup, a, f, n);\r\n                      this.ApplyDamping(invMassA[0], invInertiaA[0], tangentDistanceA[0], aRigid, aGroup, a, f, n);\r\n                      ///this.ApplyDamping(invMassB, invInertiaB, tangentDistanceB, bRigid, bGroup, b, -f, n);\r\n                      this.ApplyDamping(invMassB[0], invInertiaB[0], tangentDistanceB[0], bRigid, bGroup, b, -f, n);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      SolveExtraDamping() {\r\n          const s_v = b2ParticleSystem.SolveExtraDamping_s_v;\r\n          const s_f = b2ParticleSystem.SolveExtraDamping_s_f;\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          // Applies additional damping force between bodies and particles which can\r\n          // produce strong repulsive force. Applying damping force multiple times\r\n          // is effective in suppressing vibration.\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const inv_mass = this.GetParticleInvMass();\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              const a = contact.index;\r\n              if (this.m_flagsBuffer.data[a] & b2ParticleSystem.k_extraDampingFlags) {\r\n                  const b = contact.body;\r\n                  const m = contact.mass;\r\n                  const n = contact.normal;\r\n                  const p = pos_data[a];\r\n                  ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                  const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                  ///float32 vn = b2Dot(v, n);\r\n                  const vn = b2Vec2.DotVV(v, n);\r\n                  if (vn < 0) {\r\n                      ///b2Vec2 f = 0.5f * m * vn * n;\r\n                      const f = b2Vec2.MulSV(0.5 * m * vn, n, s_f);\r\n                      ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                      vel_data[a].SelfMulAdd(inv_mass, f);\r\n                      ///b.ApplyLinearImpulse(-f, p, true);\r\n                      b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      SolveWall() {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              if (this.m_flagsBuffer.data[i] & exports.b2ParticleFlag.b2_wallParticle) {\r\n                  vel_data[i].SetZero();\r\n              }\r\n          }\r\n      }\r\n      SolveRigid(step) {\r\n          const s_position = b2ParticleSystem.SolveRigid_s_position;\r\n          const s_rotation = b2ParticleSystem.SolveRigid_s_rotation;\r\n          const s_transform = b2ParticleSystem.SolveRigid_s_transform;\r\n          const s_velocityTransform = b2ParticleSystem.SolveRigid_s_velocityTransform;\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n              if (group.m_groupFlags & exports.b2ParticleGroupFlag.b2_rigidParticleGroup) {\r\n                  group.UpdateStatistics();\r\n                  ///b2Rot rotation(step.dt * group.m_angularVelocity);\r\n                  const rotation = s_rotation;\r\n                  rotation.SetAngle(step.dt * group.m_angularVelocity);\r\n                  ///b2Transform transform(group.m_center + step.dt * group.m_linearVelocity - b2Mul(rotation, group.m_center), rotation);\r\n                  const position = b2Vec2.AddVV(group.m_center, b2Vec2.SubVV(b2Vec2.MulSV(step.dt, group.m_linearVelocity, b2Vec2.s_t0), b2Rot.MulRV(rotation, group.m_center, b2Vec2.s_t1), b2Vec2.s_t0), s_position);\r\n                  const transform = s_transform;\r\n                  transform.SetPositionRotation(position, rotation);\r\n                  ///group.m_transform = b2Mul(transform, group.m_transform);\r\n                  b2Transform.MulXX(transform, group.m_transform, group.m_transform);\r\n                  const velocityTransform = s_velocityTransform;\r\n                  velocityTransform.p.x = step.inv_dt * transform.p.x;\r\n                  velocityTransform.p.y = step.inv_dt * transform.p.y;\r\n                  velocityTransform.q.s = step.inv_dt * transform.q.s;\r\n                  velocityTransform.q.c = step.inv_dt * (transform.q.c - 1);\r\n                  for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                      ///m_velocityBuffer.data[i] = b2Mul(velocityTransform, m_positionBuffer.data[i]);\r\n                      b2Transform.MulXV(velocityTransform, pos_data[i], vel_data[i]);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      SolveElastic(step) {\r\n          const s_pa = b2ParticleSystem.SolveElastic_s_pa;\r\n          const s_pb = b2ParticleSystem.SolveElastic_s_pb;\r\n          const s_pc = b2ParticleSystem.SolveElastic_s_pc;\r\n          const s_r = b2ParticleSystem.SolveElastic_s_r;\r\n          const s_t0 = b2ParticleSystem.SolveElastic_s_t0;\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          const elasticStrength = step.inv_dt * this.m_def.elasticStrength;\r\n          for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n              const triad = this.m_triadBuffer.data[k];\r\n              if (triad.flags & exports.b2ParticleFlag.b2_elasticParticle) {\r\n                  const a = triad.indexA;\r\n                  const b = triad.indexB;\r\n                  const c = triad.indexC;\r\n                  const oa = triad.pa;\r\n                  const ob = triad.pb;\r\n                  const oc = triad.pc;\r\n                  ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                  const pa = s_pa.Copy(pos_data[a]);\r\n                  ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                  const pb = s_pb.Copy(pos_data[b]);\r\n                  ///b2Vec2 pc = m_positionBuffer.data[c];\r\n                  const pc = s_pc.Copy(pos_data[c]);\r\n                  const va = vel_data[a];\r\n                  const vb = vel_data[b];\r\n                  const vc = vel_data[c];\r\n                  ///pa += step.dt * va;\r\n                  pa.SelfMulAdd(step.dt, va);\r\n                  ///pb += step.dt * vb;\r\n                  pb.SelfMulAdd(step.dt, vb);\r\n                  ///pc += step.dt * vc;\r\n                  pc.SelfMulAdd(step.dt, vc);\r\n                  ///b2Vec2 midPoint = (float32) 1 / 3 * (pa + pb + pc);\r\n                  const midPoint_x = (pa.x + pb.x + pc.x) / 3.0;\r\n                  const midPoint_y = (pa.y + pb.y + pc.y) / 3.0;\r\n                  ///pa -= midPoint;\r\n                  pa.x -= midPoint_x;\r\n                  pa.y -= midPoint_y;\r\n                  ///pb -= midPoint;\r\n                  pb.x -= midPoint_x;\r\n                  pb.y -= midPoint_y;\r\n                  ///pc -= midPoint;\r\n                  pc.x -= midPoint_x;\r\n                  pc.y -= midPoint_y;\r\n                  ///b2Rot r;\r\n                  const r = s_r;\r\n                  r.s = b2Vec2.CrossVV(oa, pa) + b2Vec2.CrossVV(ob, pb) + b2Vec2.CrossVV(oc, pc);\r\n                  r.c = b2Vec2.DotVV(oa, pa) + b2Vec2.DotVV(ob, pb) + b2Vec2.DotVV(oc, pc);\r\n                  const r2 = r.s * r.s + r.c * r.c;\r\n                  let invR = b2InvSqrt(r2);\r\n                  if (!isFinite(invR)) {\r\n                      invR = 1.98177537e+019;\r\n                  }\r\n                  r.s *= invR;\r\n                  r.c *= invR;\r\n                  ///r.angle = Math.atan2(r.s, r.c); // TODO: optimize\r\n                  const strength = elasticStrength * triad.strength;\r\n                  ///va += strength * (b2Mul(r, oa) - pa);\r\n                  b2Rot.MulRV(r, oa, s_t0);\r\n                  b2Vec2.SubVV(s_t0, pa, s_t0);\r\n                  b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                  va.SelfAdd(s_t0);\r\n                  ///vb += strength * (b2Mul(r, ob) - pb);\r\n                  b2Rot.MulRV(r, ob, s_t0);\r\n                  b2Vec2.SubVV(s_t0, pb, s_t0);\r\n                  b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                  vb.SelfAdd(s_t0);\r\n                  ///vc += strength * (b2Mul(r, oc) - pc);\r\n                  b2Rot.MulRV(r, oc, s_t0);\r\n                  b2Vec2.SubVV(s_t0, pc, s_t0);\r\n                  b2Vec2.MulSV(strength, s_t0, s_t0);\r\n                  vc.SelfAdd(s_t0);\r\n              }\r\n          }\r\n      }\r\n      SolveSpring(step) {\r\n          const s_pa = b2ParticleSystem.SolveSpring_s_pa;\r\n          const s_pb = b2ParticleSystem.SolveSpring_s_pb;\r\n          const s_d = b2ParticleSystem.SolveSpring_s_d;\r\n          const s_f = b2ParticleSystem.SolveSpring_s_f;\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          const springStrength = step.inv_dt * this.m_def.springStrength;\r\n          for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n              const pair = this.m_pairBuffer.data[k];\r\n              if (pair.flags & exports.b2ParticleFlag.b2_springParticle) {\r\n                  ///int32 a = pair.indexA;\r\n                  const a = pair.indexA;\r\n                  ///int32 b = pair.indexB;\r\n                  const b = pair.indexB;\r\n                  ///b2Vec2 pa = m_positionBuffer.data[a];\r\n                  const pa = s_pa.Copy(pos_data[a]);\r\n                  ///b2Vec2 pb = m_positionBuffer.data[b];\r\n                  const pb = s_pb.Copy(pos_data[b]);\r\n                  ///b2Vec2& va = m_velocityBuffer.data[a];\r\n                  const va = vel_data[a];\r\n                  ///b2Vec2& vb = m_velocityBuffer.data[b];\r\n                  const vb = vel_data[b];\r\n                  ///pa += step.dt * va;\r\n                  pa.SelfMulAdd(step.dt, va);\r\n                  ///pb += step.dt * vb;\r\n                  pb.SelfMulAdd(step.dt, vb);\r\n                  ///b2Vec2 d = pb - pa;\r\n                  const d = b2Vec2.SubVV(pb, pa, s_d);\r\n                  ///float32 r0 = pair.distance;\r\n                  const r0 = pair.distance;\r\n                  ///float32 r1 = d.Length();\r\n                  const r1 = d.Length();\r\n                  ///float32 strength = springStrength * pair.strength;\r\n                  const strength = springStrength * pair.strength;\r\n                  ///b2Vec2 f = strength * (r0 - r1) / r1 * d;\r\n                  const f = b2Vec2.MulSV(strength * (r0 - r1) / r1, d, s_f);\r\n                  ///va -= f;\r\n                  va.SelfSub(f);\r\n                  ///vb += f;\r\n                  vb.SelfAdd(f);\r\n              }\r\n          }\r\n      }\r\n      SolveTensile(step) {\r\n          const s_weightedNormal = b2ParticleSystem.SolveTensile_s_weightedNormal;\r\n          const s_s = b2ParticleSystem.SolveTensile_s_s;\r\n          const s_f = b2ParticleSystem.SolveTensile_s_f;\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          // DEBUG: b2Assert(this.m_accumulation2Buffer !== null);\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              this.m_accumulation2Buffer[i] = new b2Vec2();\r\n              this.m_accumulation2Buffer[i].SetZero();\r\n          }\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              if (contact.flags & exports.b2ParticleFlag.b2_tensileParticle) {\r\n                  const a = contact.indexA;\r\n                  const b = contact.indexB;\r\n                  const w = contact.weight;\r\n                  const n = contact.normal;\r\n                  ///b2Vec2 weightedNormal = (1 - w) * w * n;\r\n                  const weightedNormal = b2Vec2.MulSV((1 - w) * w, n, s_weightedNormal);\r\n                  ///m_accumulation2Buffer[a] -= weightedNormal;\r\n                  this.m_accumulation2Buffer[a].SelfSub(weightedNormal);\r\n                  ///m_accumulation2Buffer[b] += weightedNormal;\r\n                  this.m_accumulation2Buffer[b].SelfAdd(weightedNormal);\r\n              }\r\n          }\r\n          const criticalVelocity = this.GetCriticalVelocity(step);\r\n          const pressureStrength = this.m_def.surfaceTensionPressureStrength * criticalVelocity;\r\n          const normalStrength = this.m_def.surfaceTensionNormalStrength * criticalVelocity;\r\n          const maxVelocityVariation = b2_maxParticleForce * criticalVelocity;\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              if (contact.flags & exports.b2ParticleFlag.b2_tensileParticle) {\r\n                  const a = contact.indexA;\r\n                  const b = contact.indexB;\r\n                  const w = contact.weight;\r\n                  const n = contact.normal;\r\n                  const h = this.m_weightBuffer[a] + this.m_weightBuffer[b];\r\n                  ///b2Vec2 s = m_accumulation2Buffer[b] - m_accumulation2Buffer[a];\r\n                  const s = b2Vec2.SubVV(this.m_accumulation2Buffer[b], this.m_accumulation2Buffer[a], s_s);\r\n                  const fn = b2Min(pressureStrength * (h - 2) + normalStrength * b2Vec2.DotVV(s, n), maxVelocityVariation) * w;\r\n                  ///b2Vec2 f = fn * n;\r\n                  const f = b2Vec2.MulSV(fn, n, s_f);\r\n                  ///m_velocityBuffer.data[a] -= f;\r\n                  vel_data[a].SelfSub(f);\r\n                  ///m_velocityBuffer.data[b] += f;\r\n                  vel_data[b].SelfAdd(f);\r\n              }\r\n          }\r\n      }\r\n      SolveViscous() {\r\n          const s_v = b2ParticleSystem.SolveViscous_s_v;\r\n          const s_f = b2ParticleSystem.SolveViscous_s_f;\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          const viscousStrength = this.m_def.viscousStrength;\r\n          const inv_mass = this.GetParticleInvMass();\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              const a = contact.index;\r\n              if (this.m_flagsBuffer.data[a] & exports.b2ParticleFlag.b2_viscousParticle) {\r\n                  const b = contact.body;\r\n                  const w = contact.weight;\r\n                  const m = contact.mass;\r\n                  const p = pos_data[a];\r\n                  ///b2Vec2 v = b.GetLinearVelocityFromWorldPoint(p) - m_velocityBuffer.data[a];\r\n                  const v = b2Vec2.SubVV(b.GetLinearVelocityFromWorldPoint(p, b2Vec2.s_t0), vel_data[a], s_v);\r\n                  ///b2Vec2 f = viscousStrength * m * w * v;\r\n                  const f = b2Vec2.MulSV(viscousStrength * m * w, v, s_f);\r\n                  ///m_velocityBuffer.data[a] += GetParticleInvMass() * f;\r\n                  vel_data[a].SelfMulAdd(inv_mass, f);\r\n                  ///b.ApplyLinearImpulse(-f, p, true);\r\n                  b.ApplyLinearImpulse(f.SelfNeg(), p, true);\r\n              }\r\n          }\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              if (contact.flags & exports.b2ParticleFlag.b2_viscousParticle) {\r\n                  const a = contact.indexA;\r\n                  const b = contact.indexB;\r\n                  const w = contact.weight;\r\n                  ///b2Vec2 v = m_velocityBuffer.data[b] - m_velocityBuffer.data[a];\r\n                  const v = b2Vec2.SubVV(vel_data[b], vel_data[a], s_v);\r\n                  ///b2Vec2 f = viscousStrength * w * v;\r\n                  const f = b2Vec2.MulSV(viscousStrength * w, v, s_f);\r\n                  ///m_velocityBuffer.data[a] += f;\r\n                  vel_data[a].SelfAdd(f);\r\n                  ///m_velocityBuffer.data[b] -= f;\r\n                  vel_data[b].SelfSub(f);\r\n              }\r\n          }\r\n      }\r\n      SolveRepulsive(step) {\r\n          const s_f = b2ParticleSystem.SolveRepulsive_s_f;\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          const repulsiveStrength = this.m_def.repulsiveStrength * this.GetCriticalVelocity(step);\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              if (contact.flags & exports.b2ParticleFlag.b2_repulsiveParticle) {\r\n                  const a = contact.indexA;\r\n                  const b = contact.indexB;\r\n                  if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                      const w = contact.weight;\r\n                      const n = contact.normal;\r\n                      ///b2Vec2 f = repulsiveStrength * w * n;\r\n                      const f = b2Vec2.MulSV(repulsiveStrength * w, n, s_f);\r\n                      ///m_velocityBuffer.data[a] -= f;\r\n                      vel_data[a].SelfSub(f);\r\n                      ///m_velocityBuffer.data[b] += f;\r\n                      vel_data[b].SelfAdd(f);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      SolvePowder(step) {\r\n          const s_f = b2ParticleSystem.SolvePowder_s_f;\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const pos_data = this.m_positionBuffer.data;\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          const powderStrength = this.m_def.powderStrength * this.GetCriticalVelocity(step);\r\n          const minWeight = 1.0 - b2_particleStride;\r\n          const inv_mass = this.GetParticleInvMass();\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              const a = contact.index;\r\n              if (this.m_flagsBuffer.data[a] & exports.b2ParticleFlag.b2_powderParticle) {\r\n                  const w = contact.weight;\r\n                  if (w > minWeight) {\r\n                      const b = contact.body;\r\n                      const m = contact.mass;\r\n                      const p = pos_data[a];\r\n                      const n = contact.normal;\r\n                      const f = b2Vec2.MulSV(powderStrength * m * (w - minWeight), n, s_f);\r\n                      vel_data[a].SelfMulSub(inv_mass, f);\r\n                      b.ApplyLinearImpulse(f, p, true);\r\n                  }\r\n              }\r\n          }\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              if (contact.flags & exports.b2ParticleFlag.b2_powderParticle) {\r\n                  const w = contact.weight;\r\n                  if (w > minWeight) {\r\n                      const a = contact.indexA;\r\n                      const b = contact.indexB;\r\n                      const n = contact.normal;\r\n                      const f = b2Vec2.MulSV(powderStrength * (w - minWeight), n, s_f);\r\n                      vel_data[a].SelfSub(f);\r\n                      vel_data[b].SelfAdd(f);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      SolveSolid(step) {\r\n          const s_f = b2ParticleSystem.SolveSolid_s_f;\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          // applies extra repulsive force from solid particle groups\r\n          this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n          const ejectionStrength = step.inv_dt * this.m_def.ejectionStrength;\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              const a = contact.indexA;\r\n              const b = contact.indexB;\r\n              if (this.m_groupBuffer[a] !== this.m_groupBuffer[b]) {\r\n                  const w = contact.weight;\r\n                  const n = contact.normal;\r\n                  const h = this.m_depthBuffer[a] + this.m_depthBuffer[b];\r\n                  const f = b2Vec2.MulSV(ejectionStrength * h * w, n, s_f);\r\n                  vel_data[a].SelfSub(f);\r\n                  vel_data[b].SelfAdd(f);\r\n              }\r\n          }\r\n      }\r\n      SolveForce(step) {\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const vel_data = this.m_velocityBuffer.data;\r\n          const velocityPerForce = step.dt * this.GetParticleInvMass();\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              ///m_velocityBuffer.data[i] += velocityPerForce * m_forceBuffer[i];\r\n              vel_data[i].SelfMulAdd(velocityPerForce, this.m_forceBuffer[i]);\r\n          }\r\n          this.m_hasForce = false;\r\n      }\r\n      SolveColorMixing() {\r\n          // mixes color between contacting particles\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_colorBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          const colorMixing = 0.5 * this.m_def.colorMixingStrength;\r\n          if (colorMixing) {\r\n              for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n                  const contact = this.m_contactBuffer.data[k];\r\n                  const a = contact.indexA;\r\n                  const b = contact.indexB;\r\n                  if (this.m_flagsBuffer.data[a] & this.m_flagsBuffer.data[b] &\r\n                      exports.b2ParticleFlag.b2_colorMixingParticle) {\r\n                      const colorA = this.m_colorBuffer.data[a];\r\n                      const colorB = this.m_colorBuffer.data[b];\r\n                      // Use the static method to ensure certain compilers inline\r\n                      // this correctly.\r\n                      b2Color.MixColors(colorA, colorB, colorMixing);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      SolveZombie() {\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          // removes particles with zombie flag\r\n          let newCount = 0;\r\n          ///int32* newIndices = (int32*) this.m_world.m_stackAllocator.Allocate(sizeof(int32) * this.m_count);\r\n          const newIndices = []; // TODO: static\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              newIndices[i] = b2_invalidParticleIndex;\r\n          }\r\n          // DEBUG: b2Assert(newIndices.length === this.m_count);\r\n          let allParticleFlags = 0;\r\n          for (let i = 0; i < this.m_count; i++) {\r\n              const flags = this.m_flagsBuffer.data[i];\r\n              if (flags & exports.b2ParticleFlag.b2_zombieParticle) {\r\n                  const destructionListener = this.m_world.m_destructionListener;\r\n                  if ((flags & exports.b2ParticleFlag.b2_destructionListenerParticle) && destructionListener) {\r\n                      destructionListener.SayGoodbyeParticle(this, i);\r\n                  }\r\n                  // Destroy particle handle.\r\n                  if (this.m_handleIndexBuffer.data) {\r\n                      const handle = this.m_handleIndexBuffer.data[i];\r\n                      if (handle) {\r\n                          handle.SetIndex(b2_invalidParticleIndex);\r\n                          this.m_handleIndexBuffer.data[i] = null;\r\n                          ///m_handleAllocator.Free(handle);\r\n                      }\r\n                  }\r\n                  newIndices[i] = b2_invalidParticleIndex;\r\n              }\r\n              else {\r\n                  newIndices[i] = newCount;\r\n                  if (i !== newCount) {\r\n                      // Update handle to reference new particle index.\r\n                      if (this.m_handleIndexBuffer.data) {\r\n                          const handle = this.m_handleIndexBuffer.data[i];\r\n                          if (handle) {\r\n                              handle.SetIndex(newCount);\r\n                          }\r\n                          this.m_handleIndexBuffer.data[newCount] = handle;\r\n                      }\r\n                      this.m_flagsBuffer.data[newCount] = this.m_flagsBuffer.data[i];\r\n                      if (this.m_lastBodyContactStepBuffer.data) {\r\n                          this.m_lastBodyContactStepBuffer.data[newCount] = this.m_lastBodyContactStepBuffer.data[i];\r\n                      }\r\n                      if (this.m_bodyContactCountBuffer.data) {\r\n                          this.m_bodyContactCountBuffer.data[newCount] = this.m_bodyContactCountBuffer.data[i];\r\n                      }\r\n                      if (this.m_consecutiveContactStepsBuffer.data) {\r\n                          this.m_consecutiveContactStepsBuffer.data[newCount] = this.m_consecutiveContactStepsBuffer.data[i];\r\n                      }\r\n                      this.m_positionBuffer.data[newCount].Copy(this.m_positionBuffer.data[i]);\r\n                      this.m_velocityBuffer.data[newCount].Copy(this.m_velocityBuffer.data[i]);\r\n                      this.m_groupBuffer[newCount] = this.m_groupBuffer[i];\r\n                      if (this.m_hasForce) {\r\n                          this.m_forceBuffer[newCount].Copy(this.m_forceBuffer[i]);\r\n                      }\r\n                      if (this.m_staticPressureBuffer) {\r\n                          this.m_staticPressureBuffer[newCount] = this.m_staticPressureBuffer[i];\r\n                      }\r\n                      if (this.m_depthBuffer) {\r\n                          this.m_depthBuffer[newCount] = this.m_depthBuffer[i];\r\n                      }\r\n                      if (this.m_colorBuffer.data) {\r\n                          this.m_colorBuffer.data[newCount].Copy(this.m_colorBuffer.data[i]);\r\n                      }\r\n                      if (this.m_userDataBuffer.data) {\r\n                          this.m_userDataBuffer.data[newCount] = this.m_userDataBuffer.data[i];\r\n                      }\r\n                      if (this.m_expirationTimeBuffer.data) {\r\n                          this.m_expirationTimeBuffer.data[newCount] = this.m_expirationTimeBuffer.data[i];\r\n                      }\r\n                  }\r\n                  newCount++;\r\n                  allParticleFlags |= flags;\r\n              }\r\n          }\r\n          // predicate functions\r\n          const Test = {\r\n              ///static bool IsProxyInvalid(const Proxy& proxy)\r\n              IsProxyInvalid: (proxy) => {\r\n                  return proxy.index < 0;\r\n              },\r\n              ///static bool IsContactInvalid(const b2ParticleContact& contact)\r\n              IsContactInvalid: (contact) => {\r\n                  return contact.indexA < 0 || contact.indexB < 0;\r\n              },\r\n              ///static bool IsBodyContactInvalid(const b2ParticleBodyContact& contact)\r\n              IsBodyContactInvalid: (contact) => {\r\n                  return contact.index < 0;\r\n              },\r\n              ///static bool IsPairInvalid(const b2ParticlePair& pair)\r\n              IsPairInvalid: (pair) => {\r\n                  return pair.indexA < 0 || pair.indexB < 0;\r\n              },\r\n              ///static bool IsTriadInvalid(const b2ParticleTriad& triad)\r\n              IsTriadInvalid: (triad) => {\r\n                  return triad.indexA < 0 || triad.indexB < 0 || triad.indexC < 0;\r\n              },\r\n          };\r\n          // update proxies\r\n          for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n              const proxy = this.m_proxyBuffer.data[k];\r\n              proxy.index = newIndices[proxy.index];\r\n          }\r\n          this.m_proxyBuffer.RemoveIf(Test.IsProxyInvalid);\r\n          // update contacts\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              contact.indexA = newIndices[contact.indexA];\r\n              contact.indexB = newIndices[contact.indexB];\r\n          }\r\n          this.m_contactBuffer.RemoveIf(Test.IsContactInvalid);\r\n          // update particle-body contacts\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              contact.index = newIndices[contact.index];\r\n          }\r\n          this.m_bodyContactBuffer.RemoveIf(Test.IsBodyContactInvalid);\r\n          // update pairs\r\n          for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n              const pair = this.m_pairBuffer.data[k];\r\n              pair.indexA = newIndices[pair.indexA];\r\n              pair.indexB = newIndices[pair.indexB];\r\n          }\r\n          this.m_pairBuffer.RemoveIf(Test.IsPairInvalid);\r\n          // update triads\r\n          for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n              const triad = this.m_triadBuffer.data[k];\r\n              triad.indexA = newIndices[triad.indexA];\r\n              triad.indexB = newIndices[triad.indexB];\r\n              triad.indexC = newIndices[triad.indexC];\r\n          }\r\n          this.m_triadBuffer.RemoveIf(Test.IsTriadInvalid);\r\n          // Update lifetime indices.\r\n          if (this.m_indexByExpirationTimeBuffer.data) {\r\n              let writeOffset = 0;\r\n              for (let readOffset = 0; readOffset < this.m_count; readOffset++) {\r\n                  const newIndex = newIndices[this.m_indexByExpirationTimeBuffer.data[readOffset]];\r\n                  if (newIndex !== b2_invalidParticleIndex) {\r\n                      this.m_indexByExpirationTimeBuffer.data[writeOffset++] = newIndex;\r\n                  }\r\n              }\r\n          }\r\n          // update groups\r\n          for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n              let firstIndex = newCount;\r\n              let lastIndex = 0;\r\n              let modified = false;\r\n              for (let i = group.m_firstIndex; i < group.m_lastIndex; i++) {\r\n                  const j = newIndices[i];\r\n                  if (j >= 0) {\r\n                      firstIndex = b2Min(firstIndex, j);\r\n                      lastIndex = b2Max(lastIndex, j + 1);\r\n                  }\r\n                  else {\r\n                      modified = true;\r\n                  }\r\n              }\r\n              if (firstIndex < lastIndex) {\r\n                  group.m_firstIndex = firstIndex;\r\n                  group.m_lastIndex = lastIndex;\r\n                  if (modified) {\r\n                      if (group.m_groupFlags & exports.b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                          this.SetGroupFlags(group, group.m_groupFlags | exports.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);\r\n                      }\r\n                  }\r\n              }\r\n              else {\r\n                  group.m_firstIndex = 0;\r\n                  group.m_lastIndex = 0;\r\n                  if (!(group.m_groupFlags & exports.b2ParticleGroupFlag.b2_particleGroupCanBeEmpty)) {\r\n                      this.SetGroupFlags(group, group.m_groupFlags | exports.b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed);\r\n                  }\r\n              }\r\n          }\r\n          // update particle count\r\n          this.m_count = newCount;\r\n          ///m_world.m_stackAllocator.Free(newIndices);\r\n          this.m_allParticleFlags = allParticleFlags;\r\n          this.m_needsUpdateAllParticleFlags = false;\r\n          // destroy bodies with no particles\r\n          for (let group = this.m_groupList; group;) {\r\n              const next = group.GetNext();\r\n              if (group.m_groupFlags & exports.b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed) {\r\n                  this.DestroyParticleGroup(group);\r\n              }\r\n              group = next;\r\n          }\r\n      }\r\n      /**\r\n       * Destroy all particles which have outlived their lifetimes set\r\n       * by SetParticleLifetime().\r\n       */\r\n      SolveLifetimes(step) {\r\n          if (!this.m_expirationTimeBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_indexByExpirationTimeBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          // Update the time elapsed.\r\n          this.m_timeElapsed = this.LifetimeToExpirationTime(step.dt);\r\n          // Get the floor (non-fractional component) of the elapsed time.\r\n          const quantizedTimeElapsed = this.GetQuantizedTimeElapsed();\r\n          const expirationTimes = this.m_expirationTimeBuffer.data;\r\n          const expirationTimeIndices = this.m_indexByExpirationTimeBuffer.data;\r\n          const particleCount = this.GetParticleCount();\r\n          // Sort the lifetime buffer if it's required.\r\n          if (this.m_expirationTimeBufferRequiresSorting) {\r\n              ///const ExpirationTimeComparator expirationTimeComparator(expirationTimes);\r\n              ///std::sort(expirationTimeIndices, expirationTimeIndices + particleCount, expirationTimeComparator);\r\n              /**\r\n               * Compare the lifetime of particleIndexA and particleIndexB\r\n               * returning true if the lifetime of A is greater than B for\r\n               * particles that will expire.  If either particle's lifetime is\r\n               * infinite (<= 0.0f) this function return true if the lifetime\r\n               * of A is lesser than B. When used with std::sort() this\r\n               * results in an array of particle indicies sorted in reverse\r\n               * order by particle lifetime.\r\n               *\r\n               * For example, the set of lifetimes\r\n               * (1.0, 0.7, 0.3, 0.0, -1.0, 2.0)\r\n               * would be sorted as\r\n               * (0.0, 1.0, -2.0, 1.0, 0.7, 0.3)\r\n               */\r\n              const ExpirationTimeComparator = (particleIndexA, particleIndexB) => {\r\n                  const expirationTimeA = expirationTimes[particleIndexA];\r\n                  const expirationTimeB = expirationTimes[particleIndexB];\r\n                  const infiniteExpirationTimeA = expirationTimeA <= 0.0;\r\n                  const infiniteExpirationTimeB = expirationTimeB <= 0.0;\r\n                  return infiniteExpirationTimeA === infiniteExpirationTimeB ?\r\n                      expirationTimeA > expirationTimeB : infiniteExpirationTimeA;\r\n              };\r\n              std_sort(expirationTimeIndices, 0, particleCount, ExpirationTimeComparator);\r\n              this.m_expirationTimeBufferRequiresSorting = false;\r\n          }\r\n          // Destroy particles which have expired.\r\n          for (let i = particleCount - 1; i >= 0; --i) {\r\n              const particleIndex = expirationTimeIndices[i];\r\n              const expirationTime = expirationTimes[particleIndex];\r\n              // If no particles need to be destroyed, skip this.\r\n              if (quantizedTimeElapsed < expirationTime || expirationTime <= 0) {\r\n                  break;\r\n              }\r\n              // Destroy this particle.\r\n              this.DestroyParticle(particleIndex);\r\n          }\r\n      }\r\n      RotateBuffer(start, mid, end) {\r\n          // move the particles assigned to the given group toward the end of array\r\n          if (start === mid || mid === end) {\r\n              return;\r\n          }\r\n          // DEBUG: b2Assert(mid >= start && mid <= end);\r\n          function newIndices(i) {\r\n              if (i < start) {\r\n                  return i;\r\n              }\r\n              else if (i < mid) {\r\n                  return i + end - mid;\r\n              }\r\n              else if (i < end) {\r\n                  return i + start - mid;\r\n              }\r\n              else {\r\n                  return i;\r\n              }\r\n          }\r\n          if (!this.m_flagsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_positionBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_velocityBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          ///std::rotate(m_flagsBuffer.data + start, m_flagsBuffer.data + mid, m_flagsBuffer.data + end);\r\n          std_rotate(this.m_flagsBuffer.data, start, mid, end);\r\n          if (this.m_lastBodyContactStepBuffer.data) {\r\n              ///std::rotate(m_lastBodyContactStepBuffer.data + start, m_lastBodyContactStepBuffer.data + mid, m_lastBodyContactStepBuffer.data + end);\r\n              std_rotate(this.m_lastBodyContactStepBuffer.data, start, mid, end);\r\n          }\r\n          if (this.m_bodyContactCountBuffer.data) {\r\n              ///std::rotate(m_bodyContactCountBuffer.data + start, m_bodyContactCountBuffer.data + mid, m_bodyContactCountBuffer.data + end);\r\n              std_rotate(this.m_bodyContactCountBuffer.data, start, mid, end);\r\n          }\r\n          if (this.m_consecutiveContactStepsBuffer.data) {\r\n              ///std::rotate(m_consecutiveContactStepsBuffer.data + start, m_consecutiveContactStepsBuffer.data + mid, m_consecutiveContactStepsBuffer.data + end);\r\n              std_rotate(this.m_consecutiveContactStepsBuffer.data, start, mid, end);\r\n          }\r\n          ///std::rotate(m_positionBuffer.data + start, m_positionBuffer.data + mid, m_positionBuffer.data + end);\r\n          std_rotate(this.m_positionBuffer.data, start, mid, end);\r\n          ///std::rotate(m_velocityBuffer.data + start, m_velocityBuffer.data + mid, m_velocityBuffer.data + end);\r\n          std_rotate(this.m_velocityBuffer.data, start, mid, end);\r\n          ///std::rotate(m_groupBuffer + start, m_groupBuffer + mid, m_groupBuffer + end);\r\n          std_rotate(this.m_groupBuffer, start, mid, end);\r\n          if (this.m_hasForce) {\r\n              ///std::rotate(m_forceBuffer + start, m_forceBuffer + mid, m_forceBuffer + end);\r\n              std_rotate(this.m_forceBuffer, start, mid, end);\r\n          }\r\n          if (this.m_staticPressureBuffer) {\r\n              ///std::rotate(m_staticPressureBuffer + start, m_staticPressureBuffer + mid, m_staticPressureBuffer + end);\r\n              std_rotate(this.m_staticPressureBuffer, start, mid, end);\r\n          }\r\n          if (this.m_depthBuffer) {\r\n              ///std::rotate(m_depthBuffer + start, m_depthBuffer + mid, m_depthBuffer + end);\r\n              std_rotate(this.m_depthBuffer, start, mid, end);\r\n          }\r\n          if (this.m_colorBuffer.data) {\r\n              ///std::rotate(m_colorBuffer.data + start, m_colorBuffer.data + mid, m_colorBuffer.data + end);\r\n              std_rotate(this.m_colorBuffer.data, start, mid, end);\r\n          }\r\n          if (this.m_userDataBuffer.data) {\r\n              ///std::rotate(m_userDataBuffer.data + start, m_userDataBuffer.data + mid, m_userDataBuffer.data + end);\r\n              std_rotate(this.m_userDataBuffer.data, start, mid, end);\r\n          }\r\n          // Update handle indices.\r\n          if (this.m_handleIndexBuffer.data) {\r\n              ///std::rotate(m_handleIndexBuffer.data + start, m_handleIndexBuffer.data + mid, m_handleIndexBuffer.data + end);\r\n              std_rotate(this.m_handleIndexBuffer.data, start, mid, end);\r\n              for (let i = start; i < end; ++i) {\r\n                  const handle = this.m_handleIndexBuffer.data[i];\r\n                  if (handle) {\r\n                      handle.SetIndex(newIndices(handle.GetIndex()));\r\n                  }\r\n              }\r\n          }\r\n          if (this.m_expirationTimeBuffer.data) {\r\n              ///std::rotate(m_expirationTimeBuffer.data + start, m_expirationTimeBuffer.data + mid, m_expirationTimeBuffer.data + end);\r\n              std_rotate(this.m_expirationTimeBuffer.data, start, mid, end);\r\n              // Update expiration time buffer indices.\r\n              const particleCount = this.GetParticleCount();\r\n              if (!this.m_indexByExpirationTimeBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              const indexByExpirationTime = this.m_indexByExpirationTimeBuffer.data;\r\n              for (let i = 0; i < particleCount; ++i) {\r\n                  indexByExpirationTime[i] = newIndices(indexByExpirationTime[i]);\r\n              }\r\n          }\r\n          // update proxies\r\n          for (let k = 0; k < this.m_proxyBuffer.count; k++) {\r\n              const proxy = this.m_proxyBuffer.data[k];\r\n              proxy.index = newIndices(proxy.index);\r\n          }\r\n          // update contacts\r\n          for (let k = 0; k < this.m_contactBuffer.count; k++) {\r\n              const contact = this.m_contactBuffer.data[k];\r\n              contact.indexA = newIndices(contact.indexA);\r\n              contact.indexB = newIndices(contact.indexB);\r\n          }\r\n          // update particle-body contacts\r\n          for (let k = 0; k < this.m_bodyContactBuffer.count; k++) {\r\n              const contact = this.m_bodyContactBuffer.data[k];\r\n              contact.index = newIndices(contact.index);\r\n          }\r\n          // update pairs\r\n          for (let k = 0; k < this.m_pairBuffer.count; k++) {\r\n              const pair = this.m_pairBuffer.data[k];\r\n              pair.indexA = newIndices(pair.indexA);\r\n              pair.indexB = newIndices(pair.indexB);\r\n          }\r\n          // update triads\r\n          for (let k = 0; k < this.m_triadBuffer.count; k++) {\r\n              const triad = this.m_triadBuffer.data[k];\r\n              triad.indexA = newIndices(triad.indexA);\r\n              triad.indexB = newIndices(triad.indexB);\r\n              triad.indexC = newIndices(triad.indexC);\r\n          }\r\n          // update groups\r\n          for (let group = this.m_groupList; group; group = group.GetNext()) {\r\n              group.m_firstIndex = newIndices(group.m_firstIndex);\r\n              group.m_lastIndex = newIndices(group.m_lastIndex - 1) + 1;\r\n          }\r\n      }\r\n      GetCriticalVelocity(step) {\r\n          return this.m_particleDiameter * step.inv_dt;\r\n      }\r\n      GetCriticalVelocitySquared(step) {\r\n          const velocity = this.GetCriticalVelocity(step);\r\n          return velocity * velocity;\r\n      }\r\n      GetCriticalPressure(step) {\r\n          return this.m_def.density * this.GetCriticalVelocitySquared(step);\r\n      }\r\n      GetParticleStride() {\r\n          return b2_particleStride * this.m_particleDiameter;\r\n      }\r\n      GetParticleMass() {\r\n          const stride = this.GetParticleStride();\r\n          return this.m_def.density * stride * stride;\r\n      }\r\n      GetParticleInvMass() {\r\n          ///return 1.777777 * this.m_inverseDensity * this.m_inverseDiameter * this.m_inverseDiameter;\r\n          // mass = density * stride^2, so we take the inverse of this.\r\n          const inverseStride = this.m_inverseDiameter * (1.0 / b2_particleStride);\r\n          return this.m_inverseDensity * inverseStride * inverseStride;\r\n      }\r\n      /**\r\n       * Get the world's contact filter if any particles with the\r\n       * b2_contactFilterParticle flag are present in the system.\r\n       */\r\n      GetFixtureContactFilter() {\r\n          return (this.m_allParticleFlags & exports.b2ParticleFlag.b2_fixtureContactFilterParticle) ?\r\n              this.m_world.m_contactManager.m_contactFilter : null;\r\n      }\r\n      /**\r\n       * Get the world's contact filter if any particles with the\r\n       * b2_particleContactFilterParticle flag are present in the\r\n       * system.\r\n       */\r\n      GetParticleContactFilter() {\r\n          return (this.m_allParticleFlags & exports.b2ParticleFlag.b2_particleContactFilterParticle) ?\r\n              this.m_world.m_contactManager.m_contactFilter : null;\r\n      }\r\n      /**\r\n       * Get the world's contact listener if any particles with the\r\n       * b2_fixtureContactListenerParticle flag are present in the\r\n       * system.\r\n       */\r\n      GetFixtureContactListener() {\r\n          return (this.m_allParticleFlags & exports.b2ParticleFlag.b2_fixtureContactListenerParticle) ?\r\n              this.m_world.m_contactManager.m_contactListener : null;\r\n      }\r\n      /**\r\n       * Get the world's contact listener if any particles with the\r\n       * b2_particleContactListenerParticle flag are present in the\r\n       * system.\r\n       */\r\n      GetParticleContactListener() {\r\n          return (this.m_allParticleFlags & exports.b2ParticleFlag.b2_particleContactListenerParticle) ?\r\n              this.m_world.m_contactManager.m_contactListener : null;\r\n      }\r\n      SetUserOverridableBuffer(buffer, newData, newCapacity) {\r\n          // DEBUG: b2Assert(((newData !== null) && (newCapacity > 0)) || ((newData === null) && (newCapacity === 0)));\r\n          ///if (!buffer.userSuppliedCapacity)\r\n          ///{\r\n          ///this.m_world.m_blockAllocator.Free(buffer.data, sizeof(T) * m_internalAllocatedCapacity);\r\n          ///}\r\n          buffer.data = newData;\r\n          buffer.userSuppliedCapacity = newCapacity;\r\n      }\r\n      SetGroupFlags(group, newFlags) {\r\n          const oldFlags = group.m_groupFlags;\r\n          if ((oldFlags ^ newFlags) & exports.b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n              // If the b2_solidParticleGroup flag changed schedule depth update.\r\n              newFlags |= exports.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth;\r\n          }\r\n          if (oldFlags & ~newFlags) {\r\n              // If any flags might be removed\r\n              this.m_needsUpdateAllGroupFlags = true;\r\n          }\r\n          if (~this.m_allGroupFlags & newFlags) {\r\n              // If any flags were added\r\n              if (newFlags & exports.b2ParticleGroupFlag.b2_solidParticleGroup) {\r\n                  this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);\r\n              }\r\n              this.m_allGroupFlags |= newFlags;\r\n          }\r\n          group.m_groupFlags = newFlags;\r\n      }\r\n      static BodyContactCompare(lhs, rhs) {\r\n          if (lhs.index === rhs.index) {\r\n              // Subsort by weight, decreasing.\r\n              return lhs.weight > rhs.weight;\r\n          }\r\n          return lhs.index < rhs.index;\r\n      }\r\n      RemoveSpuriousBodyContacts() {\r\n          // At this point we have a list of contact candidates based on AABB\r\n          // overlap.The AABB query that  generated this returns all collidable\r\n          // fixtures overlapping particle bounding boxes.  This breaks down around\r\n          // vertices where two shapes intersect, such as a \"ground\" surface made\r\n          // of multiple b2PolygonShapes; it potentially applies a lot of spurious\r\n          // impulses from normals that should not actually contribute.  See the\r\n          // Ramp example in Testbed.\r\n          //\r\n          // To correct for this, we apply this algorithm:\r\n          //   * sort contacts by particle and subsort by weight (nearest to farthest)\r\n          //   * for each contact per particle:\r\n          //      - project a point at the contact distance along the inverse of the\r\n          //        contact normal\r\n          //      - if this intersects the fixture that generated the contact, apply\r\n          //         it, otherwise discard as impossible\r\n          //      - repeat for up to n nearest contacts, currently we get good results\r\n          //        from n=3.\r\n          ///std::sort(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleSystem::BodyContactCompare);\r\n          std_sort(this.m_bodyContactBuffer.data, 0, this.m_bodyContactBuffer.count, b2ParticleSystem.BodyContactCompare);\r\n          ///int32 discarded = 0;\r\n          ///std::remove_if(m_bodyContactBuffer.Begin(), m_bodyContactBuffer.End(), b2ParticleBodyContactRemovePredicate(this, &discarded));\r\n          ///\r\n          ///m_bodyContactBuffer.SetCount(m_bodyContactBuffer.GetCount() - discarded);\r\n          const s_n = b2ParticleSystem.RemoveSpuriousBodyContacts_s_n;\r\n          const s_pos = b2ParticleSystem.RemoveSpuriousBodyContacts_s_pos;\r\n          const s_normal = b2ParticleSystem.RemoveSpuriousBodyContacts_s_normal;\r\n          // Max number of contacts processed per particle, from nearest to farthest.\r\n          // This must be at least 2 for correctness with concave shapes; 3 was\r\n          // experimentally arrived at as looking reasonable.\r\n          const k_maxContactsPerPoint = 3;\r\n          const system = this;\r\n          // Index of last particle processed.\r\n          let lastIndex = -1;\r\n          // Number of contacts processed for the current particle.\r\n          let currentContacts = 0;\r\n          // Output the number of discarded contacts.\r\n          // let discarded = 0;\r\n          const b2ParticleBodyContactRemovePredicate = (contact) => {\r\n              // This implements the selection criteria described in\r\n              // RemoveSpuriousBodyContacts().\r\n              // This functor is iterating through a list of Body contacts per\r\n              // Particle, ordered from near to far.  For up to the maximum number of\r\n              // contacts we allow per point per step, we verify that the contact\r\n              // normal of the Body that genenerated the contact makes physical sense\r\n              // by projecting a point back along that normal and seeing if it\r\n              // intersects the fixture generating the contact.\r\n              if (contact.index !== lastIndex) {\r\n                  currentContacts = 0;\r\n                  lastIndex = contact.index;\r\n              }\r\n              if (currentContacts++ > k_maxContactsPerPoint) {\r\n                  // ++discarded;\r\n                  return true;\r\n              }\r\n              // Project along inverse normal (as returned in the contact) to get the\r\n              // point to check.\r\n              ///b2Vec2 n = contact.normal;\r\n              const n = s_n.Copy(contact.normal);\r\n              // weight is 1-(inv(diameter) * distance)\r\n              ///n *= system.m_particleDiameter * (1 - contact.weight);\r\n              n.SelfMul(system.m_particleDiameter * (1 - contact.weight));\r\n              ///b2Vec2 pos = system.m_positionBuffer.data[contact.index] + n;\r\n              if (!system.m_positionBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              const pos = b2Vec2.AddVV(system.m_positionBuffer.data[contact.index], n, s_pos);\r\n              // pos is now a point projected back along the contact normal to the\r\n              // contact distance. If the surface makes sense for a contact, pos will\r\n              // now lie on or in the fixture generating\r\n              if (!contact.fixture.TestPoint(pos)) {\r\n                  const childCount = contact.fixture.GetShape().GetChildCount();\r\n                  for (let childIndex = 0; childIndex < childCount; childIndex++) {\r\n                      const normal = s_normal;\r\n                      const distance = contact.fixture.ComputeDistance(pos, normal, childIndex);\r\n                      if (distance < b2_linearSlop) {\r\n                          return false;\r\n                      }\r\n                  }\r\n                  // ++discarded;\r\n                  return true;\r\n              }\r\n              return false;\r\n          };\r\n          this.m_bodyContactBuffer.count = std_remove_if(this.m_bodyContactBuffer.data, b2ParticleBodyContactRemovePredicate, this.m_bodyContactBuffer.count);\r\n      }\r\n      DetectStuckParticle(particle) {\r\n          // Detect stuck particles\r\n          //\r\n          // The basic algorithm is to allow the user to specify an optional\r\n          // threshold where we detect whenever a particle is contacting\r\n          // more than one fixture for more than threshold consecutive\r\n          // steps. This is considered to be \"stuck\", and these are put\r\n          // in a list the user can query per step, if enabled, to deal with\r\n          // such particles.\r\n          if (this.m_stuckThreshold <= 0) {\r\n              return;\r\n          }\r\n          if (!this.m_bodyContactCountBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_consecutiveContactStepsBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          if (!this.m_lastBodyContactStepBuffer.data) {\r\n              throw new Error();\r\n          }\r\n          // Get the state variables for this particle.\r\n          ///int32 * const consecutiveCount = &m_consecutiveContactStepsBuffer.data[particle];\r\n          ///int32 * const lastStep = &m_lastBodyContactStepBuffer.data[particle];\r\n          ///int32 * const bodyCount = &m_bodyContactCountBuffer.data[particle];\r\n          // This is only called when there is a body contact for this particle.\r\n          ///++(*bodyCount);\r\n          ++this.m_bodyContactCountBuffer.data[particle];\r\n          // We want to only trigger detection once per step, the first time we\r\n          // contact more than one fixture in a step for a given particle.\r\n          ///if (*bodyCount === 2)\r\n          if (this.m_bodyContactCountBuffer.data[particle] === 2) {\r\n              ///++(*consecutiveCount);\r\n              ++this.m_consecutiveContactStepsBuffer.data[particle];\r\n              ///if (*consecutiveCount > m_stuckThreshold)\r\n              if (this.m_consecutiveContactStepsBuffer.data[particle] > this.m_stuckThreshold) {\r\n                  ///int32& newStuckParticle = m_stuckParticleBuffer.Append();\r\n                  ///newStuckParticle = particle;\r\n                  this.m_stuckParticleBuffer.data[this.m_stuckParticleBuffer.Append()] = particle;\r\n              }\r\n          }\r\n          ///*lastStep = m_timestamp;\r\n          this.m_lastBodyContactStepBuffer.data[particle] = this.m_timestamp;\r\n      }\r\n      /**\r\n       * Determine whether a particle index is valid.\r\n       */\r\n      ValidateParticleIndex(index) {\r\n          return index >= 0 && index < this.GetParticleCount() &&\r\n              index !== b2_invalidParticleIndex;\r\n      }\r\n      /**\r\n       * Get the time elapsed in\r\n       * b2ParticleSystemDef::lifetimeGranularity.\r\n       */\r\n      GetQuantizedTimeElapsed() {\r\n          ///return (int32)(m_timeElapsed >> 32);\r\n          return Math.floor(this.m_timeElapsed / 0x100000000);\r\n      }\r\n      /**\r\n       * Convert a lifetime in seconds to an expiration time.\r\n       */\r\n      LifetimeToExpirationTime(lifetime) {\r\n          ///return m_timeElapsed + (int64)((lifetime / m_def.lifetimeGranularity) * (float32)(1LL << 32));\r\n          return this.m_timeElapsed + Math.floor(((lifetime / this.m_def.lifetimeGranularity) * 0x100000000));\r\n      }\r\n      ForceCanBeApplied(flags) {\r\n          return !(flags & exports.b2ParticleFlag.b2_wallParticle);\r\n      }\r\n      PrepareForceBuffer() {\r\n          if (!this.m_hasForce) {\r\n              ///memset(m_forceBuffer, 0, sizeof(*m_forceBuffer) * m_count);\r\n              for (let i = 0; i < this.m_count; i++) {\r\n                  this.m_forceBuffer[i].SetZero();\r\n              }\r\n              this.m_hasForce = true;\r\n          }\r\n      }\r\n      IsRigidGroup(group) {\r\n          return (group !== null) && ((group.m_groupFlags & exports.b2ParticleGroupFlag.b2_rigidParticleGroup) !== 0);\r\n      }\r\n      GetLinearVelocity(group, particleIndex, point, out) {\r\n          if (group && this.IsRigidGroup(group)) {\r\n              return group.GetLinearVelocityFromWorldPoint(point, out);\r\n          }\r\n          else {\r\n              if (!this.m_velocityBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              ///return m_velocityBuffer.data[particleIndex];\r\n              return out.Copy(this.m_velocityBuffer.data[particleIndex]);\r\n          }\r\n      }\r\n      InitDampingParameter(invMass, invInertia, tangentDistance, mass, inertia, center, point, normal) {\r\n          ///*invMass = mass > 0 ? 1 / mass : 0;\r\n          invMass[0] = mass > 0 ? 1 / mass : 0;\r\n          ///*invInertia = inertia > 0 ? 1 / inertia : 0;\r\n          invInertia[0] = inertia > 0 ? 1 / inertia : 0;\r\n          ///*tangentDistance = b2Cross(point - center, normal);\r\n          tangentDistance[0] = b2Vec2.CrossVV(b2Vec2.SubVV(point, center, b2Vec2.s_t0), normal);\r\n      }\r\n      InitDampingParameterWithRigidGroupOrParticle(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, point, normal) {\r\n          if (group && isRigidGroup) {\r\n              this.InitDampingParameter(invMass, invInertia, tangentDistance, group.GetMass(), group.GetInertia(), group.GetCenter(), point, normal);\r\n          }\r\n          else {\r\n              if (!this.m_flagsBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              const flags = this.m_flagsBuffer.data[particleIndex];\r\n              this.InitDampingParameter(invMass, invInertia, tangentDistance, flags & exports.b2ParticleFlag.b2_wallParticle ? 0 : this.GetParticleMass(), 0, point, point, normal);\r\n          }\r\n      }\r\n      ComputeDampingImpulse(invMassA, invInertiaA, tangentDistanceA, invMassB, invInertiaB, tangentDistanceB, normalVelocity) {\r\n          const invMass = invMassA + invInertiaA * tangentDistanceA * tangentDistanceA +\r\n              invMassB + invInertiaB * tangentDistanceB * tangentDistanceB;\r\n          return invMass > 0 ? normalVelocity / invMass : 0;\r\n      }\r\n      ApplyDamping(invMass, invInertia, tangentDistance, isRigidGroup, group, particleIndex, impulse, normal) {\r\n          if (group && isRigidGroup) {\r\n              ///group.m_linearVelocity += impulse * invMass * normal;\r\n              group.m_linearVelocity.SelfMulAdd(impulse * invMass, normal);\r\n              ///group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n              group.m_angularVelocity += impulse * tangentDistance * invInertia;\r\n          }\r\n          else {\r\n              if (!this.m_velocityBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              ///m_velocityBuffer.data[particleIndex] += impulse * invMass * normal;\r\n              this.m_velocityBuffer.data[particleIndex].SelfMulAdd(impulse * invMass, normal);\r\n          }\r\n      }\r\n  }\r\n  b2ParticleSystem.xTruncBits = 12;\r\n  b2ParticleSystem.yTruncBits = 12;\r\n  b2ParticleSystem.tagBits = 8 * 4; // 8u * sizeof(uint32);\r\n  b2ParticleSystem.yOffset = 1 << (b2ParticleSystem.yTruncBits - 1);\r\n  b2ParticleSystem.yShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits;\r\n  b2ParticleSystem.xShift = b2ParticleSystem.tagBits - b2ParticleSystem.yTruncBits - b2ParticleSystem.xTruncBits;\r\n  b2ParticleSystem.xScale = 1 << b2ParticleSystem.xShift;\r\n  b2ParticleSystem.xOffset = b2ParticleSystem.xScale * (1 << (b2ParticleSystem.xTruncBits - 1));\r\n  b2ParticleSystem.yMask = ((1 << b2ParticleSystem.yTruncBits) - 1) << b2ParticleSystem.yShift;\r\n  b2ParticleSystem.xMask = ~b2ParticleSystem.yMask;\r\n  b2ParticleSystem.DestroyParticlesInShape_s_aabb = new b2AABB();\r\n  b2ParticleSystem.CreateParticleGroup_s_transform = new b2Transform();\r\n  b2ParticleSystem.ComputeCollisionEnergy_s_v = new b2Vec2();\r\n  b2ParticleSystem.QueryShapeAABB_s_aabb = new b2AABB();\r\n  b2ParticleSystem.QueryPointAABB_s_aabb = new b2AABB();\r\n  b2ParticleSystem.RayCast_s_aabb = new b2AABB();\r\n  b2ParticleSystem.RayCast_s_p = new b2Vec2();\r\n  b2ParticleSystem.RayCast_s_v = new b2Vec2();\r\n  b2ParticleSystem.RayCast_s_n = new b2Vec2();\r\n  b2ParticleSystem.RayCast_s_point = new b2Vec2();\r\n  /**\r\n   * All particle types that require creating pairs\r\n   */\r\n  b2ParticleSystem.k_pairFlags = exports.b2ParticleFlag.b2_springParticle;\r\n  /**\r\n   * All particle types that require creating triads\r\n   */\r\n  b2ParticleSystem.k_triadFlags = exports.b2ParticleFlag.b2_elasticParticle;\r\n  /**\r\n   * All particle types that do not produce dynamic pressure\r\n   */\r\n  b2ParticleSystem.k_noPressureFlags = exports.b2ParticleFlag.b2_powderParticle | exports.b2ParticleFlag.b2_tensileParticle;\r\n  /**\r\n   * All particle types that apply extra damping force with bodies\r\n   */\r\n  b2ParticleSystem.k_extraDampingFlags = exports.b2ParticleFlag.b2_staticPressureParticle;\r\n  b2ParticleSystem.k_barrierWallFlags = exports.b2ParticleFlag.b2_barrierParticle | exports.b2ParticleFlag.b2_wallParticle;\r\n  b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_edge = new b2EdgeShape();\r\n  b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_d = new b2Vec2();\r\n  b2ParticleSystem.CreateParticlesStrokeShapeForGroup_s_p = new b2Vec2();\r\n  b2ParticleSystem.CreateParticlesFillShapeForGroup_s_aabb = new b2AABB();\r\n  b2ParticleSystem.CreateParticlesFillShapeForGroup_s_p = new b2Vec2();\r\n  b2ParticleSystem.UpdatePairsAndTriads_s_dab = new b2Vec2();\r\n  b2ParticleSystem.UpdatePairsAndTriads_s_dbc = new b2Vec2();\r\n  b2ParticleSystem.UpdatePairsAndTriads_s_dca = new b2Vec2();\r\n  b2ParticleSystem.AddContact_s_d = new b2Vec2();\r\n  b2ParticleSystem.UpdateBodyContacts_s_aabb = new b2AABB();\r\n  b2ParticleSystem.Solve_s_subStep = new b2TimeStep();\r\n  b2ParticleSystem.SolveCollision_s_aabb = new b2AABB();\r\n  b2ParticleSystem.SolveGravity_s_gravity = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_aabb = new b2AABB();\r\n  b2ParticleSystem.SolveBarrier_s_va = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_vb = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_pba = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_vba = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_vc = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_pca = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_vca = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_qba = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_qca = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_dv = new b2Vec2();\r\n  b2ParticleSystem.SolveBarrier_s_f = new b2Vec2();\r\n  b2ParticleSystem.SolvePressure_s_f = new b2Vec2();\r\n  b2ParticleSystem.SolveDamping_s_v = new b2Vec2();\r\n  b2ParticleSystem.SolveDamping_s_f = new b2Vec2();\r\n  b2ParticleSystem.SolveRigidDamping_s_t0 = new b2Vec2();\r\n  b2ParticleSystem.SolveRigidDamping_s_t1 = new b2Vec2();\r\n  b2ParticleSystem.SolveRigidDamping_s_p = new b2Vec2();\r\n  b2ParticleSystem.SolveRigidDamping_s_v = new b2Vec2();\r\n  b2ParticleSystem.SolveExtraDamping_s_v = new b2Vec2();\r\n  b2ParticleSystem.SolveExtraDamping_s_f = new b2Vec2();\r\n  b2ParticleSystem.SolveRigid_s_position = new b2Vec2();\r\n  b2ParticleSystem.SolveRigid_s_rotation = new b2Rot();\r\n  b2ParticleSystem.SolveRigid_s_transform = new b2Transform();\r\n  b2ParticleSystem.SolveRigid_s_velocityTransform = new b2Transform();\r\n  b2ParticleSystem.SolveElastic_s_pa = new b2Vec2();\r\n  b2ParticleSystem.SolveElastic_s_pb = new b2Vec2();\r\n  b2ParticleSystem.SolveElastic_s_pc = new b2Vec2();\r\n  b2ParticleSystem.SolveElastic_s_r = new b2Rot();\r\n  b2ParticleSystem.SolveElastic_s_t0 = new b2Vec2();\r\n  b2ParticleSystem.SolveSpring_s_pa = new b2Vec2();\r\n  b2ParticleSystem.SolveSpring_s_pb = new b2Vec2();\r\n  b2ParticleSystem.SolveSpring_s_d = new b2Vec2();\r\n  b2ParticleSystem.SolveSpring_s_f = new b2Vec2();\r\n  b2ParticleSystem.SolveTensile_s_weightedNormal = new b2Vec2();\r\n  b2ParticleSystem.SolveTensile_s_s = new b2Vec2();\r\n  b2ParticleSystem.SolveTensile_s_f = new b2Vec2();\r\n  b2ParticleSystem.SolveViscous_s_v = new b2Vec2();\r\n  b2ParticleSystem.SolveViscous_s_f = new b2Vec2();\r\n  b2ParticleSystem.SolveRepulsive_s_f = new b2Vec2();\r\n  b2ParticleSystem.SolvePowder_s_f = new b2Vec2();\r\n  b2ParticleSystem.SolveSolid_s_f = new b2Vec2();\r\n  b2ParticleSystem.RemoveSpuriousBodyContacts_s_n = new b2Vec2();\r\n  b2ParticleSystem.RemoveSpuriousBodyContacts_s_pos = new b2Vec2();\r\n  b2ParticleSystem.RemoveSpuriousBodyContacts_s_normal = new b2Vec2();\r\n  (function (b2ParticleSystem) {\r\n      class UserOverridableBuffer {\r\n          constructor() {\r\n              this.data = null;\r\n              this.userSuppliedCapacity = 0;\r\n          }\r\n      }\r\n      b2ParticleSystem.UserOverridableBuffer = UserOverridableBuffer;\r\n      class Proxy {\r\n          constructor() {\r\n              this.index = b2_invalidParticleIndex;\r\n              this.tag = 0;\r\n          }\r\n          static CompareProxyProxy(a, b) {\r\n              return a.tag < b.tag;\r\n          }\r\n          static CompareTagProxy(a, b) {\r\n              return a < b.tag;\r\n          }\r\n          static CompareProxyTag(a, b) {\r\n              return a.tag < b;\r\n          }\r\n      }\r\n      b2ParticleSystem.Proxy = Proxy;\r\n      class InsideBoundsEnumerator {\r\n          /**\r\n           * InsideBoundsEnumerator enumerates all particles inside the\r\n           * given bounds.\r\n           *\r\n           * Construct an enumerator with bounds of tags and a range of\r\n           * proxies.\r\n           */\r\n          constructor(system, lower, upper, first, last) {\r\n              this.m_system = system;\r\n              this.m_xLower = (lower & b2ParticleSystem.xMask) >>> 0;\r\n              this.m_xUpper = (upper & b2ParticleSystem.xMask) >>> 0;\r\n              this.m_yLower = (lower & b2ParticleSystem.yMask) >>> 0;\r\n              this.m_yUpper = (upper & b2ParticleSystem.yMask) >>> 0;\r\n              this.m_first = first;\r\n              this.m_last = last;\r\n              // DEBUG: b2Assert(this.m_first <= this.m_last);\r\n          }\r\n          /**\r\n           * Get index of the next particle. Returns\r\n           * b2_invalidParticleIndex if there are no more particles.\r\n           */\r\n          GetNext() {\r\n              while (this.m_first < this.m_last) {\r\n                  const xTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.xMask) >>> 0;\r\n                  // #if B2_ASSERT_ENABLED\r\n                  // DEBUG: const yTag = (this.m_system.m_proxyBuffer.data[this.m_first].tag & b2ParticleSystem.yMask) >>> 0;\r\n                  // DEBUG: b2Assert(yTag >= this.m_yLower);\r\n                  // DEBUG: b2Assert(yTag <= this.m_yUpper);\r\n                  // #endif\r\n                  if (xTag >= this.m_xLower && xTag <= this.m_xUpper) {\r\n                      return (this.m_system.m_proxyBuffer.data[this.m_first++]).index;\r\n                  }\r\n                  this.m_first++;\r\n              }\r\n              return b2_invalidParticleIndex;\r\n          }\r\n      }\r\n      b2ParticleSystem.InsideBoundsEnumerator = InsideBoundsEnumerator;\r\n      class ParticleListNode {\r\n          constructor() {\r\n              /**\r\n               * The next node in the list.\r\n               */\r\n              this.next = null;\r\n              /**\r\n               * Number of entries in the list. Valid only for the node at the\r\n               * head of the list.\r\n               */\r\n              this.count = 0;\r\n              /**\r\n               * Particle index.\r\n               */\r\n              this.index = 0;\r\n          }\r\n      }\r\n      b2ParticleSystem.ParticleListNode = ParticleListNode;\r\n      /**\r\n       * @constructor\r\n       */\r\n      class FixedSetAllocator {\r\n          Allocate(itemSize, count) {\r\n              // TODO\r\n              return count;\r\n          }\r\n          Clear() {\r\n              // TODO\r\n          }\r\n          GetCount() {\r\n              // TODO\r\n              return 0;\r\n          }\r\n          Invalidate(itemIndex) {\r\n              // TODO\r\n          }\r\n          GetValidBuffer() {\r\n              // TODO\r\n              return [];\r\n          }\r\n          GetBuffer() {\r\n              // TODO\r\n              return [];\r\n          }\r\n          SetCount(count) {\r\n              // TODO\r\n          }\r\n      }\r\n      b2ParticleSystem.FixedSetAllocator = FixedSetAllocator;\r\n      class FixtureParticle {\r\n          constructor(fixture, particle) {\r\n              this.second = b2_invalidParticleIndex;\r\n              this.first = fixture;\r\n              this.second = particle;\r\n          }\r\n      }\r\n      b2ParticleSystem.FixtureParticle = FixtureParticle;\r\n      class FixtureParticleSet extends b2ParticleSystem.FixedSetAllocator {\r\n          Initialize(bodyContactBuffer, flagsBuffer) {\r\n              // TODO\r\n          }\r\n          Find(pair) {\r\n              // TODO\r\n              return b2_invalidParticleIndex;\r\n          }\r\n      }\r\n      b2ParticleSystem.FixtureParticleSet = FixtureParticleSet;\r\n      class ParticlePair {\r\n          constructor(particleA, particleB) {\r\n              this.first = b2_invalidParticleIndex;\r\n              this.second = b2_invalidParticleIndex;\r\n              this.first = particleA;\r\n              this.second = particleB;\r\n          }\r\n      }\r\n      b2ParticleSystem.ParticlePair = ParticlePair;\r\n      class b2ParticlePairSet extends b2ParticleSystem.FixedSetAllocator {\r\n          Initialize(contactBuffer, flagsBuffer) {\r\n              // TODO\r\n          }\r\n          Find(pair) {\r\n              // TODO\r\n              return b2_invalidParticleIndex;\r\n          }\r\n      }\r\n      b2ParticleSystem.b2ParticlePairSet = b2ParticlePairSet;\r\n      class ConnectionFilter {\r\n          /**\r\n           * Is the particle necessary for connection?\r\n           * A pair or a triad should contain at least one 'necessary'\r\n           * particle.\r\n           */\r\n          IsNecessary(index) {\r\n              return true;\r\n          }\r\n          /**\r\n           * An additional condition for creating a pair.\r\n           */\r\n          ShouldCreatePair(a, b) {\r\n              return true;\r\n          }\r\n          /**\r\n           * An additional condition for creating a triad.\r\n           */\r\n          ShouldCreateTriad(a, b, c) {\r\n              return true;\r\n          }\r\n      }\r\n      b2ParticleSystem.ConnectionFilter = ConnectionFilter;\r\n      class DestroyParticlesInShapeCallback extends b2QueryCallback {\r\n          constructor(system, shape, xf, callDestructionListener) {\r\n              super();\r\n              this.m_callDestructionListener = false;\r\n              this.m_destroyed = 0;\r\n              this.m_system = system;\r\n              this.m_shape = shape;\r\n              this.m_xf = xf;\r\n              this.m_callDestructionListener = callDestructionListener;\r\n              this.m_destroyed = 0;\r\n          }\r\n          ReportFixture(fixture) {\r\n              return false;\r\n          }\r\n          ReportParticle(particleSystem, index) {\r\n              if (particleSystem !== this.m_system) {\r\n                  return false;\r\n              }\r\n              // DEBUG: b2Assert(index >= 0 && index < this.m_system.m_count);\r\n              if (!this.m_system.m_positionBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              if (this.m_shape.TestPoint(this.m_xf, this.m_system.m_positionBuffer.data[index])) {\r\n                  this.m_system.DestroyParticle(index, this.m_callDestructionListener);\r\n                  this.m_destroyed++;\r\n              }\r\n              return true;\r\n          }\r\n          Destroyed() {\r\n              return this.m_destroyed;\r\n          }\r\n      }\r\n      b2ParticleSystem.DestroyParticlesInShapeCallback = DestroyParticlesInShapeCallback;\r\n      class JoinParticleGroupsFilter extends b2ParticleSystem.ConnectionFilter {\r\n          constructor(threshold) {\r\n              super();\r\n              this.m_threshold = 0;\r\n              this.m_threshold = threshold;\r\n          }\r\n          /**\r\n           * An additional condition for creating a pair.\r\n           */\r\n          ShouldCreatePair(a, b) {\r\n              return (a < this.m_threshold && this.m_threshold <= b) ||\r\n                  (b < this.m_threshold && this.m_threshold <= a);\r\n          }\r\n          /**\r\n           * An additional condition for creating a triad.\r\n           */\r\n          ShouldCreateTriad(a, b, c) {\r\n              return (a < this.m_threshold || b < this.m_threshold || c < this.m_threshold) &&\r\n                  (this.m_threshold <= a || this.m_threshold <= b || this.m_threshold <= c);\r\n          }\r\n      }\r\n      b2ParticleSystem.JoinParticleGroupsFilter = JoinParticleGroupsFilter;\r\n      class CompositeShape extends b2Shape {\r\n          constructor(shapes, shapeCount = shapes.length) {\r\n              super(exports.b2ShapeType.e_unknown, 0);\r\n              this.m_shapeCount = 0;\r\n              this.m_shapes = shapes;\r\n              this.m_shapeCount = shapeCount;\r\n          }\r\n          Clone() {\r\n              // DEBUG: b2Assert(false);\r\n              throw new Error();\r\n          }\r\n          GetChildCount() {\r\n              return 1;\r\n          }\r\n          /**\r\n           * @see b2Shape::TestPoint\r\n           */\r\n          TestPoint(xf, p) {\r\n              for (let i = 0; i < this.m_shapeCount; i++) {\r\n                  if (this.m_shapes[i].TestPoint(xf, p)) {\r\n                      return true;\r\n                  }\r\n              }\r\n              return false;\r\n          }\r\n          /**\r\n           * @see b2Shape::ComputeDistance\r\n           */\r\n          ComputeDistance(xf, p, normal, childIndex) {\r\n              // DEBUG: b2Assert(false);\r\n              return 0;\r\n          }\r\n          /**\r\n           * Implement b2Shape.\r\n           */\r\n          RayCast(output, input, xf, childIndex) {\r\n              // DEBUG: b2Assert(false);\r\n              return false;\r\n          }\r\n          /**\r\n           * @see b2Shape::ComputeAABB\r\n           */\r\n          ComputeAABB(aabb, xf, childIndex) {\r\n              const s_subaabb = new b2AABB();\r\n              aabb.lowerBound.x = +b2_maxFloat;\r\n              aabb.lowerBound.y = +b2_maxFloat;\r\n              aabb.upperBound.x = -b2_maxFloat;\r\n              aabb.upperBound.y = -b2_maxFloat;\r\n              // DEBUG: b2Assert(childIndex === 0);\r\n              for (let i = 0; i < this.m_shapeCount; i++) {\r\n                  const childCount = this.m_shapes[i].GetChildCount();\r\n                  for (let j = 0; j < childCount; j++) {\r\n                      const subaabb = s_subaabb;\r\n                      this.m_shapes[i].ComputeAABB(subaabb, xf, j);\r\n                      aabb.Combine1(subaabb);\r\n                  }\r\n              }\r\n          }\r\n          /**\r\n           * @see b2Shape::ComputeMass\r\n           */\r\n          ComputeMass(massData, density) {\r\n              // DEBUG: b2Assert(false);\r\n          }\r\n          SetupDistanceProxy(proxy, index) {\r\n              // DEBUG: b2Assert(false);\r\n          }\r\n          ComputeSubmergedArea(normal, offset, xf, c) {\r\n              // DEBUG: b2Assert(false);\r\n              return 0;\r\n          }\r\n          Dump(log) {\r\n              // DEBUG: b2Assert(false);\r\n          }\r\n      }\r\n      b2ParticleSystem.CompositeShape = CompositeShape;\r\n      class ReactiveFilter extends b2ParticleSystem.ConnectionFilter {\r\n          constructor(flagsBuffer) {\r\n              super();\r\n              this.m_flagsBuffer = flagsBuffer;\r\n          }\r\n          IsNecessary(index) {\r\n              if (!this.m_flagsBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              return (this.m_flagsBuffer.data[index] & exports.b2ParticleFlag.b2_reactiveParticle) !== 0;\r\n          }\r\n      }\r\n      b2ParticleSystem.ReactiveFilter = ReactiveFilter;\r\n      class UpdateBodyContactsCallback extends b2FixtureParticleQueryCallback {\r\n          constructor(system, contactFilter) {\r\n              super(system); // base class constructor\r\n              this.m_contactFilter = contactFilter;\r\n          }\r\n          ShouldCollideFixtureParticle(fixture, particleSystem, particleIndex) {\r\n              // Call the contact filter if it's set, to determine whether to\r\n              // filter this contact.  Returns true if contact calculations should\r\n              // be performed, false otherwise.\r\n              if (this.m_contactFilter) {\r\n                  const flags = this.m_system.GetFlagsBuffer();\r\n                  if (flags[particleIndex] & exports.b2ParticleFlag.b2_fixtureContactFilterParticle) {\r\n                      return this.m_contactFilter.ShouldCollideFixtureParticle(fixture, this.m_system, particleIndex);\r\n                  }\r\n              }\r\n              return true;\r\n          }\r\n          ReportFixtureAndParticle(fixture, childIndex, a) {\r\n              const s_n = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n;\r\n              const s_rp = b2ParticleSystem.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp;\r\n              if (!this.m_system.m_flagsBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              if (!this.m_system.m_positionBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              const ap = this.m_system.m_positionBuffer.data[a];\r\n              const n = s_n;\r\n              const d = fixture.ComputeDistance(ap, n, childIndex);\r\n              if (d < this.m_system.m_particleDiameter && this.ShouldCollideFixtureParticle(fixture, this.m_system, a)) {\r\n                  const b = fixture.GetBody();\r\n                  const bp = b.GetWorldCenter();\r\n                  const bm = b.GetMass();\r\n                  const bI = b.GetInertia() - bm * b.GetLocalCenter().LengthSquared();\r\n                  const invBm = bm > 0 ? 1 / bm : 0;\r\n                  const invBI = bI > 0 ? 1 / bI : 0;\r\n                  const invAm = this.m_system.m_flagsBuffer.data[a] &\r\n                      exports.b2ParticleFlag.b2_wallParticle ? 0 : this.m_system.GetParticleInvMass();\r\n                  ///b2Vec2 rp = ap - bp;\r\n                  const rp = b2Vec2.SubVV(ap, bp, s_rp);\r\n                  const rpn = b2Vec2.CrossVV(rp, n);\r\n                  const invM = invAm + invBm + invBI * rpn * rpn;\r\n                  ///b2ParticleBodyContact& contact = m_system.m_bodyContactBuffer.Append();\r\n                  const contact = this.m_system.m_bodyContactBuffer.data[this.m_system.m_bodyContactBuffer.Append()];\r\n                  contact.index = a;\r\n                  contact.body = b;\r\n                  contact.fixture = fixture;\r\n                  contact.weight = 1 - d * this.m_system.m_inverseDiameter;\r\n                  ///contact.normal = -n;\r\n                  contact.normal.Copy(n.SelfNeg());\r\n                  contact.mass = invM > 0 ? 1 / invM : 0;\r\n                  this.m_system.DetectStuckParticle(a);\r\n              }\r\n          }\r\n      }\r\n      UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n = new b2Vec2();\r\n      UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp = new b2Vec2();\r\n      b2ParticleSystem.UpdateBodyContactsCallback = UpdateBodyContactsCallback;\r\n      class SolveCollisionCallback extends b2FixtureParticleQueryCallback {\r\n          constructor(system, step) {\r\n              super(system); // base class constructor\r\n              this.m_step = step;\r\n          }\r\n          ReportFixtureAndParticle(fixture, childIndex, a) {\r\n              const s_p1 = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p1;\r\n              const s_output = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_output;\r\n              const s_input = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_input;\r\n              const s_p = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_p;\r\n              const s_v = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_v;\r\n              const s_f = b2ParticleSystem.SolveCollisionCallback.ReportFixtureAndParticle_s_f;\r\n              const body = fixture.GetBody();\r\n              if (!this.m_system.m_positionBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              if (!this.m_system.m_velocityBuffer.data) {\r\n                  throw new Error();\r\n              }\r\n              const ap = this.m_system.m_positionBuffer.data[a];\r\n              const av = this.m_system.m_velocityBuffer.data[a];\r\n              const output = s_output;\r\n              const input = s_input;\r\n              if (this.m_system.m_iterationIndex === 0) {\r\n                  // Put 'ap' in the local space of the previous frame\r\n                  ///b2Vec2 p1 = b2MulT(body.m_xf0, ap);\r\n                  const p1 = b2Transform.MulTXV(body.m_xf0, ap, s_p1);\r\n                  if (fixture.GetShape().GetType() === exports.b2ShapeType.e_circleShape) {\r\n                      // Make relative to the center of the circle\r\n                      ///p1 -= body.GetLocalCenter();\r\n                      p1.SelfSub(body.GetLocalCenter());\r\n                      // Re-apply rotation about the center of the circle\r\n                      ///p1 = b2Mul(body.m_xf0.q, p1);\r\n                      b2Rot.MulRV(body.m_xf0.q, p1, p1);\r\n                      // Subtract rotation of the current frame\r\n                      ///p1 = b2MulT(body.m_xf.q, p1);\r\n                      b2Rot.MulTRV(body.m_xf.q, p1, p1);\r\n                      // Return to local space\r\n                      ///p1 += body.GetLocalCenter();\r\n                      p1.SelfAdd(body.GetLocalCenter());\r\n                  }\r\n                  // Return to global space and apply rotation of current frame\r\n                  ///input.p1 = b2Mul(body.m_xf, p1);\r\n                  b2Transform.MulXV(body.m_xf, p1, input.p1);\r\n              }\r\n              else {\r\n                  ///input.p1 = ap;\r\n                  input.p1.Copy(ap);\r\n              }\r\n              ///input.p2 = ap + m_step.dt * av;\r\n              b2Vec2.AddVMulSV(ap, this.m_step.dt, av, input.p2);\r\n              input.maxFraction = 1;\r\n              if (fixture.RayCast(output, input, childIndex)) {\r\n                  const n = output.normal;\r\n                  ///b2Vec2 p = (1 - output.fraction) * input.p1 + output.fraction * input.p2 + b2_linearSlop * n;\r\n                  const p = s_p;\r\n                  p.x = (1 - output.fraction) * input.p1.x + output.fraction * input.p2.x + b2_linearSlop * n.x;\r\n                  p.y = (1 - output.fraction) * input.p1.y + output.fraction * input.p2.y + b2_linearSlop * n.y;\r\n                  ///b2Vec2 v = m_step.inv_dt * (p - ap);\r\n                  const v = s_v;\r\n                  v.x = this.m_step.inv_dt * (p.x - ap.x);\r\n                  v.y = this.m_step.inv_dt * (p.y - ap.y);\r\n                  ///m_system.m_velocityBuffer.data[a] = v;\r\n                  this.m_system.m_velocityBuffer.data[a].Copy(v);\r\n                  ///b2Vec2 f = m_step.inv_dt * m_system.GetParticleMass() * (av - v);\r\n                  const f = s_f;\r\n                  f.x = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.x - v.x);\r\n                  f.y = this.m_step.inv_dt * this.m_system.GetParticleMass() * (av.y - v.y);\r\n                  this.m_system.ParticleApplyForce(a, f);\r\n              }\r\n          }\r\n          ReportParticle(system, index) {\r\n              return false;\r\n          }\r\n      }\r\n      SolveCollisionCallback.ReportFixtureAndParticle_s_p1 = new b2Vec2();\r\n      SolveCollisionCallback.ReportFixtureAndParticle_s_output = new b2RayCastOutput();\r\n      SolveCollisionCallback.ReportFixtureAndParticle_s_input = new b2RayCastInput();\r\n      SolveCollisionCallback.ReportFixtureAndParticle_s_p = new b2Vec2();\r\n      SolveCollisionCallback.ReportFixtureAndParticle_s_v = new b2Vec2();\r\n      SolveCollisionCallback.ReportFixtureAndParticle_s_f = new b2Vec2();\r\n      b2ParticleSystem.SolveCollisionCallback = SolveCollisionCallback;\r\n  })(b2ParticleSystem || (b2ParticleSystem = {}));\r\n  // #endif\r\n\r\n  /*\r\n  * Copyright (c) 2006-2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  // #endif\r\n  /// The world class manages all physics entities, dynamic simulation,\r\n  /// and asynchronous queries. The world also contains efficient memory\r\n  /// management facilities.\r\n  class b2World {\r\n      // #endif\r\n      /// Construct a world object.\r\n      /// @param gravity the world gravity vector.\r\n      constructor(gravity) {\r\n          // b2BlockAllocator m_blockAllocator;\r\n          // b2StackAllocator m_stackAllocator;\r\n          this.m_newFixture = false;\r\n          this.m_locked = false;\r\n          this.m_clearForces = true;\r\n          this.m_contactManager = new b2ContactManager();\r\n          this.m_bodyList = null;\r\n          this.m_jointList = null;\r\n          // #if B2_ENABLE_PARTICLE\r\n          this.m_particleSystemList = null;\r\n          // #endif\r\n          this.m_bodyCount = 0;\r\n          this.m_jointCount = 0;\r\n          this.m_gravity = new b2Vec2();\r\n          this.m_allowSleep = true;\r\n          this.m_destructionListener = null;\r\n          this.m_debugDraw = null;\r\n          // This is used to compute the time step ratio to\r\n          // support a variable time step.\r\n          this.m_inv_dt0 = 0;\r\n          // These are for debugging the solver.\r\n          this.m_warmStarting = true;\r\n          this.m_continuousPhysics = true;\r\n          this.m_subStepping = false;\r\n          this.m_stepComplete = true;\r\n          this.m_profile = new b2Profile();\r\n          this.m_island = new b2Island();\r\n          this.s_stack = [];\r\n          // #if B2_ENABLE_CONTROLLER\r\n          this.m_controllerList = null;\r\n          this.m_controllerCount = 0;\r\n          this.m_gravity.Copy(gravity);\r\n      }\r\n      /// Register a destruction listener. The listener is owned by you and must\r\n      /// remain in scope.\r\n      SetDestructionListener(listener) {\r\n          this.m_destructionListener = listener;\r\n      }\r\n      /// Register a contact filter to provide specific control over collision.\r\n      /// Otherwise the default filter is used (b2_defaultFilter). The listener is\r\n      /// owned by you and must remain in scope.\r\n      SetContactFilter(filter) {\r\n          this.m_contactManager.m_contactFilter = filter;\r\n      }\r\n      /// Register a contact event listener. The listener is owned by you and must\r\n      /// remain in scope.\r\n      SetContactListener(listener) {\r\n          this.m_contactManager.m_contactListener = listener;\r\n      }\r\n      /// Register a routine for debug drawing. The debug draw functions are called\r\n      /// inside with b2World::DrawDebugData method. The debug draw object is owned\r\n      /// by you and must remain in scope.\r\n      SetDebugDraw(debugDraw) {\r\n          this.m_debugDraw = debugDraw;\r\n      }\r\n      /// Create a rigid body given a definition. No reference to the definition\r\n      /// is retained.\r\n      /// @warning This function is locked during callbacks.\r\n      CreateBody(def = {}) {\r\n          if (this.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          const b = new b2Body(def, this);\r\n          // Add to world doubly linked list.\r\n          b.m_prev = null;\r\n          b.m_next = this.m_bodyList;\r\n          if (this.m_bodyList) {\r\n              this.m_bodyList.m_prev = b;\r\n          }\r\n          this.m_bodyList = b;\r\n          ++this.m_bodyCount;\r\n          return b;\r\n      }\r\n      /// Destroy a rigid body given a definition. No reference to the definition\r\n      /// is retained. This function is locked during callbacks.\r\n      /// @warning This automatically deletes all associated shapes and joints.\r\n      /// @warning This function is locked during callbacks.\r\n      DestroyBody(b) {\r\n          // DEBUG: b2Assert(this.m_bodyCount > 0);\r\n          if (this.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          // Delete the attached joints.\r\n          let je = b.m_jointList;\r\n          while (je) {\r\n              const je0 = je;\r\n              je = je.next;\r\n              if (this.m_destructionListener) {\r\n                  this.m_destructionListener.SayGoodbyeJoint(je0.joint);\r\n              }\r\n              this.DestroyJoint(je0.joint);\r\n              b.m_jointList = je;\r\n          }\r\n          b.m_jointList = null;\r\n          // #if B2_ENABLE_CONTROLLER\r\n          // @see b2Controller list\r\n          let coe = b.m_controllerList;\r\n          while (coe) {\r\n              const coe0 = coe;\r\n              coe = coe.nextController;\r\n              coe0.controller.RemoveBody(b);\r\n          }\r\n          // #endif\r\n          // Delete the attached contacts.\r\n          let ce = b.m_contactList;\r\n          while (ce) {\r\n              const ce0 = ce;\r\n              ce = ce.next;\r\n              this.m_contactManager.Destroy(ce0.contact);\r\n          }\r\n          b.m_contactList = null;\r\n          // Delete the attached fixtures. This destroys broad-phase proxies.\r\n          let f = b.m_fixtureList;\r\n          while (f) {\r\n              const f0 = f;\r\n              f = f.m_next;\r\n              if (this.m_destructionListener) {\r\n                  this.m_destructionListener.SayGoodbyeFixture(f0);\r\n              }\r\n              f0.DestroyProxies();\r\n              f0.Destroy();\r\n              b.m_fixtureList = f;\r\n              b.m_fixtureCount -= 1;\r\n          }\r\n          b.m_fixtureList = null;\r\n          b.m_fixtureCount = 0;\r\n          // Remove world body list.\r\n          if (b.m_prev) {\r\n              b.m_prev.m_next = b.m_next;\r\n          }\r\n          if (b.m_next) {\r\n              b.m_next.m_prev = b.m_prev;\r\n          }\r\n          if (b === this.m_bodyList) {\r\n              this.m_bodyList = b.m_next;\r\n          }\r\n          --this.m_bodyCount;\r\n      }\r\n      static _Joint_Create(def, allocator) {\r\n          switch (def.type) {\r\n              case exports.b2JointType.e_distanceJoint: return new b2DistanceJoint(def);\r\n              case exports.b2JointType.e_mouseJoint: return new b2MouseJoint(def);\r\n              case exports.b2JointType.e_prismaticJoint: return new b2PrismaticJoint(def);\r\n              case exports.b2JointType.e_revoluteJoint: return new b2RevoluteJoint(def);\r\n              case exports.b2JointType.e_pulleyJoint: return new b2PulleyJoint(def);\r\n              case exports.b2JointType.e_gearJoint: return new b2GearJoint(def);\r\n              case exports.b2JointType.e_wheelJoint: return new b2WheelJoint(def);\r\n              case exports.b2JointType.e_weldJoint: return new b2WeldJoint(def);\r\n              case exports.b2JointType.e_frictionJoint: return new b2FrictionJoint(def);\r\n              case exports.b2JointType.e_ropeJoint: return new b2RopeJoint(def);\r\n              case exports.b2JointType.e_motorJoint: return new b2MotorJoint(def);\r\n              case exports.b2JointType.e_areaJoint: return new b2AreaJoint(def);\r\n          }\r\n          throw new Error();\r\n      }\r\n      static _Joint_Destroy(joint, allocator) {\r\n      }\r\n      CreateJoint(def) {\r\n          if (this.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          const j = b2World._Joint_Create(def, null);\r\n          // Connect to the world list.\r\n          j.m_prev = null;\r\n          j.m_next = this.m_jointList;\r\n          if (this.m_jointList) {\r\n              this.m_jointList.m_prev = j;\r\n          }\r\n          this.m_jointList = j;\r\n          ++this.m_jointCount;\r\n          // Connect to the bodies' doubly linked lists.\r\n          // j.m_edgeA.joint = j;\r\n          // j.m_edgeA.other = j.m_bodyB;\r\n          j.m_edgeA.prev = null;\r\n          j.m_edgeA.next = j.m_bodyA.m_jointList;\r\n          if (j.m_bodyA.m_jointList) {\r\n              j.m_bodyA.m_jointList.prev = j.m_edgeA;\r\n          }\r\n          j.m_bodyA.m_jointList = j.m_edgeA;\r\n          // j.m_edgeB.joint = j;\r\n          // j.m_edgeB.other = j.m_bodyA;\r\n          j.m_edgeB.prev = null;\r\n          j.m_edgeB.next = j.m_bodyB.m_jointList;\r\n          if (j.m_bodyB.m_jointList) {\r\n              j.m_bodyB.m_jointList.prev = j.m_edgeB;\r\n          }\r\n          j.m_bodyB.m_jointList = j.m_edgeB;\r\n          const bodyA = def.bodyA;\r\n          const bodyB = def.bodyB;\r\n          // If the joint prevents collisions, then flag any contacts for filtering.\r\n          if (!def.collideConnected) {\r\n              let edge = bodyB.GetContactList();\r\n              while (edge) {\r\n                  if (edge.other === bodyA) {\r\n                      // Flag the contact for filtering at the next time step (where either\r\n                      // body is awake).\r\n                      edge.contact.FlagForFiltering();\r\n                  }\r\n                  edge = edge.next;\r\n              }\r\n          }\r\n          // Note: creating a joint doesn't wake the bodies.\r\n          return j;\r\n      }\r\n      /// Destroy a joint. This may cause the connected bodies to begin colliding.\r\n      /// @warning This function is locked during callbacks.\r\n      DestroyJoint(j) {\r\n          if (this.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          const collideConnected = j.m_collideConnected;\r\n          // Remove from the doubly linked list.\r\n          if (j.m_prev) {\r\n              j.m_prev.m_next = j.m_next;\r\n          }\r\n          if (j.m_next) {\r\n              j.m_next.m_prev = j.m_prev;\r\n          }\r\n          if (j === this.m_jointList) {\r\n              this.m_jointList = j.m_next;\r\n          }\r\n          // Disconnect from island graph.\r\n          const bodyA = j.m_bodyA;\r\n          const bodyB = j.m_bodyB;\r\n          // Wake up connected bodies.\r\n          bodyA.SetAwake(true);\r\n          bodyB.SetAwake(true);\r\n          // Remove from body 1.\r\n          if (j.m_edgeA.prev) {\r\n              j.m_edgeA.prev.next = j.m_edgeA.next;\r\n          }\r\n          if (j.m_edgeA.next) {\r\n              j.m_edgeA.next.prev = j.m_edgeA.prev;\r\n          }\r\n          if (j.m_edgeA === bodyA.m_jointList) {\r\n              bodyA.m_jointList = j.m_edgeA.next;\r\n          }\r\n          j.m_edgeA.prev = null;\r\n          j.m_edgeA.next = null;\r\n          // Remove from body 2\r\n          if (j.m_edgeB.prev) {\r\n              j.m_edgeB.prev.next = j.m_edgeB.next;\r\n          }\r\n          if (j.m_edgeB.next) {\r\n              j.m_edgeB.next.prev = j.m_edgeB.prev;\r\n          }\r\n          if (j.m_edgeB === bodyB.m_jointList) {\r\n              bodyB.m_jointList = j.m_edgeB.next;\r\n          }\r\n          j.m_edgeB.prev = null;\r\n          j.m_edgeB.next = null;\r\n          b2World._Joint_Destroy(j, null);\r\n          // DEBUG: b2Assert(this.m_jointCount > 0);\r\n          --this.m_jointCount;\r\n          // If the joint prevents collisions, then flag any contacts for filtering.\r\n          if (!collideConnected) {\r\n              let edge = bodyB.GetContactList();\r\n              while (edge) {\r\n                  if (edge.other === bodyA) {\r\n                      // Flag the contact for filtering at the next time step (where either\r\n                      // body is awake).\r\n                      edge.contact.FlagForFiltering();\r\n                  }\r\n                  edge = edge.next;\r\n              }\r\n          }\r\n      }\r\n      // #if B2_ENABLE_PARTICLE\r\n      CreateParticleSystem(def) {\r\n          if (this.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          const p = new b2ParticleSystem(def, this);\r\n          // Add to world doubly linked list.\r\n          p.m_prev = null;\r\n          p.m_next = this.m_particleSystemList;\r\n          if (this.m_particleSystemList) {\r\n              this.m_particleSystemList.m_prev = p;\r\n          }\r\n          this.m_particleSystemList = p;\r\n          return p;\r\n      }\r\n      DestroyParticleSystem(p) {\r\n          if (this.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          // Remove world particleSystem list.\r\n          if (p.m_prev) {\r\n              p.m_prev.m_next = p.m_next;\r\n          }\r\n          if (p.m_next) {\r\n              p.m_next.m_prev = p.m_prev;\r\n          }\r\n          if (p === this.m_particleSystemList) {\r\n              this.m_particleSystemList = p.m_next;\r\n          }\r\n      }\r\n      CalculateReasonableParticleIterations(timeStep) {\r\n          if (this.m_particleSystemList === null) {\r\n              return 1;\r\n          }\r\n          function GetSmallestRadius(world) {\r\n              let smallestRadius = b2_maxFloat;\r\n              for (let system = world.GetParticleSystemList(); system !== null; system = system.m_next) {\r\n                  smallestRadius = b2Min(smallestRadius, system.GetRadius());\r\n              }\r\n              return smallestRadius;\r\n          }\r\n          // Use the smallest radius, since that represents the worst-case.\r\n          return b2CalculateParticleIterations(this.m_gravity.Length(), GetSmallestRadius(this), timeStep);\r\n      }\r\n      // #if B2_ENABLE_PARTICLE\r\n      Step(dt, velocityIterations, positionIterations, particleIterations = this.CalculateReasonableParticleIterations(dt)) {\r\n          // #else\r\n          // public Step(dt: number, velocityIterations: number, positionIterations: number): void {\r\n          // #endif\r\n          const stepTimer = b2World.Step_s_stepTimer.Reset();\r\n          // If new fixtures were added, we need to find the new contacts.\r\n          if (this.m_newFixture) {\r\n              this.m_contactManager.FindNewContacts();\r\n              this.m_newFixture = false;\r\n          }\r\n          this.m_locked = true;\r\n          const step = b2World.Step_s_step;\r\n          step.dt = dt;\r\n          step.velocityIterations = velocityIterations;\r\n          step.positionIterations = positionIterations;\r\n          // #if B2_ENABLE_PARTICLE\r\n          step.particleIterations = particleIterations;\r\n          // #endif\r\n          if (dt > 0) {\r\n              step.inv_dt = 1 / dt;\r\n          }\r\n          else {\r\n              step.inv_dt = 0;\r\n          }\r\n          step.dtRatio = this.m_inv_dt0 * dt;\r\n          step.warmStarting = this.m_warmStarting;\r\n          // Update contacts. This is where some contacts are destroyed.\r\n          const timer = b2World.Step_s_timer.Reset();\r\n          this.m_contactManager.Collide();\r\n          this.m_profile.collide = timer.GetMilliseconds();\r\n          // Integrate velocities, solve velocity constraints, and integrate positions.\r\n          if (this.m_stepComplete && step.dt > 0) {\r\n              const timer = b2World.Step_s_timer.Reset();\r\n              // #if B2_ENABLE_PARTICLE\r\n              for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                  p.Solve(step); // Particle Simulation\r\n              }\r\n              // #endif\r\n              this.Solve(step);\r\n              this.m_profile.solve = timer.GetMilliseconds();\r\n          }\r\n          // Handle TOI events.\r\n          if (this.m_continuousPhysics && step.dt > 0) {\r\n              const timer = b2World.Step_s_timer.Reset();\r\n              this.SolveTOI(step);\r\n              this.m_profile.solveTOI = timer.GetMilliseconds();\r\n          }\r\n          if (step.dt > 0) {\r\n              this.m_inv_dt0 = step.inv_dt;\r\n          }\r\n          if (this.m_clearForces) {\r\n              this.ClearForces();\r\n          }\r\n          this.m_locked = false;\r\n          this.m_profile.step = stepTimer.GetMilliseconds();\r\n      }\r\n      /// Manually clear the force buffer on all bodies. By default, forces are cleared automatically\r\n      /// after each call to Step. The default behavior is modified by calling SetAutoClearForces.\r\n      /// The purpose of this function is to support sub-stepping. Sub-stepping is often used to maintain\r\n      /// a fixed sized time step under a variable frame-rate.\r\n      /// When you perform sub-stepping you will disable auto clearing of forces and instead call\r\n      /// ClearForces after all sub-steps are complete in one pass of your game loop.\r\n      /// @see SetAutoClearForces\r\n      ClearForces() {\r\n          for (let body = this.m_bodyList; body; body = body.m_next) {\r\n              body.m_force.SetZero();\r\n              body.m_torque = 0;\r\n          }\r\n      }\r\n      // #if B2_ENABLE_PARTICLE\r\n      DrawParticleSystem(system) {\r\n          if (this.m_debugDraw === null) {\r\n              return;\r\n          }\r\n          const particleCount = system.GetParticleCount();\r\n          if (particleCount) {\r\n              const radius = system.GetRadius();\r\n              const positionBuffer = system.GetPositionBuffer();\r\n              if (system.m_colorBuffer.data) {\r\n                  const colorBuffer = system.GetColorBuffer();\r\n                  this.m_debugDraw.DrawParticles(positionBuffer, radius, colorBuffer, particleCount);\r\n              }\r\n              else {\r\n                  this.m_debugDraw.DrawParticles(positionBuffer, radius, null, particleCount);\r\n              }\r\n          }\r\n      }\r\n      DrawDebugData() {\r\n          if (this.m_debugDraw === null) {\r\n              return;\r\n          }\r\n          const flags = this.m_debugDraw.GetFlags();\r\n          const color = b2World.DrawDebugData_s_color.SetRGB(0, 0, 0);\r\n          if (flags & exports.b2DrawFlags.e_shapeBit) {\r\n              for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                  const xf = b.m_xf;\r\n                  this.m_debugDraw.PushTransform(xf);\r\n                  for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                      if (!b.IsActive()) {\r\n                          color.SetRGB(0.5, 0.5, 0.3);\r\n                          this.DrawShape(f, color);\r\n                      }\r\n                      else if (b.GetType() === exports.b2BodyType.b2_staticBody) {\r\n                          color.SetRGB(0.5, 0.9, 0.5);\r\n                          this.DrawShape(f, color);\r\n                      }\r\n                      else if (b.GetType() === exports.b2BodyType.b2_kinematicBody) {\r\n                          color.SetRGB(0.5, 0.5, 0.9);\r\n                          this.DrawShape(f, color);\r\n                      }\r\n                      else if (!b.IsAwake()) {\r\n                          color.SetRGB(0.6, 0.6, 0.6);\r\n                          this.DrawShape(f, color);\r\n                      }\r\n                      else {\r\n                          color.SetRGB(0.9, 0.7, 0.7);\r\n                          this.DrawShape(f, color);\r\n                      }\r\n                  }\r\n                  this.m_debugDraw.PopTransform(xf);\r\n              }\r\n          }\r\n          // #if B2_ENABLE_PARTICLE\r\n          if (flags & exports.b2DrawFlags.e_particleBit) {\r\n              for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                  this.DrawParticleSystem(p);\r\n              }\r\n          }\r\n          // #endif\r\n          if (flags & exports.b2DrawFlags.e_jointBit) {\r\n              for (let j = this.m_jointList; j; j = j.m_next) {\r\n                  this.DrawJoint(j);\r\n              }\r\n          }\r\n          /*\r\n          if (flags & b2DrawFlags.e_pairBit) {\r\n            color.SetRGB(0.3, 0.9, 0.9);\r\n            for (let contact = this.m_contactManager.m_contactList; contact; contact = contact.m_next) {\r\n              const fixtureA = contact.GetFixtureA();\r\n              const fixtureB = contact.GetFixtureB();\r\n      \r\n              const cA = fixtureA.GetAABB().GetCenter();\r\n              const cB = fixtureB.GetAABB().GetCenter();\r\n      \r\n              this.m_debugDraw.DrawSegment(cA, cB, color);\r\n            }\r\n          }\r\n          */\r\n          if (flags & exports.b2DrawFlags.e_aabbBit) {\r\n              color.SetRGB(0.9, 0.3, 0.9);\r\n              const vs = b2World.DrawDebugData_s_vs;\r\n              for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                  if (!b.IsActive()) {\r\n                      continue;\r\n                  }\r\n                  for (let f = b.GetFixtureList(); f; f = f.m_next) {\r\n                      for (let i = 0; i < f.m_proxyCount; ++i) {\r\n                          const proxy = f.m_proxies[i];\r\n                          const aabb = proxy.treeNode.aabb;\r\n                          vs[0].Set(aabb.lowerBound.x, aabb.lowerBound.y);\r\n                          vs[1].Set(aabb.upperBound.x, aabb.lowerBound.y);\r\n                          vs[2].Set(aabb.upperBound.x, aabb.upperBound.y);\r\n                          vs[3].Set(aabb.lowerBound.x, aabb.upperBound.y);\r\n                          this.m_debugDraw.DrawPolygon(vs, 4, color);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          if (flags & exports.b2DrawFlags.e_centerOfMassBit) {\r\n              for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                  const xf = b2World.DrawDebugData_s_xf;\r\n                  xf.q.Copy(b.m_xf.q);\r\n                  xf.p.Copy(b.GetWorldCenter());\r\n                  this.m_debugDraw.DrawTransform(xf);\r\n              }\r\n          }\r\n          // #if B2_ENABLE_CONTROLLER\r\n          // @see b2Controller list\r\n          if (flags & exports.b2DrawFlags.e_controllerBit) {\r\n              for (let c = this.m_controllerList; c; c = c.m_next) {\r\n                  c.Draw(this.m_debugDraw);\r\n              }\r\n          }\r\n          // #endif\r\n      }\r\n      /// Query the world for all fixtures that potentially overlap the\r\n      /// provided AABB.\r\n      /// @param callback a user implemented callback class.\r\n      /// @param aabb the query box.\r\n      QueryAABB(callback, aabb, fn) {\r\n          this.m_contactManager.m_broadPhase.Query(aabb, (proxy) => {\r\n              const fixture_proxy = proxy.userData;\r\n              // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n              const fixture = fixture_proxy.fixture;\r\n              if (callback) {\r\n                  return callback.ReportFixture(fixture);\r\n              }\r\n              else if (fn) {\r\n                  return fn(fixture);\r\n              }\r\n              return true;\r\n          });\r\n          // #if B2_ENABLE_PARTICLE\r\n          if (callback instanceof b2QueryCallback) {\r\n              for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                  if (callback.ShouldQueryParticleSystem(p)) {\r\n                      p.QueryAABB(callback, aabb);\r\n                  }\r\n              }\r\n          }\r\n          // #endif\r\n      }\r\n      QueryAllAABB(aabb, out = []) {\r\n          this.QueryAABB(null, aabb, (fixture) => { out.push(fixture); return true; });\r\n          return out;\r\n      }\r\n      /// Query the world for all fixtures that potentially overlap the\r\n      /// provided point.\r\n      /// @param callback a user implemented callback class.\r\n      /// @param point the query point.\r\n      QueryPointAABB(callback, point, fn) {\r\n          this.m_contactManager.m_broadPhase.QueryPoint(point, (proxy) => {\r\n              const fixture_proxy = proxy.userData;\r\n              // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n              const fixture = fixture_proxy.fixture;\r\n              if (callback) {\r\n                  return callback.ReportFixture(fixture);\r\n              }\r\n              else if (fn) {\r\n                  return fn(fixture);\r\n              }\r\n              return true;\r\n          });\r\n          // #if B2_ENABLE_PARTICLE\r\n          if (callback instanceof b2QueryCallback) {\r\n              for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                  if (callback.ShouldQueryParticleSystem(p)) {\r\n                      p.QueryPointAABB(callback, point);\r\n                  }\r\n              }\r\n          }\r\n          // #endif\r\n      }\r\n      QueryAllPointAABB(point, out = []) {\r\n          this.QueryPointAABB(null, point, (fixture) => { out.push(fixture); return true; });\r\n          return out;\r\n      }\r\n      QueryFixtureShape(callback, shape, index, transform, fn) {\r\n          const aabb = b2World.QueryFixtureShape_s_aabb;\r\n          shape.ComputeAABB(aabb, transform, index);\r\n          this.m_contactManager.m_broadPhase.Query(aabb, (proxy) => {\r\n              const fixture_proxy = proxy.userData;\r\n              // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n              const fixture = fixture_proxy.fixture;\r\n              if (b2TestOverlapShape(shape, index, fixture.GetShape(), fixture_proxy.childIndex, transform, fixture.GetBody().GetTransform())) {\r\n                  if (callback) {\r\n                      return callback.ReportFixture(fixture);\r\n                  }\r\n                  else if (fn) {\r\n                      return fn(fixture);\r\n                  }\r\n              }\r\n              return true;\r\n          });\r\n          // #if B2_ENABLE_PARTICLE\r\n          if (callback instanceof b2QueryCallback) {\r\n              for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                  if (callback.ShouldQueryParticleSystem(p)) {\r\n                      p.QueryAABB(callback, aabb);\r\n                  }\r\n              }\r\n          }\r\n          // #endif\r\n      }\r\n      QueryAllFixtureShape(shape, index, transform, out = []) {\r\n          this.QueryFixtureShape(null, shape, index, transform, (fixture) => { out.push(fixture); return true; });\r\n          return out;\r\n      }\r\n      QueryFixturePoint(callback, point, fn) {\r\n          this.m_contactManager.m_broadPhase.QueryPoint(point, (proxy) => {\r\n              const fixture_proxy = proxy.userData;\r\n              // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n              const fixture = fixture_proxy.fixture;\r\n              if (fixture.TestPoint(point)) {\r\n                  if (callback) {\r\n                      return callback.ReportFixture(fixture);\r\n                  }\r\n                  else if (fn) {\r\n                      return fn(fixture);\r\n                  }\r\n              }\r\n              return true;\r\n          });\r\n          // #if B2_ENABLE_PARTICLE\r\n          if (callback) {\r\n              for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                  if (callback.ShouldQueryParticleSystem(p)) {\r\n                      p.QueryPointAABB(callback, point);\r\n                  }\r\n              }\r\n          }\r\n          // #endif\r\n      }\r\n      QueryAllFixturePoint(point, out = []) {\r\n          this.QueryFixturePoint(null, point, (fixture) => { out.push(fixture); return true; });\r\n          return out;\r\n      }\r\n      RayCast(callback, point1, point2, fn) {\r\n          const input = b2World.RayCast_s_input;\r\n          input.maxFraction = 1;\r\n          input.p1.Copy(point1);\r\n          input.p2.Copy(point2);\r\n          this.m_contactManager.m_broadPhase.RayCast(input, (input, proxy) => {\r\n              const fixture_proxy = proxy.userData;\r\n              // DEBUG: b2Assert(fixture_proxy instanceof b2FixtureProxy);\r\n              const fixture = fixture_proxy.fixture;\r\n              const index = fixture_proxy.childIndex;\r\n              const output = b2World.RayCast_s_output;\r\n              const hit = fixture.RayCast(output, input, index);\r\n              if (hit) {\r\n                  const fraction = output.fraction;\r\n                  const point = b2World.RayCast_s_point;\r\n                  point.Set((1 - fraction) * point1.x + fraction * point2.x, (1 - fraction) * point1.y + fraction * point2.y);\r\n                  if (callback) {\r\n                      return callback.ReportFixture(fixture, point, output.normal, fraction);\r\n                  }\r\n                  else if (fn) {\r\n                      return fn(fixture, point, output.normal, fraction);\r\n                  }\r\n              }\r\n              return input.maxFraction;\r\n          });\r\n          // #if B2_ENABLE_PARTICLE\r\n          if (callback) {\r\n              for (let p = this.m_particleSystemList; p; p = p.m_next) {\r\n                  if (callback.ShouldQueryParticleSystem(p)) {\r\n                      p.RayCast(callback, point1, point2);\r\n                  }\r\n              }\r\n          }\r\n          // #endif\r\n      }\r\n      RayCastOne(point1, point2) {\r\n          let result = null;\r\n          let min_fraction = 1;\r\n          this.RayCast(null, point1, point2, (fixture, point, normal, fraction) => {\r\n              if (fraction < min_fraction) {\r\n                  min_fraction = fraction;\r\n                  result = fixture;\r\n              }\r\n              return min_fraction;\r\n          });\r\n          return result;\r\n      }\r\n      RayCastAll(point1, point2, out = []) {\r\n          this.RayCast(null, point1, point2, (fixture, point, normal, fraction) => {\r\n              out.push(fixture);\r\n              return 1;\r\n          });\r\n          return out;\r\n      }\r\n      /// Get the world body list. With the returned body, use b2Body::GetNext to get\r\n      /// the next body in the world list. A NULL body indicates the end of the list.\r\n      /// @return the head of the world body list.\r\n      GetBodyList() {\r\n          return this.m_bodyList;\r\n      }\r\n      /// Get the world joint list. With the returned joint, use b2Joint::GetNext to get\r\n      /// the next joint in the world list. A NULL joint indicates the end of the list.\r\n      /// @return the head of the world joint list.\r\n      GetJointList() {\r\n          return this.m_jointList;\r\n      }\r\n      // #if B2_ENABLE_PARTICLE\r\n      GetParticleSystemList() {\r\n          return this.m_particleSystemList;\r\n      }\r\n      // #endif\r\n      /// Get the world contact list. With the returned contact, use b2Contact::GetNext to get\r\n      /// the next contact in the world list. A NULL contact indicates the end of the list.\r\n      /// @return the head of the world contact list.\r\n      /// @warning contacts are created and destroyed in the middle of a time step.\r\n      /// Use b2ContactListener to avoid missing contacts.\r\n      GetContactList() {\r\n          return this.m_contactManager.m_contactList;\r\n      }\r\n      /// Enable/disable sleep.\r\n      SetAllowSleeping(flag) {\r\n          if (flag === this.m_allowSleep) {\r\n              return;\r\n          }\r\n          this.m_allowSleep = flag;\r\n          if (!this.m_allowSleep) {\r\n              for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                  b.SetAwake(true);\r\n              }\r\n          }\r\n      }\r\n      GetAllowSleeping() {\r\n          return this.m_allowSleep;\r\n      }\r\n      /// Enable/disable warm starting. For testing.\r\n      SetWarmStarting(flag) {\r\n          this.m_warmStarting = flag;\r\n      }\r\n      GetWarmStarting() {\r\n          return this.m_warmStarting;\r\n      }\r\n      /// Enable/disable continuous physics. For testing.\r\n      SetContinuousPhysics(flag) {\r\n          this.m_continuousPhysics = flag;\r\n      }\r\n      GetContinuousPhysics() {\r\n          return this.m_continuousPhysics;\r\n      }\r\n      /// Enable/disable single stepped continuous physics. For testing.\r\n      SetSubStepping(flag) {\r\n          this.m_subStepping = flag;\r\n      }\r\n      GetSubStepping() {\r\n          return this.m_subStepping;\r\n      }\r\n      /// Get the number of broad-phase proxies.\r\n      GetProxyCount() {\r\n          return this.m_contactManager.m_broadPhase.GetProxyCount();\r\n      }\r\n      /// Get the number of bodies.\r\n      GetBodyCount() {\r\n          return this.m_bodyCount;\r\n      }\r\n      /// Get the number of joints.\r\n      GetJointCount() {\r\n          return this.m_jointCount;\r\n      }\r\n      /// Get the number of contacts (each may have 0 or more contact points).\r\n      GetContactCount() {\r\n          return this.m_contactManager.m_contactCount;\r\n      }\r\n      /// Get the height of the dynamic tree.\r\n      GetTreeHeight() {\r\n          return this.m_contactManager.m_broadPhase.GetTreeHeight();\r\n      }\r\n      /// Get the balance of the dynamic tree.\r\n      GetTreeBalance() {\r\n          return this.m_contactManager.m_broadPhase.GetTreeBalance();\r\n      }\r\n      /// Get the quality metric of the dynamic tree. The smaller the better.\r\n      /// The minimum is 1.\r\n      GetTreeQuality() {\r\n          return this.m_contactManager.m_broadPhase.GetTreeQuality();\r\n      }\r\n      /// Change the global gravity vector.\r\n      SetGravity(gravity, wake = true) {\r\n          if (!b2Vec2.IsEqualToV(this.m_gravity, gravity)) {\r\n              this.m_gravity.Copy(gravity);\r\n              if (wake) {\r\n                  for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                      b.SetAwake(true);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      /// Get the global gravity vector.\r\n      GetGravity() {\r\n          return this.m_gravity;\r\n      }\r\n      /// Is the world locked (in the middle of a time step).\r\n      IsLocked() {\r\n          return this.m_locked;\r\n      }\r\n      /// Set flag to control automatic clearing of forces after each time step.\r\n      SetAutoClearForces(flag) {\r\n          this.m_clearForces = flag;\r\n      }\r\n      /// Get the flag that controls automatic clearing of forces after each time step.\r\n      GetAutoClearForces() {\r\n          return this.m_clearForces;\r\n      }\r\n      /// Shift the world origin. Useful for large worlds.\r\n      /// The body shift formula is: position -= newOrigin\r\n      /// @param newOrigin the new origin with respect to the old origin\r\n      ShiftOrigin(newOrigin) {\r\n          if (this.IsLocked()) {\r\n              throw new Error();\r\n          }\r\n          for (let b = this.m_bodyList; b; b = b.m_next) {\r\n              b.m_xf.p.SelfSub(newOrigin);\r\n              b.m_sweep.c0.SelfSub(newOrigin);\r\n              b.m_sweep.c.SelfSub(newOrigin);\r\n          }\r\n          for (let j = this.m_jointList; j; j = j.m_next) {\r\n              j.ShiftOrigin(newOrigin);\r\n          }\r\n          this.m_contactManager.m_broadPhase.ShiftOrigin(newOrigin);\r\n      }\r\n      /// Get the contact manager for testing.\r\n      GetContactManager() {\r\n          return this.m_contactManager;\r\n      }\r\n      /// Get the current profile.\r\n      GetProfile() {\r\n          return this.m_profile;\r\n      }\r\n      /// Dump the world into the log file.\r\n      /// @warning this should be called outside of a time step.\r\n      Dump(log) {\r\n          if (this.m_locked) {\r\n              return;\r\n          }\r\n          log(\"const g: b2Vec2 = new b2Vec2(%.15f, %.15f);\\n\", this.m_gravity.x, this.m_gravity.y);\r\n          log(\"this.m_world.SetGravity(g);\\n\");\r\n          log(\"const bodies: b2Body[] = [];\\n\");\r\n          log(\"const joints: b2Joint[] = [];\\n\");\r\n          let i = 0;\r\n          for (let b = this.m_bodyList; b; b = b.m_next) {\r\n              b.m_islandIndex = i;\r\n              b.Dump(log);\r\n              ++i;\r\n          }\r\n          i = 0;\r\n          for (let j = this.m_jointList; j; j = j.m_next) {\r\n              j.m_index = i;\r\n              ++i;\r\n          }\r\n          // First pass on joints, skip gear joints.\r\n          for (let j = this.m_jointList; j; j = j.m_next) {\r\n              if (j.m_type === exports.b2JointType.e_gearJoint) {\r\n                  continue;\r\n              }\r\n              log(\"{\\n\");\r\n              j.Dump(log);\r\n              log(\"}\\n\");\r\n          }\r\n          // Second pass on joints, only gear joints.\r\n          for (let j = this.m_jointList; j; j = j.m_next) {\r\n              if (j.m_type !== exports.b2JointType.e_gearJoint) {\r\n                  continue;\r\n              }\r\n              log(\"{\\n\");\r\n              j.Dump(log);\r\n              log(\"}\\n\");\r\n          }\r\n      }\r\n      DrawJoint(joint) {\r\n          if (this.m_debugDraw === null) {\r\n              return;\r\n          }\r\n          const bodyA = joint.GetBodyA();\r\n          const bodyB = joint.GetBodyB();\r\n          const xf1 = bodyA.m_xf;\r\n          const xf2 = bodyB.m_xf;\r\n          const x1 = xf1.p;\r\n          const x2 = xf2.p;\r\n          const p1 = joint.GetAnchorA(b2World.DrawJoint_s_p1);\r\n          const p2 = joint.GetAnchorB(b2World.DrawJoint_s_p2);\r\n          const color = b2World.DrawJoint_s_color.SetRGB(0.5, 0.8, 0.8);\r\n          switch (joint.m_type) {\r\n              case exports.b2JointType.e_distanceJoint:\r\n                  this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                  break;\r\n              case exports.b2JointType.e_pulleyJoint: {\r\n                  const pulley = joint;\r\n                  const s1 = pulley.GetGroundAnchorA();\r\n                  const s2 = pulley.GetGroundAnchorB();\r\n                  this.m_debugDraw.DrawSegment(s1, p1, color);\r\n                  this.m_debugDraw.DrawSegment(s2, p2, color);\r\n                  this.m_debugDraw.DrawSegment(s1, s2, color);\r\n                  break;\r\n              }\r\n              case exports.b2JointType.e_mouseJoint: {\r\n                  const c = b2World.DrawJoint_s_c;\r\n                  c.Set(0.0, 1.0, 0.0);\r\n                  this.m_debugDraw.DrawPoint(p1, 4.0, c);\r\n                  this.m_debugDraw.DrawPoint(p2, 4.0, c);\r\n                  c.Set(0.8, 0.8, 0.8);\r\n                  this.m_debugDraw.DrawSegment(p1, p2, c);\r\n                  break;\r\n              }\r\n              default:\r\n                  this.m_debugDraw.DrawSegment(x1, p1, color);\r\n                  this.m_debugDraw.DrawSegment(p1, p2, color);\r\n                  this.m_debugDraw.DrawSegment(x2, p2, color);\r\n          }\r\n      }\r\n      DrawShape(fixture, color) {\r\n          if (this.m_debugDraw === null) {\r\n              return;\r\n          }\r\n          const shape = fixture.GetShape();\r\n          switch (shape.m_type) {\r\n              case exports.b2ShapeType.e_circleShape: {\r\n                  const circle = shape;\r\n                  const center = circle.m_p;\r\n                  const radius = circle.m_radius;\r\n                  const axis = b2Vec2.UNITX;\r\n                  this.m_debugDraw.DrawSolidCircle(center, radius, axis, color);\r\n                  break;\r\n              }\r\n              case exports.b2ShapeType.e_edgeShape: {\r\n                  const edge = shape;\r\n                  const v1 = edge.m_vertex1;\r\n                  const v2 = edge.m_vertex2;\r\n                  this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                  break;\r\n              }\r\n              case exports.b2ShapeType.e_chainShape: {\r\n                  const chain = shape;\r\n                  const count = chain.m_count;\r\n                  const vertices = chain.m_vertices;\r\n                  const ghostColor = b2World.DrawShape_s_ghostColor.SetRGBA(0.75 * color.r, 0.75 * color.g, 0.75 * color.b, color.a);\r\n                  let v1 = vertices[0];\r\n                  this.m_debugDraw.DrawPoint(v1, 4.0, color);\r\n                  if (chain.m_hasPrevVertex) {\r\n                      const vp = chain.m_prevVertex;\r\n                      this.m_debugDraw.DrawSegment(vp, v1, ghostColor);\r\n                      this.m_debugDraw.DrawCircle(vp, 0.1, ghostColor);\r\n                  }\r\n                  for (let i = 1; i < count; ++i) {\r\n                      const v2 = vertices[i];\r\n                      this.m_debugDraw.DrawSegment(v1, v2, color);\r\n                      this.m_debugDraw.DrawPoint(v2, 4.0, color);\r\n                      v1 = v2;\r\n                  }\r\n                  if (chain.m_hasNextVertex) {\r\n                      const vn = chain.m_nextVertex;\r\n                      this.m_debugDraw.DrawSegment(vn, v1, ghostColor);\r\n                      this.m_debugDraw.DrawCircle(vn, 0.1, ghostColor);\r\n                  }\r\n                  break;\r\n              }\r\n              case exports.b2ShapeType.e_polygonShape: {\r\n                  const poly = shape;\r\n                  const vertexCount = poly.m_count;\r\n                  const vertices = poly.m_vertices;\r\n                  this.m_debugDraw.DrawSolidPolygon(vertices, vertexCount, color);\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n      Solve(step) {\r\n          // #if B2_ENABLE_PARTICLE\r\n          // update previous transforms\r\n          for (let b = this.m_bodyList; b; b = b.m_next) {\r\n              b.m_xf0.Copy(b.m_xf);\r\n          }\r\n          // #endif\r\n          // #if B2_ENABLE_CONTROLLER\r\n          // @see b2Controller list\r\n          for (let controller = this.m_controllerList; controller; controller = controller.m_next) {\r\n              controller.Step(step);\r\n          }\r\n          // #endif\r\n          this.m_profile.solveInit = 0;\r\n          this.m_profile.solveVelocity = 0;\r\n          this.m_profile.solvePosition = 0;\r\n          // Size the island for the worst case.\r\n          const island = this.m_island;\r\n          island.Initialize(this.m_bodyCount, this.m_contactManager.m_contactCount, this.m_jointCount, null, // this.m_stackAllocator,\r\n          this.m_contactManager.m_contactListener);\r\n          // Clear all the island flags.\r\n          for (let b = this.m_bodyList; b; b = b.m_next) {\r\n              b.m_islandFlag = false;\r\n          }\r\n          for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n              c.m_islandFlag = false;\r\n          }\r\n          for (let j = this.m_jointList; j; j = j.m_next) {\r\n              j.m_islandFlag = false;\r\n          }\r\n          // Build and simulate all awake islands.\r\n          // DEBUG: const stackSize: number = this.m_bodyCount;\r\n          const stack = this.s_stack;\r\n          for (let seed = this.m_bodyList; seed; seed = seed.m_next) {\r\n              if (seed.m_islandFlag) {\r\n                  continue;\r\n              }\r\n              if (!seed.IsAwake() || !seed.IsActive()) {\r\n                  continue;\r\n              }\r\n              // The seed can be dynamic or kinematic.\r\n              if (seed.GetType() === exports.b2BodyType.b2_staticBody) {\r\n                  continue;\r\n              }\r\n              // Reset island and stack.\r\n              island.Clear();\r\n              let stackCount = 0;\r\n              stack[stackCount++] = seed;\r\n              seed.m_islandFlag = true;\r\n              // Perform a depth first search (DFS) on the constraint graph.\r\n              while (stackCount > 0) {\r\n                  // Grab the next body off the stack and add it to the island.\r\n                  const b = stack[--stackCount];\r\n                  if (!b) {\r\n                      throw new Error();\r\n                  }\r\n                  // DEBUG: b2Assert(b.IsActive());\r\n                  island.AddBody(b);\r\n                  // Make sure the body is awake. (without resetting sleep timer).\r\n                  b.m_awakeFlag = true;\r\n                  // To keep islands as small as possible, we don't\r\n                  // propagate islands across static bodies.\r\n                  if (b.GetType() === exports.b2BodyType.b2_staticBody) {\r\n                      continue;\r\n                  }\r\n                  // Search all contacts connected to this body.\r\n                  for (let ce = b.m_contactList; ce; ce = ce.next) {\r\n                      const contact = ce.contact;\r\n                      // Has this contact already been added to an island?\r\n                      if (contact.m_islandFlag) {\r\n                          continue;\r\n                      }\r\n                      // Is this contact solid and touching?\r\n                      if (!contact.IsEnabled() || !contact.IsTouching()) {\r\n                          continue;\r\n                      }\r\n                      // Skip sensors.\r\n                      const sensorA = contact.m_fixtureA.m_isSensor;\r\n                      const sensorB = contact.m_fixtureB.m_isSensor;\r\n                      if (sensorA || sensorB) {\r\n                          continue;\r\n                      }\r\n                      island.AddContact(contact);\r\n                      contact.m_islandFlag = true;\r\n                      const other = ce.other;\r\n                      if (!other) {\r\n                          throw new Error();\r\n                      }\r\n                      // Was the other body already added to this island?\r\n                      if (other.m_islandFlag) {\r\n                          continue;\r\n                      }\r\n                      // DEBUG: b2Assert(stackCount < stackSize);\r\n                      stack[stackCount++] = other;\r\n                      other.m_islandFlag = true;\r\n                  }\r\n                  // Search all joints connect to this body.\r\n                  for (let je = b.m_jointList; je; je = je.next) {\r\n                      if (je.joint.m_islandFlag) {\r\n                          continue;\r\n                      }\r\n                      const other = je.other;\r\n                      // Don't simulate joints connected to inactive bodies.\r\n                      if (!other.IsActive()) {\r\n                          continue;\r\n                      }\r\n                      island.AddJoint(je.joint);\r\n                      je.joint.m_islandFlag = true;\r\n                      if (other.m_islandFlag) {\r\n                          continue;\r\n                      }\r\n                      // DEBUG: b2Assert(stackCount < stackSize);\r\n                      stack[stackCount++] = other;\r\n                      other.m_islandFlag = true;\r\n                  }\r\n              }\r\n              const profile = new b2Profile();\r\n              island.Solve(profile, step, this.m_gravity, this.m_allowSleep);\r\n              this.m_profile.solveInit += profile.solveInit;\r\n              this.m_profile.solveVelocity += profile.solveVelocity;\r\n              this.m_profile.solvePosition += profile.solvePosition;\r\n              // Post solve cleanup.\r\n              for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                  // Allow static bodies to participate in other islands.\r\n                  const b = island.m_bodies[i];\r\n                  if (b.GetType() === exports.b2BodyType.b2_staticBody) {\r\n                      b.m_islandFlag = false;\r\n                  }\r\n              }\r\n          }\r\n          for (let i = 0; i < stack.length; ++i) {\r\n              if (!stack[i]) {\r\n                  break;\r\n              }\r\n              stack[i] = null;\r\n          }\r\n          const timer = new b2Timer();\r\n          // Synchronize fixtures, check for out of range bodies.\r\n          for (let b = this.m_bodyList; b; b = b.m_next) {\r\n              // If a body was not in an island then it did not move.\r\n              if (!b.m_islandFlag) {\r\n                  continue;\r\n              }\r\n              if (b.GetType() === exports.b2BodyType.b2_staticBody) {\r\n                  continue;\r\n              }\r\n              // Update fixtures (for broad-phase).\r\n              b.SynchronizeFixtures();\r\n          }\r\n          // Look for new contacts.\r\n          this.m_contactManager.FindNewContacts();\r\n          this.m_profile.broadphase = timer.GetMilliseconds();\r\n      }\r\n      SolveTOI(step) {\r\n          // b2Island island(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, &m_stackAllocator, m_contactManager.m_contactListener);\r\n          const island = this.m_island;\r\n          island.Initialize(2 * b2_maxTOIContacts, b2_maxTOIContacts, 0, null, this.m_contactManager.m_contactListener);\r\n          if (this.m_stepComplete) {\r\n              for (let b = this.m_bodyList; b; b = b.m_next) {\r\n                  b.m_islandFlag = false;\r\n                  b.m_sweep.alpha0 = 0;\r\n              }\r\n              for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                  // Invalidate TOI\r\n                  c.m_toiFlag = false;\r\n                  c.m_islandFlag = false;\r\n                  c.m_toiCount = 0;\r\n                  c.m_toi = 1;\r\n              }\r\n          }\r\n          // Find TOI events and solve them.\r\n          for (;;) {\r\n              // Find the first TOI.\r\n              let minContact = null;\r\n              let minAlpha = 1;\r\n              for (let c = this.m_contactManager.m_contactList; c; c = c.m_next) {\r\n                  // Is this contact disabled?\r\n                  if (!c.IsEnabled()) {\r\n                      continue;\r\n                  }\r\n                  // Prevent excessive sub-stepping.\r\n                  if (c.m_toiCount > b2_maxSubSteps) {\r\n                      continue;\r\n                  }\r\n                  let alpha = 1;\r\n                  if (c.m_toiFlag) {\r\n                      // This contact has a valid cached TOI.\r\n                      alpha = c.m_toi;\r\n                  }\r\n                  else {\r\n                      const fA = c.GetFixtureA();\r\n                      const fB = c.GetFixtureB();\r\n                      // Is there a sensor?\r\n                      if (fA.IsSensor() || fB.IsSensor()) {\r\n                          continue;\r\n                      }\r\n                      const bA = fA.GetBody();\r\n                      const bB = fB.GetBody();\r\n                      const typeA = bA.m_type;\r\n                      const typeB = bB.m_type;\r\n                      // DEBUG: b2Assert(typeA !== b2BodyType.b2_staticBody || typeB !== b2BodyType.b2_staticBody);\r\n                      const activeA = bA.IsAwake() && typeA !== exports.b2BodyType.b2_staticBody;\r\n                      const activeB = bB.IsAwake() && typeB !== exports.b2BodyType.b2_staticBody;\r\n                      // Is at least one body active (awake and dynamic or kinematic)?\r\n                      if (!activeA && !activeB) {\r\n                          continue;\r\n                      }\r\n                      const collideA = bA.IsBullet() || typeA !== exports.b2BodyType.b2_dynamicBody;\r\n                      const collideB = bB.IsBullet() || typeB !== exports.b2BodyType.b2_dynamicBody;\r\n                      // Are these two non-bullet dynamic bodies?\r\n                      if (!collideA && !collideB) {\r\n                          continue;\r\n                      }\r\n                      // Compute the TOI for this contact.\r\n                      // Put the sweeps onto the same time interval.\r\n                      let alpha0 = bA.m_sweep.alpha0;\r\n                      if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\r\n                          alpha0 = bB.m_sweep.alpha0;\r\n                          bA.m_sweep.Advance(alpha0);\r\n                      }\r\n                      else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\r\n                          alpha0 = bA.m_sweep.alpha0;\r\n                          bB.m_sweep.Advance(alpha0);\r\n                      }\r\n                      // DEBUG: b2Assert(alpha0 < 1);\r\n                      const indexA = c.GetChildIndexA();\r\n                      const indexB = c.GetChildIndexB();\r\n                      // Compute the time of impact in interval [0, minTOI]\r\n                      const input = b2World.SolveTOI_s_toi_input;\r\n                      input.proxyA.SetShape(fA.GetShape(), indexA);\r\n                      input.proxyB.SetShape(fB.GetShape(), indexB);\r\n                      input.sweepA.Copy(bA.m_sweep);\r\n                      input.sweepB.Copy(bB.m_sweep);\r\n                      input.tMax = 1;\r\n                      const output = b2World.SolveTOI_s_toi_output;\r\n                      b2TimeOfImpact(output, input);\r\n                      // Beta is the fraction of the remaining portion of the .\r\n                      const beta = output.t;\r\n                      if (output.state === exports.b2TOIOutputState.e_touching) {\r\n                          alpha = b2Min(alpha0 + (1 - alpha0) * beta, 1);\r\n                      }\r\n                      else {\r\n                          alpha = 1;\r\n                      }\r\n                      c.m_toi = alpha;\r\n                      c.m_toiFlag = true;\r\n                  }\r\n                  if (alpha < minAlpha) {\r\n                      // This is the minimum TOI found so far.\r\n                      minContact = c;\r\n                      minAlpha = alpha;\r\n                  }\r\n              }\r\n              if (minContact === null || 1 - 10 * b2_epsilon < minAlpha) {\r\n                  // No more TOI events. Done!\r\n                  this.m_stepComplete = true;\r\n                  break;\r\n              }\r\n              // Advance the bodies to the TOI.\r\n              const fA = minContact.GetFixtureA();\r\n              const fB = minContact.GetFixtureB();\r\n              const bA = fA.GetBody();\r\n              const bB = fB.GetBody();\r\n              const backup1 = b2World.SolveTOI_s_backup1.Copy(bA.m_sweep);\r\n              const backup2 = b2World.SolveTOI_s_backup2.Copy(bB.m_sweep);\r\n              bA.Advance(minAlpha);\r\n              bB.Advance(minAlpha);\r\n              // The TOI contact likely has some new contact points.\r\n              minContact.Update(this.m_contactManager.m_contactListener);\r\n              minContact.m_toiFlag = false;\r\n              ++minContact.m_toiCount;\r\n              // Is the contact solid?\r\n              if (!minContact.IsEnabled() || !minContact.IsTouching()) {\r\n                  // Restore the sweeps.\r\n                  minContact.SetEnabled(false);\r\n                  bA.m_sweep.Copy(backup1);\r\n                  bB.m_sweep.Copy(backup2);\r\n                  bA.SynchronizeTransform();\r\n                  bB.SynchronizeTransform();\r\n                  continue;\r\n              }\r\n              bA.SetAwake(true);\r\n              bB.SetAwake(true);\r\n              // Build the island\r\n              island.Clear();\r\n              island.AddBody(bA);\r\n              island.AddBody(bB);\r\n              island.AddContact(minContact);\r\n              bA.m_islandFlag = true;\r\n              bB.m_islandFlag = true;\r\n              minContact.m_islandFlag = true;\r\n              // Get contacts on bodyA and bodyB.\r\n              // const bodies: b2Body[] = [bA, bB];\r\n              for (let i = 0; i < 2; ++i) {\r\n                  const body = (i === 0) ? (bA) : (bB); // bodies[i];\r\n                  if (body.m_type === exports.b2BodyType.b2_dynamicBody) {\r\n                      for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                          if (island.m_bodyCount === island.m_bodyCapacity) {\r\n                              break;\r\n                          }\r\n                          if (island.m_contactCount === island.m_contactCapacity) {\r\n                              break;\r\n                          }\r\n                          const contact = ce.contact;\r\n                          // Has this contact already been added to the island?\r\n                          if (contact.m_islandFlag) {\r\n                              continue;\r\n                          }\r\n                          // Only add static, kinematic, or bullet bodies.\r\n                          const other = ce.other;\r\n                          if (other.m_type === exports.b2BodyType.b2_dynamicBody &&\r\n                              !body.IsBullet() && !other.IsBullet()) {\r\n                              continue;\r\n                          }\r\n                          // Skip sensors.\r\n                          const sensorA = contact.m_fixtureA.m_isSensor;\r\n                          const sensorB = contact.m_fixtureB.m_isSensor;\r\n                          if (sensorA || sensorB) {\r\n                              continue;\r\n                          }\r\n                          // Tentatively advance the body to the TOI.\r\n                          const backup = b2World.SolveTOI_s_backup.Copy(other.m_sweep);\r\n                          if (!other.m_islandFlag) {\r\n                              other.Advance(minAlpha);\r\n                          }\r\n                          // Update the contact points\r\n                          contact.Update(this.m_contactManager.m_contactListener);\r\n                          // Was the contact disabled by the user?\r\n                          if (!contact.IsEnabled()) {\r\n                              other.m_sweep.Copy(backup);\r\n                              other.SynchronizeTransform();\r\n                              continue;\r\n                          }\r\n                          // Are there contact points?\r\n                          if (!contact.IsTouching()) {\r\n                              other.m_sweep.Copy(backup);\r\n                              other.SynchronizeTransform();\r\n                              continue;\r\n                          }\r\n                          // Add the contact to the island\r\n                          contact.m_islandFlag = true;\r\n                          island.AddContact(contact);\r\n                          // Has the other body already been added to the island?\r\n                          if (other.m_islandFlag) {\r\n                              continue;\r\n                          }\r\n                          // Add the other body to the island.\r\n                          other.m_islandFlag = true;\r\n                          if (other.m_type !== exports.b2BodyType.b2_staticBody) {\r\n                              other.SetAwake(true);\r\n                          }\r\n                          island.AddBody(other);\r\n                      }\r\n                  }\r\n              }\r\n              const subStep = b2World.SolveTOI_s_subStep;\r\n              subStep.dt = (1 - minAlpha) * step.dt;\r\n              subStep.inv_dt = 1 / subStep.dt;\r\n              subStep.dtRatio = 1;\r\n              subStep.positionIterations = 20;\r\n              subStep.velocityIterations = step.velocityIterations;\r\n              // #if B2_ENABLE_PARTICLE\r\n              subStep.particleIterations = step.particleIterations;\r\n              // #endif\r\n              subStep.warmStarting = false;\r\n              island.SolveTOI(subStep, bA.m_islandIndex, bB.m_islandIndex);\r\n              // Reset island flags and synchronize broad-phase proxies.\r\n              for (let i = 0; i < island.m_bodyCount; ++i) {\r\n                  const body = island.m_bodies[i];\r\n                  body.m_islandFlag = false;\r\n                  if (body.m_type !== exports.b2BodyType.b2_dynamicBody) {\r\n                      continue;\r\n                  }\r\n                  body.SynchronizeFixtures();\r\n                  // Invalidate all contact TOIs on this displaced body.\r\n                  for (let ce = body.m_contactList; ce; ce = ce.next) {\r\n                      ce.contact.m_toiFlag = false;\r\n                      ce.contact.m_islandFlag = false;\r\n                  }\r\n              }\r\n              // Commit fixture proxy movements to the broad-phase so that new contacts are created.\r\n              // Also, some contacts can be destroyed.\r\n              this.m_contactManager.FindNewContacts();\r\n              if (this.m_subStepping) {\r\n                  this.m_stepComplete = false;\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n      // #if B2_ENABLE_CONTROLLER\r\n      AddController(controller) {\r\n          // b2Assert(controller.m_world === null, \"Controller can only be a member of one world\");\r\n          // controller.m_world = this;\r\n          controller.m_next = this.m_controllerList;\r\n          controller.m_prev = null;\r\n          if (this.m_controllerList) {\r\n              this.m_controllerList.m_prev = controller;\r\n          }\r\n          this.m_controllerList = controller;\r\n          ++this.m_controllerCount;\r\n          return controller;\r\n      }\r\n      RemoveController(controller) {\r\n          // b2Assert(controller.m_world === this, \"Controller is not a member of this world\");\r\n          if (controller.m_prev) {\r\n              controller.m_prev.m_next = controller.m_next;\r\n          }\r\n          if (controller.m_next) {\r\n              controller.m_next.m_prev = controller.m_prev;\r\n          }\r\n          if (this.m_controllerList === controller) {\r\n              this.m_controllerList = controller.m_next;\r\n          }\r\n          --this.m_controllerCount;\r\n          controller.m_prev = null;\r\n          controller.m_next = null;\r\n          // delete controller.m_world; // = null;\r\n          return controller;\r\n      }\r\n  }\r\n  // #endif\r\n  /// Take a time step. This performs collision detection, integration,\r\n  /// and constraint solution.\r\n  /// @param timeStep the amount of time to simulate, this should not vary.\r\n  /// @param velocityIterations for the velocity constraint solver.\r\n  /// @param positionIterations for the position constraint solver.\r\n  b2World.Step_s_step = new b2TimeStep();\r\n  b2World.Step_s_stepTimer = new b2Timer();\r\n  b2World.Step_s_timer = new b2Timer();\r\n  // #endif\r\n  /// Call this to draw shapes and other debug draw data.\r\n  b2World.DrawDebugData_s_color = new b2Color(0, 0, 0);\r\n  b2World.DrawDebugData_s_vs = b2Vec2.MakeArray(4);\r\n  b2World.DrawDebugData_s_xf = new b2Transform();\r\n  b2World.QueryFixtureShape_s_aabb = new b2AABB();\r\n  /// Ray-cast the world for all fixtures in the path of the ray. Your callback\r\n  /// controls whether you get the closest point, any point, or n-points.\r\n  /// The ray-cast ignores shapes that contain the starting point.\r\n  /// @param callback a user implemented callback class.\r\n  /// @param point1 the ray starting point\r\n  /// @param point2 the ray ending point\r\n  b2World.RayCast_s_input = new b2RayCastInput();\r\n  b2World.RayCast_s_output = new b2RayCastOutput();\r\n  b2World.RayCast_s_point = new b2Vec2();\r\n  b2World.DrawJoint_s_p1 = new b2Vec2();\r\n  b2World.DrawJoint_s_p2 = new b2Vec2();\r\n  b2World.DrawJoint_s_color = new b2Color(0.5, 0.8, 0.8);\r\n  b2World.DrawJoint_s_c = new b2Color();\r\n  b2World.DrawShape_s_ghostColor = new b2Color();\r\n  b2World.SolveTOI_s_subStep = new b2TimeStep();\r\n  b2World.SolveTOI_s_backup = new b2Sweep();\r\n  b2World.SolveTOI_s_backup1 = new b2Sweep();\r\n  b2World.SolveTOI_s_backup2 = new b2Sweep();\r\n  b2World.SolveTOI_s_toi_input = new b2TOIInput();\r\n  b2World.SolveTOI_s_toi_output = new b2TOIOutput();\r\n\r\n  /*\r\n   * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  /**\r\n   * A controller edge is used to connect bodies and controllers\r\n   * together in a bipartite graph.\r\n   */\r\n  class b2ControllerEdge {\r\n      constructor(controller, body) {\r\n          this.prevBody = null; ///< the previous controller edge in the controllers's joint list\r\n          this.nextBody = null; ///< the next controller edge in the controllers's joint list\r\n          this.prevController = null; ///< the previous controller edge in the body's joint list\r\n          this.nextController = null; ///< the next controller edge in the body's joint list\r\n          this.controller = controller;\r\n          this.body = body;\r\n      }\r\n  }\r\n  /**\r\n   * Base class for controllers. Controllers are a convience for\r\n   * encapsulating common per-step functionality.\r\n   */\r\n  class b2Controller {\r\n      constructor() {\r\n          // m_world: b2World;\r\n          this.m_bodyList = null;\r\n          this.m_bodyCount = 0;\r\n          this.m_prev = null;\r\n          this.m_next = null;\r\n      }\r\n      /**\r\n       * Get the next controller in the world's body list.\r\n       */\r\n      GetNext() {\r\n          return this.m_next;\r\n      }\r\n      /**\r\n       * Get the previous controller in the world's body list.\r\n       */\r\n      GetPrev() {\r\n          return this.m_prev;\r\n      }\r\n      /**\r\n       * Get the parent world of this body.\r\n       */\r\n      // GetWorld() {\r\n      //   return this.m_world;\r\n      // }\r\n      /**\r\n       * Get the attached body list\r\n       */\r\n      GetBodyList() {\r\n          return this.m_bodyList;\r\n      }\r\n      /**\r\n       * Adds a body to the controller list.\r\n       */\r\n      AddBody(body) {\r\n          const edge = new b2ControllerEdge(this, body);\r\n          //Add edge to controller list\r\n          edge.nextBody = this.m_bodyList;\r\n          edge.prevBody = null;\r\n          if (this.m_bodyList) {\r\n              this.m_bodyList.prevBody = edge;\r\n          }\r\n          this.m_bodyList = edge;\r\n          ++this.m_bodyCount;\r\n          //Add edge to body list\r\n          edge.nextController = body.m_controllerList;\r\n          edge.prevController = null;\r\n          if (body.m_controllerList) {\r\n              body.m_controllerList.prevController = edge;\r\n          }\r\n          body.m_controllerList = edge;\r\n          ++body.m_controllerCount;\r\n      }\r\n      /**\r\n       * Removes a body from the controller list.\r\n       */\r\n      RemoveBody(body) {\r\n          //Assert that the controller is not empty\r\n          if (this.m_bodyCount <= 0) {\r\n              throw new Error();\r\n          }\r\n          //Find the corresponding edge\r\n          /*b2ControllerEdge*/\r\n          let edge = this.m_bodyList;\r\n          while (edge && edge.body !== body) {\r\n              edge = edge.nextBody;\r\n          }\r\n          //Assert that we are removing a body that is currently attached to the controller\r\n          if (edge === null) {\r\n              throw new Error();\r\n          }\r\n          //Remove edge from controller list\r\n          if (edge.prevBody) {\r\n              edge.prevBody.nextBody = edge.nextBody;\r\n          }\r\n          if (edge.nextBody) {\r\n              edge.nextBody.prevBody = edge.prevBody;\r\n          }\r\n          if (this.m_bodyList === edge) {\r\n              this.m_bodyList = edge.nextBody;\r\n          }\r\n          --this.m_bodyCount;\r\n          //Remove edge from body list\r\n          if (edge.nextController) {\r\n              edge.nextController.prevController = edge.prevController;\r\n          }\r\n          if (edge.prevController) {\r\n              edge.prevController.nextController = edge.nextController;\r\n          }\r\n          if (body.m_controllerList === edge) {\r\n              body.m_controllerList = edge.nextController;\r\n          }\r\n          --body.m_controllerCount;\r\n      }\r\n      /**\r\n       * Removes all bodies from the controller list.\r\n       */\r\n      Clear() {\r\n          while (this.m_bodyList) {\r\n              this.RemoveBody(this.m_bodyList.body);\r\n          }\r\n          this.m_bodyCount = 0;\r\n      }\r\n  }\r\n  // #endif\r\n\r\n  /*\r\n   * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  /**\r\n   * Calculates buoyancy forces for fluids in the form of a half\r\n   * plane.\r\n   */\r\n  class b2BuoyancyController extends b2Controller {\r\n      constructor() {\r\n          super(...arguments);\r\n          /**\r\n           * The outer surface normal\r\n           */\r\n          this.normal = new b2Vec2(0, 1);\r\n          /**\r\n           * The height of the fluid surface along the normal\r\n           */\r\n          this.offset = 0;\r\n          /**\r\n           * The fluid density\r\n           */\r\n          this.density = 0;\r\n          /**\r\n           * Fluid velocity, for drag calculations\r\n           */\r\n          this.velocity = new b2Vec2(0, 0);\r\n          /**\r\n           * Linear drag co-efficient\r\n           */\r\n          this.linearDrag = 0;\r\n          /**\r\n           * Angular drag co-efficient\r\n           */\r\n          this.angularDrag = 0;\r\n          /**\r\n           * If false, bodies are assumed to be uniformly dense, otherwise\r\n           * use the shapes densities\r\n           */\r\n          this.useDensity = false; //False by default to prevent a gotcha\r\n          /**\r\n           * If true, gravity is taken from the world instead of the\r\n           */\r\n          this.useWorldGravity = true;\r\n          /**\r\n           * Gravity vector, if the world's gravity is not used\r\n           */\r\n          this.gravity = new b2Vec2(0, 0);\r\n      }\r\n      Step(step) {\r\n          if (!this.m_bodyList) {\r\n              return;\r\n          }\r\n          if (this.useWorldGravity) {\r\n              this.gravity.Copy(this.m_bodyList.body.GetWorld().GetGravity());\r\n          }\r\n          for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n              const body = i.body;\r\n              if (!body.IsAwake()) {\r\n                  //Buoyancy force is just a function of position,\r\n                  //so unlike most forces, it is safe to ignore sleeping bodes\r\n                  continue;\r\n              }\r\n              const areac = new b2Vec2();\r\n              const massc = new b2Vec2();\r\n              let area = 0;\r\n              let mass = 0;\r\n              for (let fixture = body.GetFixtureList(); fixture; fixture = fixture.m_next) {\r\n                  const sc = new b2Vec2();\r\n                  const sarea = fixture.GetShape().ComputeSubmergedArea(this.normal, this.offset, body.GetTransform(), sc);\r\n                  area += sarea;\r\n                  areac.x += sarea * sc.x;\r\n                  areac.y += sarea * sc.y;\r\n                  let shapeDensity = 0;\r\n                  if (this.useDensity) {\r\n                      //TODO: Expose density publicly\r\n                      shapeDensity = fixture.GetDensity();\r\n                  }\r\n                  else {\r\n                      shapeDensity = 1;\r\n                  }\r\n                  mass += sarea * shapeDensity;\r\n                  massc.x += sarea * sc.x * shapeDensity;\r\n                  massc.y += sarea * sc.y * shapeDensity;\r\n              }\r\n              areac.x /= area;\r\n              areac.y /= area;\r\n              //    b2Vec2 localCentroid = b2MulT(body->GetXForm(),areac);\r\n              massc.x /= mass;\r\n              massc.y /= mass;\r\n              if (area < b2_epsilon) {\r\n                  continue;\r\n              }\r\n              //Buoyancy\r\n              const buoyancyForce = this.gravity.Clone().SelfNeg();\r\n              buoyancyForce.SelfMul(this.density * area);\r\n              body.ApplyForce(buoyancyForce, massc);\r\n              //Linear drag\r\n              const dragForce = body.GetLinearVelocityFromWorldPoint(areac, new b2Vec2());\r\n              dragForce.SelfSub(this.velocity);\r\n              dragForce.SelfMul((-this.linearDrag * area));\r\n              body.ApplyForce(dragForce, areac);\r\n              //Angular drag\r\n              //TODO: Something that makes more physical sense?\r\n              body.ApplyTorque((-body.GetInertia() / body.GetMass() * area * body.GetAngularVelocity() * this.angularDrag));\r\n          }\r\n      }\r\n      Draw(debugDraw) {\r\n          const r = 100;\r\n          const p1 = new b2Vec2();\r\n          const p2 = new b2Vec2();\r\n          p1.x = this.normal.x * this.offset + this.normal.y * r;\r\n          p1.y = this.normal.y * this.offset - this.normal.x * r;\r\n          p2.x = this.normal.x * this.offset - this.normal.y * r;\r\n          p2.y = this.normal.y * this.offset + this.normal.x * r;\r\n          const color = new b2Color(0, 0, 0.8);\r\n          debugDraw.DrawSegment(p1, p2, color);\r\n      }\r\n  }\r\n  // #endif\r\n\r\n  /*\r\n   * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  /**\r\n   * Applies a force every frame\r\n   */\r\n  class b2ConstantAccelController extends b2Controller {\r\n      constructor() {\r\n          super(...arguments);\r\n          /**\r\n           * The acceleration to apply\r\n           */\r\n          this.A = new b2Vec2(0, 0);\r\n      }\r\n      Step(step) {\r\n          const dtA = b2Vec2.MulSV(step.dt, this.A, b2ConstantAccelController.Step_s_dtA);\r\n          for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n              const body = i.body;\r\n              if (!body.IsAwake()) {\r\n                  continue;\r\n              }\r\n              body.SetLinearVelocity(b2Vec2.AddVV(body.GetLinearVelocity(), dtA, b2Vec2.s_t0));\r\n          }\r\n      }\r\n      Draw(draw) { }\r\n  }\r\n  b2ConstantAccelController.Step_s_dtA = new b2Vec2();\r\n  // #endif\r\n\r\n  /*\r\n   * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  /**\r\n   * Applies a force every frame\r\n   */\r\n  class b2ConstantForceController extends b2Controller {\r\n      constructor() {\r\n          super(...arguments);\r\n          /**\r\n           * The force to apply\r\n           */\r\n          this.F = new b2Vec2(0, 0);\r\n      }\r\n      Step(step) {\r\n          for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n              const body = i.body;\r\n              if (!body.IsAwake()) {\r\n                  continue;\r\n              }\r\n              body.ApplyForce(this.F, body.GetWorldCenter());\r\n          }\r\n      }\r\n      Draw(draw) { }\r\n  }\r\n  // #endif\r\n\r\n  /*\r\n   * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  /**\r\n   * Applies simplified gravity between every pair of bodies\r\n   */\r\n  class b2GravityController extends b2Controller {\r\n      constructor() {\r\n          super(...arguments);\r\n          /**\r\n           * Specifies the strength of the gravitiation force\r\n           */\r\n          this.G = 1;\r\n          /**\r\n           * If true, gravity is proportional to r^-2, otherwise r^-1\r\n           */\r\n          this.invSqr = true;\r\n      }\r\n      /**\r\n       * @see b2Controller::Step\r\n       */\r\n      Step(step) {\r\n          if (this.invSqr) {\r\n              for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n                  const body1 = i.body;\r\n                  const p1 = body1.GetWorldCenter();\r\n                  const mass1 = body1.GetMass();\r\n                  for (let j = this.m_bodyList; j && j !== i; j = j.nextBody) {\r\n                      const body2 = j.body;\r\n                      const p2 = body2.GetWorldCenter();\r\n                      const mass2 = body2.GetMass();\r\n                      const dx = p2.x - p1.x;\r\n                      const dy = p2.y - p1.y;\r\n                      const r2 = dx * dx + dy * dy;\r\n                      if (r2 < b2_epsilon) {\r\n                          continue;\r\n                      }\r\n                      const f = b2GravityController.Step_s_f.Set(dx, dy);\r\n                      f.SelfMul(this.G / r2 / b2Sqrt(r2) * mass1 * mass2);\r\n                      if (body1.IsAwake()) {\r\n                          body1.ApplyForce(f, p1);\r\n                      }\r\n                      if (body2.IsAwake()) {\r\n                          body2.ApplyForce(f.SelfMul(-1), p2);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          else {\r\n              for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n                  const body1 = i.body;\r\n                  const p1 = body1.GetWorldCenter();\r\n                  const mass1 = body1.GetMass();\r\n                  for (let j = this.m_bodyList; j && j !== i; j = j.nextBody) {\r\n                      const body2 = j.body;\r\n                      const p2 = body2.GetWorldCenter();\r\n                      const mass2 = body2.GetMass();\r\n                      const dx = p2.x - p1.x;\r\n                      const dy = p2.y - p1.y;\r\n                      const r2 = dx * dx + dy * dy;\r\n                      if (r2 < b2_epsilon) {\r\n                          continue;\r\n                      }\r\n                      const f = b2GravityController.Step_s_f.Set(dx, dy);\r\n                      f.SelfMul(this.G / r2 * mass1 * mass2);\r\n                      if (body1.IsAwake()) {\r\n                          body1.ApplyForce(f, p1);\r\n                      }\r\n                      if (body2.IsAwake()) {\r\n                          body2.ApplyForce(f.SelfMul(-1), p2);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      Draw(draw) { }\r\n  }\r\n  b2GravityController.Step_s_f = new b2Vec2();\r\n  // #endif\r\n\r\n  /*\r\n   * Copyright (c) 2006-2007 Erin Catto http://www.box2d.org\r\n   *\r\n   * This software is provided 'as-is', without any express or implied\r\n   * warranty.  In no event will the authors be held liable for any damages\r\n   * arising from the use of this software.\r\n   * Permission is granted to anyone to use this software for any purpose,\r\n   * including commercial applications, and to alter it and redistribute it\r\n   * freely, subject to the following restrictions:\r\n   * 1. The origin of this software must not be misrepresented; you must not\r\n   * claim that you wrote the original software. If you use this software\r\n   * in a product, an acknowledgment in the product documentation would be\r\n   * appreciated but is not required.\r\n   * 2. Altered source versions must be plainly marked as such, and must not be\r\n   * misrepresented as being the original software.\r\n   * 3. This notice may not be removed or altered from any source distribution.\r\n   */\r\n  /**\r\n   * Applies top down linear damping to the controlled bodies\r\n   * The damping is calculated by multiplying velocity by a matrix\r\n   * in local co-ordinates.\r\n   */\r\n  class b2TensorDampingController extends b2Controller {\r\n      constructor() {\r\n          super(...arguments);\r\n          /// Tensor to use in damping model\r\n          this.T = new b2Mat22();\r\n          /*Some examples (matrixes in format (row1; row2))\r\n          (-a 0; 0 -a)    Standard isotropic damping with strength a\r\n          ( 0 a; -a 0)    Electron in fixed field - a force at right angles to velocity with proportional magnitude\r\n          (-a 0; 0 -b)    Differing x and y damping. Useful e.g. for top-down wheels.\r\n          */\r\n          //By the way, tensor in this case just means matrix, don't let the terminology get you down.\r\n          /// Set this to a positive number to clamp the maximum amount of damping done.\r\n          this.maxTimestep = 0;\r\n      }\r\n      // Typically one wants maxTimestep to be 1/(max eigenvalue of T), so that damping will never cause something to reverse direction\r\n      /**\r\n       * @see b2Controller::Step\r\n       */\r\n      Step(step) {\r\n          let timestep = step.dt;\r\n          if (timestep <= b2_epsilon) {\r\n              return;\r\n          }\r\n          if (timestep > this.maxTimestep && this.maxTimestep > 0) {\r\n              timestep = this.maxTimestep;\r\n          }\r\n          for (let i = this.m_bodyList; i; i = i.nextBody) {\r\n              const body = i.body;\r\n              if (!body.IsAwake()) {\r\n                  continue;\r\n              }\r\n              const damping = body.GetWorldVector(b2Mat22.MulMV(this.T, body.GetLocalVector(body.GetLinearVelocity(), b2Vec2.s_t0), b2Vec2.s_t1), b2TensorDampingController.Step_s_damping);\r\n              //    body->SetLinearVelocity(body->GetLinearVelocity() + timestep * damping);\r\n              body.SetLinearVelocity(b2Vec2.AddVV(body.GetLinearVelocity(), b2Vec2.MulSV(timestep, damping, b2Vec2.s_t0), b2Vec2.s_t1));\r\n          }\r\n      }\r\n      Draw(draw) { }\r\n      /**\r\n       * Sets damping independantly along the x and y axes\r\n       */\r\n      SetAxisAligned(xDamping, yDamping) {\r\n          this.T.ex.x = (-xDamping);\r\n          this.T.ex.y = 0;\r\n          this.T.ey.x = 0;\r\n          this.T.ey.y = (-yDamping);\r\n          if (xDamping > 0 || yDamping > 0) {\r\n              this.maxTimestep = 1 / b2Max(xDamping, yDamping);\r\n          }\r\n          else {\r\n              this.maxTimestep = 0;\r\n          }\r\n      }\r\n  }\r\n  b2TensorDampingController.Step_s_damping = new b2Vec2();\r\n  // #endif\r\n\r\n  /*\r\n  * Copyright (c) 2011 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n  ///\r\n  class b2RopeDef {\r\n      constructor() {\r\n          ///\r\n          this.vertices = [];\r\n          ///\r\n          this.count = 0;\r\n          ///\r\n          this.masses = [];\r\n          ///\r\n          this.gravity = new b2Vec2(0, 0);\r\n          ///\r\n          this.damping = 0.1;\r\n          /// Stretching stiffness\r\n          this.k2 = 0.9;\r\n          /// Bending stiffness. Values above 0.5 can make the simulation blow up.\r\n          this.k3 = 0.1;\r\n      }\r\n  }\r\n  ///\r\n  class b2Rope {\r\n      constructor() {\r\n          this.m_count = 0;\r\n          this.m_ps = [];\r\n          this.m_p0s = [];\r\n          this.m_vs = [];\r\n          this.m_ims = [];\r\n          this.m_Ls = [];\r\n          this.m_as = [];\r\n          this.m_gravity = new b2Vec2();\r\n          this.m_damping = 0;\r\n          this.m_k2 = 1;\r\n          this.m_k3 = 0.1;\r\n      }\r\n      GetVertexCount() {\r\n          return this.m_count;\r\n      }\r\n      GetVertices() {\r\n          return this.m_ps;\r\n      }\r\n      ///\r\n      Initialize(def) {\r\n          // DEBUG: b2Assert(def.count >= 3);\r\n          this.m_count = def.count;\r\n          // this.m_ps = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n          this.m_ps = b2Vec2.MakeArray(this.m_count);\r\n          // this.m_p0s = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n          this.m_p0s = b2Vec2.MakeArray(this.m_count);\r\n          // this.m_vs = (b2Vec2*)b2Alloc(this.m_count * sizeof(b2Vec2));\r\n          this.m_vs = b2Vec2.MakeArray(this.m_count);\r\n          // this.m_ims = (float32*)b2Alloc(this.m_count * sizeof(float32));\r\n          this.m_ims = b2MakeNumberArray(this.m_count);\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              this.m_ps[i].Copy(def.vertices[i]);\r\n              this.m_p0s[i].Copy(def.vertices[i]);\r\n              this.m_vs[i].SetZero();\r\n              const m = def.masses[i];\r\n              if (m > 0) {\r\n                  this.m_ims[i] = 1 / m;\r\n              }\r\n              else {\r\n                  this.m_ims[i] = 0;\r\n              }\r\n          }\r\n          const count2 = this.m_count - 1;\r\n          const count3 = this.m_count - 2;\r\n          // this.m_Ls = (float32*)be2Alloc(count2 * sizeof(float32));\r\n          this.m_Ls = b2MakeNumberArray(count2);\r\n          // this.m_as = (float32*)b2Alloc(count3 * sizeof(float32));\r\n          this.m_as = b2MakeNumberArray(count3);\r\n          for (let i = 0; i < count2; ++i) {\r\n              const p1 = this.m_ps[i];\r\n              const p2 = this.m_ps[i + 1];\r\n              this.m_Ls[i] = b2Vec2.DistanceVV(p1, p2);\r\n          }\r\n          for (let i = 0; i < count3; ++i) {\r\n              const p1 = this.m_ps[i];\r\n              const p2 = this.m_ps[i + 1];\r\n              const p3 = this.m_ps[i + 2];\r\n              const d1 = b2Vec2.SubVV(p2, p1, b2Vec2.s_t0);\r\n              const d2 = b2Vec2.SubVV(p3, p2, b2Vec2.s_t1);\r\n              const a = b2Vec2.CrossVV(d1, d2);\r\n              const b = b2Vec2.DotVV(d1, d2);\r\n              this.m_as[i] = b2Atan2(a, b);\r\n          }\r\n          this.m_gravity.Copy(def.gravity);\r\n          this.m_damping = def.damping;\r\n          this.m_k2 = def.k2;\r\n          this.m_k3 = def.k3;\r\n      }\r\n      ///\r\n      Step(h, iterations) {\r\n          if (h === 0) {\r\n              return;\r\n          }\r\n          const d = Math.exp(-h * this.m_damping);\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              this.m_p0s[i].Copy(this.m_ps[i]);\r\n              if (this.m_ims[i] > 0) {\r\n                  this.m_vs[i].SelfMulAdd(h, this.m_gravity);\r\n              }\r\n              this.m_vs[i].SelfMul(d);\r\n              this.m_ps[i].SelfMulAdd(h, this.m_vs[i]);\r\n          }\r\n          for (let i = 0; i < iterations; ++i) {\r\n              this.SolveC2();\r\n              this.SolveC3();\r\n              this.SolveC2();\r\n          }\r\n          const inv_h = 1 / h;\r\n          for (let i = 0; i < this.m_count; ++i) {\r\n              b2Vec2.MulSV(inv_h, b2Vec2.SubVV(this.m_ps[i], this.m_p0s[i], b2Vec2.s_t0), this.m_vs[i]);\r\n          }\r\n      }\r\n      SolveC2() {\r\n          const count2 = this.m_count - 1;\r\n          for (let i = 0; i < count2; ++i) {\r\n              const p1 = this.m_ps[i];\r\n              const p2 = this.m_ps[i + 1];\r\n              const d = b2Vec2.SubVV(p2, p1, b2Rope.s_d);\r\n              const L = d.Normalize();\r\n              const im1 = this.m_ims[i];\r\n              const im2 = this.m_ims[i + 1];\r\n              if (im1 + im2 === 0) {\r\n                  continue;\r\n              }\r\n              const s1 = im1 / (im1 + im2);\r\n              const s2 = im2 / (im1 + im2);\r\n              p1.SelfMulSub(this.m_k2 * s1 * (this.m_Ls[i] - L), d);\r\n              p2.SelfMulAdd(this.m_k2 * s2 * (this.m_Ls[i] - L), d);\r\n              // this.m_ps[i] = p1;\r\n              // this.m_ps[i + 1] = p2;\r\n          }\r\n      }\r\n      SetAngle(angle) {\r\n          const count3 = this.m_count - 2;\r\n          for (let i = 0; i < count3; ++i) {\r\n              this.m_as[i] = angle;\r\n          }\r\n      }\r\n      SolveC3() {\r\n          const count3 = this.m_count - 2;\r\n          for (let i = 0; i < count3; ++i) {\r\n              const p1 = this.m_ps[i];\r\n              const p2 = this.m_ps[i + 1];\r\n              const p3 = this.m_ps[i + 2];\r\n              const m1 = this.m_ims[i];\r\n              const m2 = this.m_ims[i + 1];\r\n              const m3 = this.m_ims[i + 2];\r\n              const d1 = b2Vec2.SubVV(p2, p1, b2Rope.s_d1);\r\n              const d2 = b2Vec2.SubVV(p3, p2, b2Rope.s_d2);\r\n              const L1sqr = d1.LengthSquared();\r\n              const L2sqr = d2.LengthSquared();\r\n              if (L1sqr * L2sqr === 0) {\r\n                  continue;\r\n              }\r\n              const a = b2Vec2.CrossVV(d1, d2);\r\n              const b = b2Vec2.DotVV(d1, d2);\r\n              let angle = b2Atan2(a, b);\r\n              const Jd1 = b2Vec2.MulSV((-1 / L1sqr), d1.SelfSkew(), b2Rope.s_Jd1);\r\n              const Jd2 = b2Vec2.MulSV((1 / L2sqr), d2.SelfSkew(), b2Rope.s_Jd2);\r\n              const J1 = b2Vec2.NegV(Jd1, b2Rope.s_J1);\r\n              const J2 = b2Vec2.SubVV(Jd1, Jd2, b2Rope.s_J2);\r\n              const J3 = Jd2;\r\n              let mass = m1 * b2Vec2.DotVV(J1, J1) + m2 * b2Vec2.DotVV(J2, J2) + m3 * b2Vec2.DotVV(J3, J3);\r\n              if (mass === 0) {\r\n                  continue;\r\n              }\r\n              mass = 1 / mass;\r\n              let C = angle - this.m_as[i];\r\n              while (C > b2_pi) {\r\n                  angle -= 2 * b2_pi;\r\n                  C = angle - this.m_as[i];\r\n              }\r\n              while (C < -b2_pi) {\r\n                  angle += 2 * b2_pi;\r\n                  C = angle - this.m_as[i];\r\n              }\r\n              const impulse = -this.m_k3 * mass * C;\r\n              p1.SelfMulAdd((m1 * impulse), J1);\r\n              p2.SelfMulAdd((m2 * impulse), J2);\r\n              p3.SelfMulAdd((m3 * impulse), J3);\r\n              // this.m_ps[i] = p1;\r\n              // this.m_ps[i + 1] = p2;\r\n              // this.m_ps[i + 2] = p3;\r\n          }\r\n      }\r\n      Draw(draw) {\r\n          const c = new b2Color(0.4, 0.5, 0.7);\r\n          for (let i = 0; i < this.m_count - 1; ++i) {\r\n              draw.DrawSegment(this.m_ps[i], this.m_ps[i + 1], c);\r\n          }\r\n      }\r\n  }\r\n  ///\r\n  b2Rope.s_d = new b2Vec2();\r\n  b2Rope.s_d1 = new b2Vec2();\r\n  b2Rope.s_d2 = new b2Vec2();\r\n  b2Rope.s_Jd1 = new b2Vec2();\r\n  b2Rope.s_Jd2 = new b2Vec2();\r\n  b2Rope.s_J1 = new b2Vec2();\r\n  b2Rope.s_J2 = new b2Vec2();\r\n\r\n  /*\r\n  * Copyright (c) 2006-2009 Erin Catto http://www.box2d.org\r\n  *\r\n  * This software is provided 'as-is', without any express or implied\r\n  * warranty.  In no event will the authors be held liable for any damages\r\n  * arising from the use of this software.\r\n  * Permission is granted to anyone to use this software for any purpose,\r\n  * including commercial applications, and to alter it and redistribute it\r\n  * freely, subject to the following restrictions:\r\n  * 1. The origin of this software must not be misrepresented; you must not\r\n  * claim that you wrote the original software. If you use this software\r\n  * in a product, an acknowledgment in the product documentation would be\r\n  * appreciated but is not required.\r\n  * 2. Altered source versions must be plainly marked as such, and must not be\r\n  * misrepresented as being the original software.\r\n  * 3. This notice may not be removed or altered from any source distribution.\r\n  */\r\n\r\n  exports.b2Assert = b2Assert;\r\n  exports.b2Maybe = b2Maybe;\r\n  exports.b2_maxFloat = b2_maxFloat;\r\n  exports.b2_epsilon = b2_epsilon;\r\n  exports.b2_epsilon_sq = b2_epsilon_sq;\r\n  exports.b2_pi = b2_pi;\r\n  exports.b2_maxManifoldPoints = b2_maxManifoldPoints;\r\n  exports.b2_maxPolygonVertices = b2_maxPolygonVertices;\r\n  exports.b2_aabbExtension = b2_aabbExtension;\r\n  exports.b2_aabbMultiplier = b2_aabbMultiplier;\r\n  exports.b2_linearSlop = b2_linearSlop;\r\n  exports.b2_angularSlop = b2_angularSlop;\r\n  exports.b2_polygonRadius = b2_polygonRadius;\r\n  exports.b2_maxSubSteps = b2_maxSubSteps;\r\n  exports.b2_maxTOIContacts = b2_maxTOIContacts;\r\n  exports.b2_velocityThreshold = b2_velocityThreshold;\r\n  exports.b2_maxLinearCorrection = b2_maxLinearCorrection;\r\n  exports.b2_maxAngularCorrection = b2_maxAngularCorrection;\r\n  exports.b2_maxTranslation = b2_maxTranslation;\r\n  exports.b2_maxTranslationSquared = b2_maxTranslationSquared;\r\n  exports.b2_maxRotation = b2_maxRotation;\r\n  exports.b2_maxRotationSquared = b2_maxRotationSquared;\r\n  exports.b2_baumgarte = b2_baumgarte;\r\n  exports.b2_toiBaumgarte = b2_toiBaumgarte;\r\n  exports.b2_invalidParticleIndex = b2_invalidParticleIndex;\r\n  exports.b2_maxParticleIndex = b2_maxParticleIndex;\r\n  exports.b2_particleStride = b2_particleStride;\r\n  exports.b2_minParticleWeight = b2_minParticleWeight;\r\n  exports.b2_maxParticlePressure = b2_maxParticlePressure;\r\n  exports.b2_maxParticleForce = b2_maxParticleForce;\r\n  exports.b2_maxTriadDistance = b2_maxTriadDistance;\r\n  exports.b2_maxTriadDistanceSquared = b2_maxTriadDistanceSquared;\r\n  exports.b2_minParticleSystemBufferCapacity = b2_minParticleSystemBufferCapacity;\r\n  exports.b2_barrierCollisionTime = b2_barrierCollisionTime;\r\n  exports.b2_timeToSleep = b2_timeToSleep;\r\n  exports.b2_linearSleepTolerance = b2_linearSleepTolerance;\r\n  exports.b2_angularSleepTolerance = b2_angularSleepTolerance;\r\n  exports.b2Alloc = b2Alloc;\r\n  exports.b2Free = b2Free;\r\n  exports.b2Log = b2Log;\r\n  exports.b2Version = b2Version;\r\n  exports.b2_version = b2_version;\r\n  exports.b2_branch = b2_branch;\r\n  exports.b2_commit = b2_commit;\r\n  exports.b2ParseInt = b2ParseInt;\r\n  exports.b2ParseUInt = b2ParseUInt;\r\n  exports.b2MakeArray = b2MakeArray;\r\n  exports.b2MakeNullArray = b2MakeNullArray;\r\n  exports.b2MakeNumberArray = b2MakeNumberArray;\r\n  exports.b2_pi_over_180 = b2_pi_over_180;\r\n  exports.b2_180_over_pi = b2_180_over_pi;\r\n  exports.b2_two_pi = b2_two_pi;\r\n  exports.b2Abs = b2Abs;\r\n  exports.b2Min = b2Min;\r\n  exports.b2Max = b2Max;\r\n  exports.b2Clamp = b2Clamp;\r\n  exports.b2Swap = b2Swap;\r\n  exports.b2IsValid = b2IsValid;\r\n  exports.b2Sq = b2Sq;\r\n  exports.b2InvSqrt = b2InvSqrt;\r\n  exports.b2Sqrt = b2Sqrt;\r\n  exports.b2Pow = b2Pow;\r\n  exports.b2DegToRad = b2DegToRad;\r\n  exports.b2RadToDeg = b2RadToDeg;\r\n  exports.b2Cos = b2Cos;\r\n  exports.b2Sin = b2Sin;\r\n  exports.b2Acos = b2Acos;\r\n  exports.b2Asin = b2Asin;\r\n  exports.b2Atan2 = b2Atan2;\r\n  exports.b2NextPowerOfTwo = b2NextPowerOfTwo;\r\n  exports.b2IsPowerOfTwo = b2IsPowerOfTwo;\r\n  exports.b2Random = b2Random;\r\n  exports.b2RandomRange = b2RandomRange;\r\n  exports.b2Vec2 = b2Vec2;\r\n  exports.b2Vec2_zero = b2Vec2_zero;\r\n  exports.b2Vec3 = b2Vec3;\r\n  exports.b2Mat22 = b2Mat22;\r\n  exports.b2Mat33 = b2Mat33;\r\n  exports.b2Rot = b2Rot;\r\n  exports.b2Transform = b2Transform;\r\n  exports.b2Sweep = b2Sweep;\r\n  exports.b2Color = b2Color;\r\n  exports.b2Draw = b2Draw;\r\n  exports.b2Timer = b2Timer;\r\n  exports.b2Counter = b2Counter;\r\n  exports.b2GrowableStack = b2GrowableStack;\r\n  exports.b2BlockAllocator = b2BlockAllocator;\r\n  exports.b2StackAllocator = b2StackAllocator;\r\n  exports.b2ContactFeature = b2ContactFeature;\r\n  exports.b2ContactID = b2ContactID;\r\n  exports.b2ManifoldPoint = b2ManifoldPoint;\r\n  exports.b2Manifold = b2Manifold;\r\n  exports.b2WorldManifold = b2WorldManifold;\r\n  exports.b2GetPointStates = b2GetPointStates;\r\n  exports.b2ClipVertex = b2ClipVertex;\r\n  exports.b2RayCastInput = b2RayCastInput;\r\n  exports.b2RayCastOutput = b2RayCastOutput;\r\n  exports.b2AABB = b2AABB;\r\n  exports.b2TestOverlapAABB = b2TestOverlapAABB;\r\n  exports.b2ClipSegmentToLine = b2ClipSegmentToLine;\r\n  exports.b2TestOverlapShape = b2TestOverlapShape;\r\n  exports.b2DistanceProxy = b2DistanceProxy;\r\n  exports.b2SimplexCache = b2SimplexCache;\r\n  exports.b2DistanceInput = b2DistanceInput;\r\n  exports.b2DistanceOutput = b2DistanceOutput;\r\n  exports.b2ShapeCastInput = b2ShapeCastInput;\r\n  exports.b2ShapeCastOutput = b2ShapeCastOutput;\r\n  exports.b2_gjk_reset = b2_gjk_reset;\r\n  exports.b2SimplexVertex = b2SimplexVertex;\r\n  exports.b2Simplex = b2Simplex;\r\n  exports.b2Distance = b2Distance;\r\n  exports.b2ShapeCast = b2ShapeCast;\r\n  exports.b2Pair = b2Pair;\r\n  exports.b2BroadPhase = b2BroadPhase;\r\n  exports.b2PairLessThan = b2PairLessThan;\r\n  exports.b2TreeNode = b2TreeNode;\r\n  exports.b2DynamicTree = b2DynamicTree;\r\n  exports.b2_toi_reset = b2_toi_reset;\r\n  exports.b2TOIInput = b2TOIInput;\r\n  exports.b2TOIOutput = b2TOIOutput;\r\n  exports.b2SeparationFunction = b2SeparationFunction;\r\n  exports.b2TimeOfImpact = b2TimeOfImpact;\r\n  exports.b2CollideCircles = b2CollideCircles;\r\n  exports.b2CollidePolygonAndCircle = b2CollidePolygonAndCircle;\r\n  exports.b2CollidePolygons = b2CollidePolygons;\r\n  exports.b2CollideEdgeAndCircle = b2CollideEdgeAndCircle;\r\n  exports.b2CollideEdgeAndPolygon = b2CollideEdgeAndPolygon;\r\n  exports.b2MassData = b2MassData;\r\n  exports.b2Shape = b2Shape;\r\n  exports.b2CircleShape = b2CircleShape;\r\n  exports.b2PolygonShape = b2PolygonShape;\r\n  exports.b2EdgeShape = b2EdgeShape;\r\n  exports.b2ChainShape = b2ChainShape;\r\n  exports.b2Filter = b2Filter;\r\n  exports.b2FixtureDef = b2FixtureDef;\r\n  exports.b2FixtureProxy = b2FixtureProxy;\r\n  exports.b2Fixture = b2Fixture;\r\n  exports.b2BodyDef = b2BodyDef;\r\n  exports.b2Body = b2Body;\r\n  exports.b2World = b2World;\r\n  exports.b2DestructionListener = b2DestructionListener;\r\n  exports.b2ContactFilter = b2ContactFilter;\r\n  exports.b2ContactImpulse = b2ContactImpulse;\r\n  exports.b2ContactListener = b2ContactListener;\r\n  exports.b2QueryCallback = b2QueryCallback;\r\n  exports.b2RayCastCallback = b2RayCastCallback;\r\n  exports.b2Island = b2Island;\r\n  exports.b2Profile = b2Profile;\r\n  exports.b2TimeStep = b2TimeStep;\r\n  exports.b2Position = b2Position;\r\n  exports.b2Velocity = b2Velocity;\r\n  exports.b2SolverData = b2SolverData;\r\n  exports.b2ContactManager = b2ContactManager;\r\n  exports.b2MixFriction = b2MixFriction;\r\n  exports.b2MixRestitution = b2MixRestitution;\r\n  exports.b2ContactEdge = b2ContactEdge;\r\n  exports.b2Contact = b2Contact;\r\n  exports.b2ContactRegister = b2ContactRegister;\r\n  exports.b2ContactFactory = b2ContactFactory;\r\n  exports.g_blockSolve = g_blockSolve;\r\n  exports.b2VelocityConstraintPoint = b2VelocityConstraintPoint;\r\n  exports.b2ContactVelocityConstraint = b2ContactVelocityConstraint;\r\n  exports.b2ContactPositionConstraint = b2ContactPositionConstraint;\r\n  exports.b2ContactSolverDef = b2ContactSolverDef;\r\n  exports.b2PositionSolverManifold = b2PositionSolverManifold;\r\n  exports.b2ContactSolver = b2ContactSolver;\r\n  exports.b2CircleContact = b2CircleContact;\r\n  exports.b2PolygonContact = b2PolygonContact;\r\n  exports.b2PolygonAndCircleContact = b2PolygonAndCircleContact;\r\n  exports.b2EdgeAndCircleContact = b2EdgeAndCircleContact;\r\n  exports.b2EdgeAndPolygonContact = b2EdgeAndPolygonContact;\r\n  exports.b2ChainAndCircleContact = b2ChainAndCircleContact;\r\n  exports.b2ChainAndPolygonContact = b2ChainAndPolygonContact;\r\n  exports.b2Jacobian = b2Jacobian;\r\n  exports.b2JointEdge = b2JointEdge;\r\n  exports.b2JointDef = b2JointDef;\r\n  exports.b2Joint = b2Joint;\r\n  exports.b2AreaJointDef = b2AreaJointDef;\r\n  exports.b2AreaJoint = b2AreaJoint;\r\n  exports.b2DistanceJointDef = b2DistanceJointDef;\r\n  exports.b2DistanceJoint = b2DistanceJoint;\r\n  exports.b2FrictionJointDef = b2FrictionJointDef;\r\n  exports.b2FrictionJoint = b2FrictionJoint;\r\n  exports.b2GearJointDef = b2GearJointDef;\r\n  exports.b2GearJoint = b2GearJoint;\r\n  exports.b2MotorJointDef = b2MotorJointDef;\r\n  exports.b2MotorJoint = b2MotorJoint;\r\n  exports.b2MouseJointDef = b2MouseJointDef;\r\n  exports.b2MouseJoint = b2MouseJoint;\r\n  exports.b2PrismaticJointDef = b2PrismaticJointDef;\r\n  exports.b2PrismaticJoint = b2PrismaticJoint;\r\n  exports.b2_minPulleyLength = b2_minPulleyLength;\r\n  exports.b2PulleyJointDef = b2PulleyJointDef;\r\n  exports.b2PulleyJoint = b2PulleyJoint;\r\n  exports.b2RevoluteJointDef = b2RevoluteJointDef;\r\n  exports.b2RevoluteJoint = b2RevoluteJoint;\r\n  exports.b2RopeJointDef = b2RopeJointDef;\r\n  exports.b2RopeJoint = b2RopeJoint;\r\n  exports.b2WeldJointDef = b2WeldJointDef;\r\n  exports.b2WeldJoint = b2WeldJoint;\r\n  exports.b2WheelJointDef = b2WheelJointDef;\r\n  exports.b2WheelJoint = b2WheelJoint;\r\n  exports.b2ControllerEdge = b2ControllerEdge;\r\n  exports.b2Controller = b2Controller;\r\n  exports.b2BuoyancyController = b2BuoyancyController;\r\n  exports.b2ConstantAccelController = b2ConstantAccelController;\r\n  exports.b2ConstantForceController = b2ConstantForceController;\r\n  exports.b2GravityController = b2GravityController;\r\n  exports.b2TensorDampingController = b2TensorDampingController;\r\n  exports.b2ParticleDef = b2ParticleDef;\r\n  exports.b2CalculateParticleIterations = b2CalculateParticleIterations;\r\n  exports.b2ParticleHandle = b2ParticleHandle;\r\n  exports.b2ParticleGroupDef = b2ParticleGroupDef;\r\n  exports.b2ParticleGroup = b2ParticleGroup;\r\n  exports.b2GrowableBuffer = b2GrowableBuffer;\r\n  exports.b2FixtureParticleQueryCallback = b2FixtureParticleQueryCallback;\r\n  exports.b2ParticleContact = b2ParticleContact;\r\n  exports.b2ParticleBodyContact = b2ParticleBodyContact;\r\n  exports.b2ParticlePair = b2ParticlePair;\r\n  exports.b2ParticleTriad = b2ParticleTriad;\r\n  exports.b2ParticleSystemDef = b2ParticleSystemDef;\r\n  exports.b2ParticleSystem = b2ParticleSystem;\r\n  exports.b2RopeDef = b2RopeDef;\r\n  exports.b2Rope = b2Rope;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n})));\r\n","export const PlayMode = {\n  NORMAL: 0,\n  LOOP: 1,\n  LOOP_PINGPONG: 2,\n  REVERSED: 3,\n  LOOP_REVERSED: 4\n}; // TODO: dynamic frame duration\n\nexport default ((frameDuration, keyFrames = []) => {\n  return {\n    getKeyFrame(stateTime, mode = PlayMode.NORMAL) {\n      let frameNumber = Math.floor(stateTime / frameDuration);\n\n      switch (mode) {\n        case PlayMode.NORMAL:\n          frameNumber = Math.min(keyFrames.length - 1, frameNumber);\n          break;\n\n        case PlayMode.LOOP:\n          frameNumber = frameNumber % keyFrames.length;\n          break;\n\n        case PlayMode.LOOP_PINGPONG:\n          frameNumber = frameNumber % (keyFrames.length * 2 - 2);\n\n          if (frameNumber >= keyFrames.length) {\n            frameNumber = keyFrames.length - 2 - (frameNumber - keyFrames.length);\n          }\n\n          break;\n\n        case PlayMode.REVERSED:\n          frameNumber = Math.max(keyFrames.length - frameNumber - 1, 0);\n          break;\n\n        case PlayMode.LOOP_REVERSED:\n          frameNumber = frameNumber % keyFrames.length;\n          frameNumber = keyFrames.length - frameNumber - 1;\n          break;\n\n        default:\n      }\n\n      return keyFrames[frameNumber];\n    }\n\n  };\n});","import createBatch from \"kami-batch2\";\nexport default createBatch;","export default (update => {\n  let lastUpdate = Date.now();\n  let fps = 0;\n  let running = true;\n  let requestId;\n\n  (function loop() {\n    if (running) {\n      const delta = Date.now() - lastUpdate;\n      lastUpdate = Date.now();\n      fps = 1000 / delta;\n      update(delta / 1000);\n      requestId = requestAnimationFrame(loop);\n    }\n  })();\n\n  return {\n    isRunning: () => running,\n    start: () => {\n      if (!running) {\n        running = true;\n        loop();\n      }\n    },\n    stop: () => {\n      if (requestId) {\n        cancelAnimationFrame(requestId);\n      }\n\n      running = false;\n    },\n    getFps: () => fps\n  };\n});","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { EventEmitter } from \"fbemitter\";\nexport default class InputHandler {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.lastX = 0;\n    this.lastY = 0;\n    this.touched = false;\n    const emitter = this.emitter = new EventEmitter();\n\n    this.mouseDownHandler = evt => {\n      this.touched = true;\n      this.handleMove(evt);\n      emitter.emit(\"touchStart\", this.getX(), this.getY());\n    };\n\n    this.mouseUpHandler = evt => {\n      this.touched = false;\n      emitter.emit(\"touchEnd\");\n    };\n\n    this.mouseMoveHandler = evt => {\n      this.handleMove(evt);\n      emitter.emit(\"touchMove\", this.getX(), this.getY());\n    };\n\n    this.touchStartHandler = evt => {\n      evt.preventDefault(); // TODO: handle multi touch\n\n      let touch = evt.touches[0];\n      this.canvas.dispatchEvent(new MouseEvent(\"mousedown\", {\n        clientX: touch.clientX,\n        clientY: touch.clientY\n      }));\n    };\n\n    this.touchEndHandler = evt => {\n      evt.preventDefault();\n      this.canvas.dispatchEvent(new MouseEvent(\"mouseup\"));\n    };\n\n    this.touchMoveHandler = evt => {\n      evt.preventDefault();\n      let touch = evt.touches[0];\n      this.canvas.dispatchEvent(new MouseEvent(\"mousemove\", {\n        clientX: touch.clientX,\n        clientY: touch.clientY\n      }));\n    };\n\n    this.canvas.addEventListener(\"mousedown\", this.mouseDownHandler, false);\n    this.canvas.addEventListener(\"mouseup\", this.mouseUpHandler, false);\n    this.canvas.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\n    this.canvas.addEventListener(\"touchstart\", this.touchStartHandler, false);\n    this.canvas.addEventListener(\"touchend\", this.touchEndHandler, false);\n    this.canvas.addEventListener(\"touchmove\", this.touchMoveHandler, false);\n  }\n\n  cleanup() {\n    this.canvas.removeEventListener(\"mousedown\", this.mouseDownHandler);\n    this.canvas.removeEventListener(\"mouseup\", this.mouseUpHandler);\n    this.canvas.removeEventListener(\"mousemove\", this.mouseMoveHandler);\n    this.canvas.removeEventListener(\"touchstart\", this.touchStartHandler);\n    this.canvas.removeEventListener(\"touchend\", this.touchEndHandler);\n    this.canvas.removeEventListener(\"touchmove\", this.touchMoveHandler);\n  }\n\n  addEventListener(event, listener) {\n    this.emitter.addListener(event, listener);\n  }\n\n  handleMove(evt) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = evt.clientX - rect.left;\n    const y = evt.clientY - rect.top;\n    this.lastX = x;\n    this.lastY = y;\n  }\n\n  getX() {\n    return this.lastX;\n  }\n\n  getY() {\n    return this.lastY;\n  }\n\n  isTouched() {\n    return this.touched;\n  }\n\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import Texture from \"kami-texture2\";\nexport default ((gl, url, options) => new Promise(resolve => {\n  const image = new Image();\n  image.src = url;\n\n  image.onload = () => {\n    const texture = new Texture(gl, { ...options,\n      image\n    });\n    texture.setFilter(Texture.Filter.LINEAR, Texture.Filter.LINEAR, false);\n    resolve(texture);\n  };\n}));\nexport const Filter = Texture.Filter;","import loadTexture from './loadTexture';\nimport TextureRegion from './TextureRegion';\n\nfunction concatAndResolveUrl(url, concat) {\n  let url1 = url.split('/');\n  let url2 = concat.split('/');\n  let url3 = [];\n\n  for (let i = 0, l = url1.length; i < l; i++) {\n    if (url1[i] === '..') {\n      url3.pop();\n    } else if (url1[i] === '.') {\n      continue;\n    } else {\n      url3.push(url1[i]);\n    }\n  }\n\n  for (let i = 0, l = url2.length; i < l; i++) {\n    if (url2[i] === '..') {\n      url3.pop();\n    } else if (url2[i] === '.') {\n      continue;\n    } else {\n      url3.push(url2[i]);\n    }\n  }\n\n  return url3.join('/');\n}\n\nconst TextureWrap = {\n  ClampToEdge: 0,\n  Repeat: 1\n};\nexport default (async (gl, packFileContent, loadAssetCallback) => {\n  const pages = [];\n  const regionsData = [];\n  let pageImage;\n  const lines = packFileContent.split('\\n');\n  let i = 0;\n  let tuple;\n\n  while (true) {\n    let line = lines[i];\n\n    if (line === undefined) {\n      break;\n    }\n\n    if (line.trim().length === 0) {\n      pageImage = null;\n    } else if (pageImage === null) {\n      const file = line;\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n      const width = parseInt(tuple[0], 10);\n      const height = parseInt(tuple[1], 10);\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n      const format = tuple[0];\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n      const [min, max] = tuple;\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n      const direction = tuple[0];\n      let repeatX = TextureWrap.ClampToEdge;\n      let repeatY = TextureWrap.ClampToEdge;\n\n      if (direction === 'x') {\n        repeatX = TextureWrap.Repeat;\n      } else if (direction === 'y') {\n        repeatY = TextureWrap.Repeat;\n      } else if (direction === 'xy') {\n        repeatX = TextureWrap.Repeat;\n        repeatY = TextureWrap.Repeat;\n      }\n\n      const mipMaps = min !== 'Nearest' && min !== 'Linear';\n      pageImage = {\n        file,\n        width,\n        height,\n        format,\n        mipMaps,\n        min,\n        max,\n        direction,\n        repeatX,\n        repeatY\n      };\n      pages.push(pageImage);\n    } else {\n      const name = line;\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n      const rotate = tuple[0] === 'true';\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n      const left = parseInt(tuple[0], 10);\n      const top = parseInt(tuple[1], 10);\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n      const width = parseInt(tuple[0], 10);\n      const height = parseInt(tuple[1], 10);\n      const region = {\n        name,\n        rotate,\n        left,\n        top,\n        width,\n        height,\n        page: pageImage\n      };\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      if (tuple.length === 4) {\n        region.splits = tuple.map(i => parseInt(i, 10));\n        i++;\n        line = lines[i];\n        tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n        if (tuple.length === 4) {\n          region.pads = tuple.map(i => parseInt(i, 10));\n          i++;\n          line = lines[i];\n          tuple = line.split(':')[1].split(',').map(s => s.trim());\n        }\n      }\n\n      region.originalWidth = parseInt(tuple[0], 10);\n      region.originalHeight = parseInt(tuple[1], 10);\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n      region.offsetX = parseInt(tuple[0], 10);\n      region.offsetY = parseInt(tuple[1], 10);\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n      region.index = parseInt(tuple[0], 10);\n      regionsData.push(region);\n    }\n\n    i++;\n  }\n\n  for (let page of pages) {\n    page.texture = await loadAssetCallback(gl, page.file);\n    page.invTexWidth = 1 / page.texture.width;\n    page.invTexHeight = 1 / page.texture.height;\n  }\n\n  const regions = [];\n\n  for (let regionData of regionsData) {\n    const {\n      left: x,\n      top: y\n    } = regionData;\n    const width = regionData.rotate ? regionData.height : regionData.width;\n    const height = regionData.rotate ? regionData.width : regionData.height;\n    const {\n      texture,\n      invTexWidth,\n      invTexHeight\n    } = regionData.page;\n    regions.push(new TextureRegion(texture, x, y, width, height, regionData, invTexWidth, invTexHeight));\n  }\n\n  return {\n    getRegions() {\n      return regions;\n    },\n\n    findRegion(name, index) {\n      for (let i = 0; i < regions.length; i++) {\n        let region = regions[i];\n        if (region.name !== name) continue;\n        if (index !== undefined && region.index !== index) continue;\n        return region;\n      }\n\n      return null;\n    },\n\n    findRegions(name) {\n      return regions.filter(region => region.name === name).sort((a, b) => a.index - b.index);\n    }\n\n  };\n});","export const project = (out, vec3, mat4) => {\n  const [x, y, z] = vec3;\n  const m = mat4;\n  const a00 = m[0],\n        a01 = m[1],\n        a02 = m[2],\n        a03 = m[3],\n        a10 = m[4],\n        a11 = m[5],\n        a12 = m[6],\n        a13 = m[7],\n        a20 = m[8],\n        a21 = m[9],\n        a22 = m[10],\n        a23 = m[11],\n        a30 = m[12],\n        a31 = m[13],\n        a32 = m[14],\n        a33 = m[15];\n  const l_w = 1 / (x * a03 + y * a13 + z * a23 + a33);\n  out[0] = (x * a00 + y * a10 + z * a20 + a30) * l_w;\n  out[1] = (x * a01 + y * a11 + z * a21 + a31) * l_w;\n  out[2] = (x * a02 + y * a12 + z * a22 + a32) * l_w;\n  return out;\n};\nexport const unproject = (out, vec3, invMat4, viewX, viewY, viewWidth, viewHeight) => {\n  let [x, y, z] = vec3;\n  x = x - viewX;\n  y = viewHeight - y - 1;\n  y = y - viewY;\n  out[0] = 2 * x / viewWidth - 1;\n  out[1] = 2 * y / viewHeight - 1;\n  out[2] = 2 * z - 1;\n  return project(out, out, invMat4);\n};","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import { mat4 } from \"gl-matrix\";\nimport { unproject } from \"./mathUtils\";\nexport default ((width, height, viewportWidth, viewportHeight) => {\n  const combined = mat4.create();\n  mat4.ortho(combined, 0, width, height, 0, 0, 1);\n  const invOrtho = mat4.create();\n  mat4.invert(invOrtho, combined);\n  const transform = mat4.create();\n  const tmp3 = [0, 0, 0];\n  const origin = [];\n  const scaleVec = [];\n  const negOriginVec = [];\n  const translateVec = [];\n  return {\n    combined,\n\n    setMatrix(mat) {\n      mat4.copy(combined, mat);\n      mat4.invert(invOrtho, combined);\n    },\n\n    unprojectVector2(out, input) {\n      tmp3[0] = input.x;\n      tmp3[1] = input.y;\n      tmp3[2] = 0;\n      unproject(tmp3, tmp3, invOrtho, 0, 0, viewportWidth, viewportHeight);\n      out.set(tmp3[0], tmp3[1]);\n    },\n\n    resize(width, height) {\n      mat4.ortho(combined, 0, width, height, 0, 0, 1);\n      mat4.invert(invOrtho, combined);\n    },\n\n    translate(x, y) {\n      translateVec.length = 0;\n      translateVec[0] = x;\n      translateVec[1] = y;\n      translateVec[2] = 0;\n      mat4.translate(combined, combined, translateVec);\n      mat4.invert(invOrtho, combined);\n    },\n\n    scale(originX, originY, scale) {\n      origin.length = 0;\n      origin[0] = originX;\n      origin[1] = originY;\n      origin[2] = 0;\n      scaleVec.length = 0;\n      scaleVec[0] = scale;\n      scaleVec[1] = scale;\n      scaleVec[2] = 1;\n      negOriginVec.length = 0;\n      negOriginVec[0] = -originX;\n      negOriginVec[1] = -originY;\n      negOriginVec[2] = 0;\n      mat4.identity(transform);\n      mat4.translate(transform, transform, origin);\n      mat4.scale(transform, transform, scaleVec);\n      mat4.translate(transform, transform, negOriginVec);\n      mat4.mul(combined, combined, transform);\n      mat4.invert(invOrtho, combined);\n    }\n\n  };\n});","const resizeCanvas = (canvas, deviceRatio) => {\n  const devicePixelRatio = deviceRatio || window.devicePixelRatio || 1;\n  const displayWidth = canvas.clientWidth * devicePixelRatio;\n  const displayHeight = canvas.clientHeight * devicePixelRatio;\n\n  if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n\n  return [displayWidth, displayHeight];\n};\n\nexport default resizeCanvas;","export default class Vector2 {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setVector(v) {\n    return this.set(v.x, v.y);\n  }\n\n  add(x, y) {\n    this.x += x;\n    this.y += y;\n    return this;\n  }\n\n  addVector(v) {\n    return this.add(v.x, v.y);\n  }\n\n  sub(x, y) {\n    return this.add(-x, -y);\n  }\n\n  subVector(v) {\n    return this.sub(v.x, v.y);\n  }\n\n  scale(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  distanceSqr(v) {\n    const deltaX = this.x - v.x;\n    const deltaY = this.y - v.y;\n    return deltaX * deltaX + deltaY * deltaY;\n  }\n\n  distance(v) {\n    return Math.sqrt(this.distanceSqr(v));\n  }\n\n  angle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  len2() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  len() {\n    return Math.sqrt(this.len2());\n  }\n\n  nor() {\n    const len = this.len();\n\n    if (len !== 0) {\n      this.x /= len;\n      this.y /= len;\n    }\n\n    return this;\n  }\n\n  rotateRad(rad) {\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n    const newX = this.x * cos - this.y * sin;\n    const newY = this.x * sin + this.y * cos;\n    this.x = newX;\n    this.y = newY;\n    return this;\n  }\n\n  rotate(degrees) {\n    return this.rotateRad(degrees * Math.PI / 180);\n  }\n\n}","import Vector2 from \"./Vector2\";\nconst tmpV1 = new Vector2(0, 0);\nconst tmpV2 = new Vector2(0, 0);\nexport const drawLine = (batch, tex, x1, y1, x2, y2, thickness = 1, r = 1, g = 1, b = 1, a = 1) => {\n  tmpV1.set(x1, y1);\n  tmpV2.set(x2, y2);\n  const length = tmpV1.distance(tmpV2);\n  const angle = tmpV2.subVector(tmpV1).angle();\n  batch.setColor(r, g, b, a);\n  batch.draw(tex, x1, y1, thickness * 0.5, length, 0, 0, angle - Math.PI / 2);\n  batch.setColor(1, 1, 1, 1);\n};\nexport const drawPolygon = (batch, tex, verts, thickness = 1, r = 1, g = 1, b = 1, a = 1) => {\n  if (verts.length < 4) {\n    return;\n  }\n\n  let prevX = verts[0];\n  let prevY = verts[1];\n\n  for (let i = 2; i < verts.length; i++) {\n    const x = verts[i];\n    const y = verts[++i];\n    drawLine(batch, tex, prevX, prevY, x, y, thickness, r, g, b, a);\n    prevX = x;\n    prevY = y;\n  }\n\n  drawLine(batch, tex, prevX, prevY, verts[0], verts[1], thickness, r, g, b, a);\n};\nexport const fillRect = (batch, tex, x, y, w, h, rotation = 0, originX = w / 2, originY = h / 2) => {\n  batch.draw(tex, x, y, w, h, originX, originY, rotation);\n};\nconst circleVerts = [];\nconst tmpV3 = new Vector2(0, 0);\nexport const drawCircle = (batch, tex, x, y, radius, thickness = 1, segments = 8, r = 1, g = 1, b = 1, a = 1) => {\n  circleVerts.length = 0;\n  const slice = 2 * Math.PI / segments;\n\n  for (let i = 0; i < segments; i++) {\n    tmpV3.set(0, radius);\n    tmpV3.rotateRad(slice * i).add(x, y);\n    circleVerts.push(tmpV3.x, tmpV3.y);\n  }\n\n  drawPolygon(batch, tex, circleVerts, thickness, r, g, b, a);\n};","export { default as createAnimation } from \"./createAnimation\";\nexport { default as createBatch } from \"./createBatch\";\nexport { default as createGameLoop } from \"./createGameLoop\";\nexport { default as InputHandler } from \"./InputHandler\";\nexport { default as loadAtlas } from \"./loadAtlas\";\nexport { default as loadLocalAtlas } from \"./loadLocalAtlas\";\nexport { default as loadTexture } from \"./loadTexture\";\nexport { project, unproject } from \"./mathUtils\";\nexport { default as createOrthoCamera } from \"./orthoCamera\";\nexport { default as resizeCanvas } from \"./resizeCanvas\";\nexport { drawLine, drawPolygon, fillRect, drawCircle } from \"./shapeUtils\";\nexport { default as TextureRegion } from \"./TextureRegion\";\nexport { default as Vector2 } from \"./Vector2\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","module.exports = require(\"regenerator-runtime\");\n","function hasGetterOrSetter(def) {\n\treturn (!!def.get && typeof def.get === \"function\") || (!!def.set && typeof def.set === \"function\");\n}\n\nfunction getProperty(definition, k, isClassDescriptor) {\n\t//This may be a lightweight object, OR it might be a property\n\t//that was defined previously.\n\t\n\t//For simple class descriptors we can just assume its NOT previously defined.\n\tvar def = isClassDescriptor \n\t\t\t\t? definition[k] \n\t\t\t\t: Object.getOwnPropertyDescriptor(definition, k);\n\n\tif (!isClassDescriptor && def.value && typeof def.value === \"object\") {\n\t\tdef = def.value;\n\t}\n\n\n\t//This might be a regular property, or it may be a getter/setter the user defined in a class.\n\tif ( def && hasGetterOrSetter(def) ) {\n\t\tif (typeof def.enumerable === \"undefined\")\n\t\t\tdef.enumerable = true;\n\t\tif (typeof def.configurable === \"undefined\")\n\t\t\tdef.configurable = true;\n\t\treturn def;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction hasNonConfigurable(obj, k) {\n\tvar prop = Object.getOwnPropertyDescriptor(obj, k);\n\tif (!prop)\n\t\treturn false;\n\n\tif (prop.value && typeof prop.value === \"object\")\n\t\tprop = prop.value;\n\n\tif (prop.configurable === false) \n\t\treturn true;\n\n\treturn false;\n}\n\n//TODO: On create, \n//\t\tOn mixin, \n\nfunction extend(ctor, definition, isClassDescriptor, extend) {\n\tfor (var k in definition) {\n\t\tif (!definition.hasOwnProperty(k))\n\t\t\tcontinue;\n\n\t\tvar def = getProperty(definition, k, isClassDescriptor);\n\n\t\tif (def !== false) {\n\t\t\t//If Extends is used, we will check its prototype to see if \n\t\t\t//the final variable exists.\n\t\t\t\n\t\t\tvar parent = extend || ctor;\n\t\t\tif (hasNonConfigurable(parent.prototype, k)) {\n\n\t\t\t\t//just skip the final property\n\t\t\t\tif (Class.ignoreFinals)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t//We cannot re-define a property that is configurable=false.\n\t\t\t\t//So we will consider them final and throw an error. This is by\n\t\t\t\t//default so it is clear to the developer what is happening.\n\t\t\t\t//You can set ignoreFinals to true if you need to extend a class\n\t\t\t\t//which has configurable=false; it will simply not re-define final properties.\n\t\t\t\tthrow new Error(\"cannot override final property '\"+k\n\t\t\t\t\t\t\t+\"', set Class.ignoreFinals = true to skip\");\n\t\t\t}\n\n\t\t\tObject.defineProperty(ctor.prototype, k, def);\n\t\t} else {\n\t\t\tctor.prototype[k] = definition[k];\n\t\t}\n\n\t}\n}\n\n/**\n */\nfunction mixin(myClass, mixins) {\n\tif (!mixins)\n\t\treturn;\n\n\tif (!Array.isArray(mixins))\n\t\tmixins = [mixins];\n\n\tfor (var i=0; i<mixins.length; i++) {\n\t\textend(myClass, mixins[i].prototype || mixins[i]);\n\t}\n}\n\n/**\n * Creates a new class with the given descriptor.\n * The constructor, defined by the name `initialize`,\n * is an optional function. If unspecified, an anonymous\n * function will be used which calls the parent class (if\n * one exists). \n *\n * You can also use `Extends` and `Mixins` to provide subclassing\n * and inheritance.\n *\n * @class  Class\n * @constructor\n * @param {Object} definition a dictionary of functions for the class\n * @example\n *\n * \t\tvar MyClass = new Class({\n * \t\t\n * \t\t\tinitialize: function() {\n * \t\t\t\tthis.foo = 2.0;\n * \t\t\t},\n *\n * \t\t\tbar: function() {\n * \t\t\t\treturn this.foo + 5;\n * \t\t\t}\n * \t\t});\n */\nfunction Class(definition) {\n\tif (!definition)\n\t\tdefinition = {};\n\n\t//The variable name here dictates what we see in Chrome debugger\n\tvar initialize;\n\tvar Extends;\n\n\tif (definition.initialize) {\n\t\tif (typeof definition.initialize !== \"function\")\n\t\t\tthrow new Error(\"initialize must be a function\");\n\t\tinitialize = definition.initialize;\n\n\t\t//Usually we should avoid \"delete\" in V8 at all costs.\n\t\t//However, its unlikely to make any performance difference\n\t\t//here since we only call this on class creation (i.e. not object creation).\n\t\tdelete definition.initialize;\n\t} else {\n\t\tif (definition.Extends) {\n\t\t\tvar base = definition.Extends;\n\t\t\tinitialize = function () {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t}; \n\t\t} else {\n\t\t\tinitialize = function () {}; \n\t\t}\n\t}\n\n\tif (definition.Extends) {\n\t\tinitialize.prototype = Object.create(definition.Extends.prototype);\n\t\tinitialize.prototype.constructor = initialize;\n\t\t//for getOwnPropertyDescriptor to work, we need to act\n\t\t//directly on the Extends (or Mixin)\n\t\tExtends = definition.Extends;\n\t\tdelete definition.Extends;\n\t} else {\n\t\tinitialize.prototype.constructor = initialize;\n\t}\n\n\t//Grab the mixins, if they are specified...\n\tvar mixins = null;\n\tif (definition.Mixins) {\n\t\tmixins = definition.Mixins;\n\t\tdelete definition.Mixins;\n\t}\n\n\t//First, mixin if we can.\n\tmixin(initialize, mixins);\n\n\t//Now we grab the actual definition which defines the overrides.\n\textend(initialize, definition, true, Extends);\n\n\treturn initialize;\n};\n\nClass.extend = extend;\nClass.mixin = mixin;\nClass.ignoreFinals = false;\n\nmodule.exports = Class;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Texture utils for kami.\n *\n * @module kami-texture\n */\n\nvar Class = require(\"klasse\");\nvar nextPowerOfTwo = require(\"number-util\").nextPowerOfTwo;\nvar isPowerOfTwo = require(\"number-util\").isPowerOfTwo;\nvar BaseObject = require(\"kami-util\").BaseObject;\n\nvar Texture = new Class({\n  /**\n   * Creates a new texture with the optional width, height, and data.\n   *\n   * If the constructor is passed no parameters other than the context, then\n   * it will not be initialized and will be non-renderable. You will need to manually\n   * uploadData or uploadImage yourself.\n   *\n   * If the options passed includes 'src', it assumes an image is to be loaded,\n   * and will use the width/height from that resulting image. Otherwise, it\n   * will look for 'data', which may be a typed array or any valid \"image\" object.\n   * A typed array will need its width/height passed explicitly.\n   *\n   * If the context is a kami-context, we will try to manage the Texture object by\n   * keeping the arguments in memory for future use.\n   *\n   * Most users will want to use the AssetManager to create and manage their textures\n   * with asynchronous loading and context loss.\n   *\n   * @class  Texture\n   * @constructor\n   * @param  {WebGLRenderingContext|kami-context} context the WebGL context\n   * @param  {Object} options the options to create this texture\n   *   @param {String} options.src the path to the image file, if ommitted we assume data will be given\n   *   @param {Function} options.onLoad called when the image is loaded (if src is provided)\n   *   @param {Function} options.onError called when there was an error loading the image (if src is provided)\n   *   @param {String} options.crossOrigin the image cross-origin parameter (if src is provided)\n   *   @param {ArrayBuffer} options.data some typed array with texture data, ignored if 'src' is specified\n   *   @param {GLenum} options.format the texture format, default Texture.Format.RGBA (for when data is specified)\n   *   @param {GLenum} options.type the data type, default Texture.DataType.UNSIGNED_BYTE (for when data is specified)\n   *   @param {Number} options.width the width of the texture (if we are not specifying an image URL)\n   *   @param {Number} options.height the height of the texture (if we are not specifying an image URL)\n   *   @param {Boolean} options.genMipmaps whether to generate mipmaps after upload\n   */\n  initialize: function Texture(context, options) {\n    if (!(this instanceof Texture)) return new Texture(context, options);\n\n    //sets up base Kami object..\n    BaseObject.call(this, context);\n\n    /**\n     * When a texture is created, we keep track of the arguments provided to\n     * its constructor. On context loss and restore, these arguments are re-supplied\n     * to the Texture, so as to re-create it in its correct form.\n     *\n     * This is mainly useful if you are procedurally creating textures and passing\n     * their data directly (e.g. for generic lookup tables in a shader). For image\n     * or media based textures, it would be better to use an AssetManager to manage\n     * the asynchronous texture upload.\n     *\n     * Upon destroying a texture, a reference to this is also lost.\n     *\n     * @property managedArgs\n     * @type {Object} the options given to the Texture constructor, or undefined\n     */\n    this.managedArgs = options;\n\n    /**\n     * The WebGLTexture which backs this Texture object. This\n     * can be used for low-level GL calls.\n     *\n     * @type {WebGLTexture}\n     */\n    this.id = null; //initialized in create()\n\n    /**\n     * The target for this texture unit, i.e. TEXTURE_2D. Subclasses\n     * should override the create() method to change this, for correct\n     * usage with context restore.\n     *\n     * @property target\n     * @type {GLenum}\n     * @default  gl.TEXTURE_2D\n     */\n    this.target = this.context.gl.TEXTURE_2D;\n\n    /**\n     * The width of this texture, in pixels.\n     *\n     * @property width\n     * @readOnly\n     * @type {Number} the width\n     */\n    this.width = 0; //initialized on texture upload\n\n    /**\n     * The height of this texture, in pixels.\n     *\n     * @property height\n     * @readOnly\n     * @type {Number} the height\n     */\n    this.height = 0; //initialized on texture upload\n\n    this.__shape = [0, 0];\n\n    /**\n     * The S wrap parameter.\n     * @property {GLenum} wrapS\n     */\n    this.wrapS = Texture.DEFAULT_WRAP;\n    /**\n     * The T wrap parameter.\n     * @property {GLenum} wrapT\n     */\n    this.wrapT = Texture.DEFAULT_WRAP;\n    /**\n     * The minifcation filter.\n     * @property {GLenum} minFilter\n     */\n    this.minFilter = Texture.DEFAULT_FILTER;\n\n    /**\n     * The magnification filter.\n     * @property {GLenum} magFilter\n     */\n    this.magFilter = Texture.DEFAULT_FILTER;\n\n    //manage if we're dealing with a kami-context\n    this.context.addManagedObject(this);\n    this.create();\n  },\n\n  /**\n   * This can be called after creating a Texture to load an Image object asynchronously,\n   * or upload image data directly. It takes the same options as the constructor.\n   *\n   * Users will generally not need to call this directly.\n   *\n   * @protected\n   * @method  setup\n   */\n  setup: function(options) {\n    var gl = this.gl;\n\n    //If no options is provided... this method does nothing.\n    if (!options) return;\n\n    // width, height, format, dataType, data, genMipmaps\n\n    //If 'src' is provided, try to load the image from a path...\n    if (options.src && typeof options.src === \"string\") {\n      var img = new Image();\n      var path = options.src;\n      var crossOrigin = options.crossOrigin;\n      var successCB =\n        typeof options.onLoad === \"function\" ? options.onLoad : null;\n      var failCB =\n        typeof options.onError === \"function\" ? options.onError : null;\n      var genMipmaps = options.genMipmaps;\n\n      var self = this;\n\n      //If you try to render a texture that is not yet \"renderable\" (i.e. the\n      //async load hasn't completed yet, which is always the case in Chrome since requestAnimationFrame\n      //fires before img.onload), WebGL will throw us errors. So instead we will just upload some\n      //dummy data until the texture load is complete. Users can disable this with the global flag.\n      if (Texture.USE_DUMMY_1x1_DATA) {\n        self.uploadData(1, 1);\n        this.width = this.height = 0;\n      }\n\n      img.crossOrigin = crossOrigin;\n\n      img.onload = function(ev) {\n        self.uploadImage(img, undefined, undefined, genMipmaps);\n        if (typeof successCB === \"function\") successCB.call(self, ev, self);\n      };\n      img.onerror = function(ev) {\n        if (genMipmaps)\n          //we still need to gen mipmaps on the 1x1 dummy\n          gl.generateMipmap(gl.TEXTURE_2D);\n        if (typeof failCB === \"function\") failCB.call(self, ev, self);\n      };\n      img.onabort = function(ev) {\n        if (genMipmaps) gl.generateMipmap(gl.TEXTURE_2D);\n        if (typeof failCB === \"function\") failCB.call(self, ev, self);\n      };\n\n      img.src = path;\n    }\n    //otherwise see if we have an 'image' specified\n    else if (options.image) {\n      this.uploadImage(\n        options.image,\n        options.format,\n        options.dataType,\n        options.genMipmaps\n      );\n    }\n    //otherwise assume our regular list of width/height arguments are passed\n    else {\n      this.uploadData(\n        options.width,\n        options.height,\n        options.format,\n        options.dataType,\n        options.data,\n        options.genMipmaps\n      );\n    }\n  },\n\n  /**\n   * Called in the Texture constructor, and after the GL context has been re-initialized.\n   * Subclasses can override this to provide a custom data upload, e.g. cubemaps or compressed\n   * textures.\n   *\n   * @method  create\n   */\n  create: function() {\n    this.gl = this.context.gl;\n    var gl = this.gl;\n\n    this.id = gl.createTexture(); //texture ID is recreated\n    this.width = this.height = 0; //size is reset to zero until loaded\n    this.target = gl.TEXTURE_2D; //the provider can change this if necessary (e.g. cube maps)\n\n    this.bind();\n\n    //TODO: clean these up a little.\n    gl.pixelStorei(\n      gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,\n      Texture.UNPACK_PREMULTIPLY_ALPHA\n    );\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, Texture.UNPACK_ALIGNMENT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, Texture.UNPACK_FLIP_Y);\n\n    var colorspace =\n      Texture.UNPACK_COLORSPACE_CONVERSION || gl.BROWSER_DEFAULT_WEBGL;\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, colorspace);\n\n    //setup wrap modes without binding redundantly\n    this.setWrap(this.wrapS, this.wrapT, false);\n    this.setFilter(this.minFilter, this.magFilter, false);\n\n    if (this.managedArgs) {\n      this.setup(this.managedArgs);\n    }\n  },\n\n  /**\n   * Destroys this texture by deleting the GL resource,\n   * removing it from the WebGLContext management stack,\n   * setting its size to zero, and id and managed arguments to null.\n   *\n   * Trying to use this texture after may lead to undefined behaviour.\n   *\n   * @method  destroy\n   */\n  destroy: function() {\n    if (this.id && this.gl) this.gl.deleteTexture(this.id);\n    if (this.context) this.context.removeManagedObject(this);\n    this.width = this.height = 0;\n    this.id = null;\n    this.managedArgs = null;\n    this.context = null;\n    this.gl = null;\n  },\n\n  /**\n   * Sets the wrap mode for this texture; if the second argument\n   * is undefined or falsy, then both S and T wrap will use the first\n   * argument.\n   *\n   * You can use Texture.Wrap constants for convenience, to avoid needing\n   * a GL reference.\n   *\n   * @method  setWrap\n   * @param {GLenum} s the S wrap mode\n   * @param {GLenum} t the T wrap mode\n   * @param {Boolean} ignoreBind (optional) if true, the bind will be ignored.\n   */\n  setWrap: function(s, t, ignoreBind) {\n    //TODO: support R wrap mode\n    if (s && t) {\n      this.wrapS = s;\n      this.wrapT = t;\n    } else this.wrapS = this.wrapT = s;\n\n    //enforce POT rules..\n    this._checkPOT();\n\n    if (!ignoreBind) this.bind();\n\n    var gl = this.gl;\n    gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, this.wrapS);\n    gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, this.wrapT);\n  },\n\n  /**\n   * Sets the min and mag filter for this texture;\n   * if mag is undefined or falsy, then both min and mag will use the\n   * filter specified for min.\n   *\n   * You can use Texture.Filter constants for convenience, to avoid needing\n   * a GL reference.\n   *\n   * @method  setFilter\n   * @param {GLenum} min the minification filter\n   * @param {GLenum} mag the magnification filter\n   * @param {Boolean} ignoreBind if true, the bind will be ignored.\n   */\n  setFilter: function(min, mag, ignoreBind) {\n    if (min && mag) {\n      this.minFilter = min;\n      this.magFilter = mag;\n    } else this.minFilter = this.magFilter = min;\n\n    //enforce POT rules..\n    this._checkPOT();\n\n    if (!ignoreBind) this.bind();\n\n    var gl = this.gl;\n    gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, this.minFilter);\n    gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, this.magFilter);\n  },\n\n  /**\n   * A low-level method to upload the specified ArrayBufferView\n   * to this texture. This will cause the width and height of this\n   * texture to change.\n   *\n   * @method  uploadData\n   * @param  {Number} width          the new width of this texture,\n   *                                 defaults to the last used width (or zero)\n   * @param  {Number} height         the new height of this texture\n   *                                 defaults to the last used height (or zero)\n   * @param  {GLenum} format         the data format, default RGBA\n   * @param  {GLenum} type           the data type, default UNSIGNED_BYTE (Uint8Array)\n   * @param  {ArrayBufferView} data  the raw data for this texture, or null for an empty image\n   * @param  {Boolean} genMipmaps\t   whether to generate mipmaps after uploading the data, default false\n   */\n  uploadData: function(width, height, format, type, data, genMipmaps) {\n    var gl = this.gl;\n\n    format = format || gl.RGBA;\n    type = type || gl.UNSIGNED_BYTE;\n    data = data || null; //make sure falsey value is null for texImage2D\n\n    this.width = width || width == 0 ? width : this.width;\n    this.height = height || height == 0 ? height : this.height;\n\n    this._checkPOT();\n\n    this.bind();\n\n    gl.texImage2D(\n      this.target,\n      0,\n      format,\n      this.width,\n      this.height,\n      0,\n      format,\n      type,\n      data\n    );\n\n    if (genMipmaps) gl.generateMipmap(this.target);\n  },\n\n  /**\n   * Uploads ImageData, HTMLImageElement, HTMLCanvasElement or\n   * HTMLVideoElement.\n   *\n   * @method  uploadImage\n   * @param  {Object} domObject the DOM image container\n   * @param  {GLenum} format the format, default gl.RGBA\n   * @param  {GLenum} type the data type, default gl.UNSIGNED_BYTE\n   * @param  {Boolean} genMipmaps whether to generate mipmaps after uploading the data, default false\n   */\n  uploadImage: function(domObject, format, type, genMipmaps) {\n    var gl = this.gl;\n\n    format = format || gl.RGBA;\n    type = type || gl.UNSIGNED_BYTE;\n\n    this.width = domObject.width;\n    this.height = domObject.height;\n\n    this._checkPOT();\n\n    this.bind();\n\n    gl.texImage2D(this.target, 0, format, format, type, domObject);\n\n    if (genMipmaps) gl.generateMipmap(this.target);\n  },\n\n  uploadSubImage: function() {},\n\n  /**\n   * If FORCE_POT is false, we verify this texture to see if it is valid,\n   * as per non-power-of-two rules. If it is non-power-of-two, it must have\n   * a wrap mode of CLAMP_TO_EDGE, and the minification filter must be LINEAR\n   * or NEAREST. If we don't satisfy these needs, an error is thrown.\n   *\n   * @method  _checkPOT\n   * @private\n   * @return {[type]} [description]\n   */\n  _checkPOT: function() {\n    if (!Texture.FORCE_POT) {\n      //If minFilter is anything but LINEAR or NEAREST\n      //or if wrapS or wrapT are not CLAMP_TO_EDGE...\n      var wrongFilter =\n        this.minFilter !== Texture.Filter.LINEAR &&\n        this.minFilter !== Texture.Filter.NEAREST;\n      var wrongWrap =\n        this.wrapS !== Texture.Wrap.CLAMP_TO_EDGE ||\n        this.wrapT !== Texture.Wrap.CLAMP_TO_EDGE;\n\n      if (wrongFilter || wrongWrap) {\n        if (!isPowerOfTwo(this.width) || !isPowerOfTwo(this.height))\n          throw new Error(\n            wrongFilter\n              ? \"Non-power-of-two textures cannot use mipmapping as filter\"\n              : \"Non-power-of-two textures must use CLAMP_TO_EDGE as wrap\"\n          );\n      }\n    }\n  },\n\n  /**\n   * Binds the texture. If unit is specified,\n   * it will bind the texture at the given slot\n   * (TEXTURE0, TEXTURE1, etc). If unit is not specified,\n   * it will simply bind the texture at whichever slot\n   * is currently active.\n   *\n   * @method  bind\n   * @param  {Number} unit the texture unit index, starting at 0\n   */\n  bind: function(unit) {\n    var gl = this.gl;\n    if (unit || unit === 0) gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(this.target, this.id);\n  },\n\n  toString: function() {\n    return this.id + \":\" + this.width + \"x\" + this.height + \"\";\n  },\n\n  shape: {\n    get: function() {\n      this.__shape[0] = this.width;\n      this.__shape[1] = this.height;\n      return this.__shape;\n    },\n    set: function(shape) {\n      throw new Error(\"changing shape not supported\");\n    }\n  }\n});\n\n/**\n * A set of Filter constants that match their GL counterparts.\n * This is for convenience, to avoid the need for a GL rendering context.\n *\n * @example\n * ```\n *     Texture.Filter.NEAREST\n *     Texture.Filter.NEAREST_MIPMAP_LINEAR\n *     Texture.Filter.NEAREST_MIPMAP_NEAREST\n *     Texture.Filter.LINEAR\n *     Texture.Filter.LINEAR_MIPMAP_LINEAR\n *     Texture.Filter.LINEAR_MIPMAP_NEAREST\n * ```\n * @attribute Filter\n * @static\n * @type {Object}\n */\nTexture.Filter = {\n  NEAREST: 9728,\n  NEAREST_MIPMAP_LINEAR: 9986,\n  NEAREST_MIPMAP_NEAREST: 9984,\n  LINEAR: 9729,\n  LINEAR_MIPMAP_LINEAR: 9987,\n  LINEAR_MIPMAP_NEAREST: 9985\n};\n\n/**\n * A set of Wrap constants that match their GL counterparts.\n * This is for convenience, to avoid the need for a GL rendering context.\n *\n * @example\n * ```\n *     Texture.Wrap.CLAMP_TO_EDGE\n *     Texture.Wrap.MIRRORED_REPEAT\n *     Texture.Wrap.REPEAT\n * ```\n * @attribute Wrap\n * @static\n * @type {Object}\n */\nTexture.Wrap = {\n  CLAMP_TO_EDGE: 33071,\n  MIRRORED_REPEAT: 33648,\n  REPEAT: 10497\n};\n\n/**\n * A set of Format constants that match their GL counterparts.\n * This is for convenience, to avoid the need for a GL rendering context.\n *\n * @example\n * ```\n *     Texture.Format.RGB\n *     Texture.Format.RGBA\n *     Texture.Format.LUMINANCE_ALPHA\n * ```\n * @attribute Format\n * @static\n * @type {Object}\n */\nTexture.Format = {\n  DEPTH_COMPONENT: 6402,\n  ALPHA: 6406,\n  RGBA: 6408,\n  RGB: 6407,\n  LUMINANCE: 6409,\n  LUMINANCE_ALPHA: 6410\n};\n\n/**\n * A set of DataType constants that match their GL counterparts.\n * This is for convenience, to avoid the need for a GL rendering context.\n *\n * @example\n * ```\n *     Texture.DataType.UNSIGNED_BYTE\n *     Texture.DataType.FLOAT\n * ```\n * @attribute DataType\n * @static\n * @type {Object}\n */\nTexture.DataType = {\n  BYTE: 5120,\n  SHORT: 5122,\n  INT: 5124,\n  FLOAT: 5126,\n  UNSIGNED_BYTE: 5121,\n  UNSIGNED_INT: 5125,\n  UNSIGNED_SHORT: 5123,\n  UNSIGNED_SHORT_4_4_4_4: 32819,\n  UNSIGNED_SHORT_5_5_5_1: 32820,\n  UNSIGNED_SHORT_5_6_5: 33635\n};\n\n/**\n * The default wrap mode when creating new textures. If a custom\n * provider was specified, it may choose to override this default mode.\n *\n * @attribute {GLenum} DEFAULT_WRAP\n * @static\n * @default  Texture.Wrap.CLAMP_TO_EDGE\n */\nTexture.DEFAULT_WRAP = Texture.Wrap.CLAMP_TO_EDGE;\n\n/**\n * The default filter mode when creating new textures. If a custom\n * provider was specified, it may choose to override this default mode.\n *\n * @attribute {GLenum} DEFAULT_FILTER\n * @static\n * @default  Texture.Filter.LINEAR\n */\nTexture.DEFAULT_FILTER = Texture.Filter.NEAREST;\n\n/**\n * By default, we do some error checking when creating textures\n * to ensure that they will be \"renderable\" by WebGL. Non-power-of-two\n * textures must use CLAMP_TO_EDGE as their wrap mode, and NEAREST or LINEAR\n * as their wrap mode. Further, trying to generate mipmaps for a NPOT image\n * will lead to errors.\n *\n * However, you can disable this error checking by setting `FORCE_POT` to true.\n * This may be useful if you are running on specific hardware that supports POT\n * textures, or in some future case where NPOT textures is added as a WebGL extension.\n *\n * @attribute {Boolean} FORCE_POT\n * @static\n * @default  false\n */\nTexture.FORCE_POT = false;\n\n//default pixel store operations. Used in create()\nTexture.UNPACK_FLIP_Y = false;\nTexture.UNPACK_ALIGNMENT = 1;\nTexture.UNPACK_PREMULTIPLY_ALPHA = true;\nTexture.UNPACK_COLORSPACE_CONVERSION = undefined;\n\n//for the Image constructor we need to handle things a bit differently..\nTexture.USE_DUMMY_1x1_DATA = true;\n\n/**\n * Utility to get the number of components for the given GLenum, e.g. gl.RGBA returns 4.\n * Returns null if the specified format is not of type DEPTH_COMPONENT, ALPHA, LUMINANCE,\n * LUMINANCE_ALPHA, RGB, or RGBA.\n *\n * @method getNumComponents\n * @static\n * @param  {GLenum} format a texture format, i.e. Texture.Format.RGBA\n * @return {Number} the number of components for this format\n */\nTexture.getNumComponents = function(format) {\n  switch (format) {\n    case Texture.Format.DEPTH_COMPONENT:\n    case Texture.Format.ALPHA:\n    case Texture.Format.LUMINANCE:\n      return 1;\n    case Texture.Format.LUMINANCE_ALPHA:\n      return 2;\n    case Texture.Format.RGB:\n      return 3;\n    case Texture.Format.RGBA:\n      return 4;\n  }\n  return null;\n};\n\nmodule.exports = Texture;\n","var GLContextWrapper = require('./wrapper');\n\nfunction wrapContext(gl) {\n    //Chrome's WebGLInspector wraps it with a different class\n    //and then puts the original in 'rawgl' property\n    var rawgl = gl && gl.rawgl ? gl.rawgl : gl;\n    if (typeof window.WebGLRenderingContext !== \"undefined\" && rawgl instanceof window.WebGLRenderingContext) {\n        return new GLContextWrapper(gl);\n    } else\n        return gl;\n}\n\n/**\n * Duck-types WebGLRenderingContext / kami.WebGLContext.\n *\n * If WebGLRenderingContext is passed, the object will not have its\n * state managed during context loss/restore. If a Kami WebGLContext\n * is passed, the object will try to maintain its state during lost/restore.\n * \n * @param  {WebGLRenderingContext|kami.WebGLContext} gl the GL context\n * @return {Object|kami.WebGLContext} a wrapper that has a `gl` property\n */\nmodule.exports.wrapContext = wrapContext;\n\nmodule.exports.BaseObject = function(context) {\n    if (!context || typeof context !== \"object\")\n        throw \"valid GL context not specified\";\n\n    this.context = wrapContext(context);\n};","var int8 = new Int8Array(4);\nvar int32 = new Int32Array(int8.buffer, 0, 1);\nvar float32 = new Float32Array(int8.buffer, 0, 1);\n\n/**\n * A singleton for number utilities. \n * @class NumberUtil\n */\nvar NumberUtil = function() {\n\n};\n\n\n/**\n * Returns a float representation of the given int bits. ArrayBuffer\n * is used for the conversion.\n *\n * @method  intBitsToFloat\n * @static\n * @param  {Number} i the int to cast\n * @return {Number}   the float\n */\nNumberUtil.intBitsToFloat = function(i) {\n\tint32[0] = i;\n\treturn float32[0];\n};\n\n/**\n * Returns the int bits from the given float. ArrayBuffer is used\n * for the conversion.\n *\n * @method  floatToIntBits\n * @static\n * @param  {Number} f the float to cast\n * @return {Number}   the int bits\n */\nNumberUtil.floatToIntBits = function(f) {\n\tfloat32[0] = f;\n\treturn int32[0];\n};\n\n/**\n * Encodes ABGR int as a float, with slight precision loss.\n *\n * @method  intToFloatColor\n * @static\n * @param {Number} value an ABGR packed integer\n */\nNumberUtil.intToFloatColor = function(value) {\n\treturn NumberUtil.intBitsToFloat( value & 0xfeffffff );\n};\n\n/**\n * Returns a float encoded ABGR value from the given RGBA\n * bytes (0 - 255). Useful for saving bandwidth in vertex data.\n *\n * @method  colorToFloat\n * @static\n * @param {Number} r the Red byte (0 - 255)\n * @param {Number} g the Green byte (0 - 255)\n * @param {Number} b the Blue byte (0 - 255)\n * @param {Number} a the Alpha byte (0 - 255)\n * @return {Float32}  a Float32 of the RGBA color\n */\nNumberUtil.colorToFloat = function(r, g, b, a) {\n\tvar bits = (a << 24 | b << 16 | g << 8 | r);\n\treturn NumberUtil.intToFloatColor(bits);\n};\n\n/**\n * Returns true if the number is a power-of-two.\n *\n * @method  isPowerOfTwo\n * @param  {Number}  n the number to test\n * @return {Boolean}   true if power-of-two\n */\nNumberUtil.isPowerOfTwo = function(n) {\n\treturn (n & (n - 1)) === 0;\n};\n\n/**\n * Returns the next highest power-of-two from the specified number. \n * \n * @param  {Number} n the number to test\n * @return {Number}   the next highest power of two\n */\nNumberUtil.nextPowerOfTwo = function(n) {\n\tn--;\n\tn |= n >> 1;\n\tn |= n >> 2;\n\tn |= n >> 4;\n\tn |= n >> 8;\n\tn |= n >> 16;\n\treturn n+1;\n};\n\nmodule.exports = NumberUtil;","/**\n * A mesh class that wraps VBO and IBO. Mostly used internally.\n * \n * @module kami-mesh-buffer\n */\n\nvar Class = require('klasse');\nvar BaseObject = require('kami-util').BaseObject;\n\n//TODO: decouple into VBO + IBO utilities \n/**\n * \n *\n * @class  Mesh\n */\nvar Mesh = new Class({\n\n\n\t/**\n\t * A write-only property which sets both vertices and indices \n\t * flag to dirty or not. \n\t *\n\t * @property dirty\n\t * @type {Boolean}\n\t * @writeOnly\n\t */\n\tdirty: {\n\t\tset: function(val) {\n\t\t\tthis.verticesDirty = val;\n\t\t\tthis.indicesDirty = val;\n\t\t}\n\t},\n\n\t/**\n\t * Creates a new Mesh with the provided parameters.\n\t *\n\t * If numIndices is 0 or falsy, no index buffer will be used\n\t * and indices will be an empty ArrayBuffer and a null indexBuffer.\n\t * \n\t * If isStatic is true, then vertexUsage and indexUsage will\n\t * be set to gl.STATIC_DRAW. Otherwise they will use gl.DYNAMIC_DRAW.\n\t * You may want to adjust these after initialization for further control.\n\t * \n\t * @param  {WebGLContext}  context the context for management\n\t * @param  {Boolean} isStatic      a hint as to whether this geometry is static\n\t * @param  {[type]}  numVerts      [description]\n\t * @param  {[type]}  numIndices    [description]\n\t * @param  {[type]}  vertexAttribs [description]\n\t * @return {[type]}                [description]\n\t */\n\tinitialize: function Mesh(context, isStatic, numVerts, numIndices, vertexAttribs) {\n\t\t//TODO: use options here...\n\t\tif (!numVerts)\n\t\t\tthrow \"numVerts not specified, must be > 0\";\n\n\t\tBaseObject.call(this, context);\n\n\t\tthis.gl = this.context.gl;\n\t\t\n\t\tthis.numVerts = null;\n\t\tthis.numIndices = null;\n\t\t\n\t\tthis.vertices = null;\n\t\tthis.indices = null;\n\t\tthis.vertexBuffer = null;\n\t\tthis.indexBuffer = null;\n\n\t\tthis.verticesDirty = true;\n\t\tthis.indicesDirty = true;\n\t\tthis.indexUsage = null;\n\t\tthis.vertexUsage = null;\n\n\t\t/** \n\t\t * @property\n\t\t * @private\n\t\t */\n\t\tthis._vertexAttribs = null;\n\n\t\t/** \n\t\t * The stride for one vertex _in bytes_. \n\t\t * \n\t\t * @property {Number} vertexStride\n\t\t */\n\t\tthis.vertexStride = null;\n\n\t\tthis.numVerts = numVerts;\n\t\tthis.numIndices = numIndices || 0;\n\t\tthis.vertexUsage = isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW;\n\t\tthis.indexUsage  = isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW;\n\t\tthis._vertexAttribs = vertexAttribs || [];\n\t\t\n\t\tthis.indicesDirty = true;\n\t\tthis.verticesDirty = true;\n\n\t\t//determine the vertex stride based on given attributes\n\t\tvar totalNumComponents = 0;\n\t\tfor (var i=0; i<this._vertexAttribs.length; i++)\n\t\t\ttotalNumComponents += this._vertexAttribs[i].offsetCount;\n\t\tthis.vertexStride = totalNumComponents * 4; // in bytes\n\n\t\tthis.vertices = new Float32Array(this.numVerts);\n\t\tthis.indices = new Uint16Array(this.numIndices);\n\n\t\t//add this VBO to the managed cache\n\t\tthis.context.addManagedObject(this);\n\n\t\tthis.create();\n\t},\n\n\t//recreates the buffers on context loss\n\tcreate: function() {\n\t\tthis.gl = this.context.gl;\n\t\tvar gl = this.gl;\n\t\tthis.vertexBuffer = gl.createBuffer();\n\n\t\t//ignore index buffer if we haven't specified any\n\t\tthis.indexBuffer = this.numIndices > 0\n\t\t\t\t\t? gl.createBuffer()\n\t\t\t\t\t: null;\n\n\t\tthis.dirty = true;\n\t},\n\n\tdestroy: function() {\n\t\tthis.vertices = null;\n\t\tthis.indices = null;\n\t\tif (this.vertexBuffer && this.gl)\n\t\t\tthis.gl.deleteBuffer(this.vertexBuffer);\n\t\tif (this.indexBuffer && this.gl)\n\t\t\tthis.gl.deleteBuffer(this.indexBuffer);\n\t\tthis.vertexBuffer = null;\n\t\tthis.indexBuffer = null;\n\t\tif (this.context)\n\t\t\tthis.context.removeManagedObject(this);\n\t\tthis.gl = null;\n\t\tthis.context = null;\n\t},\n\n\t_updateBuffers: function(ignoreBind, subDataLength) {\n\t\tvar gl = this.gl;\n\n\t\t//bind our index data, if we have any\n\t\tif (this.numIndices > 0) {\n\t\t\tif (!ignoreBind)\n\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n\t\t\t//update the index data\n\t\t\tif (this.indicesDirty) {\n\t\t\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, this.indexUsage);\n\t\t\t\tthis.indicesDirty = false;\n\t\t\t}\n\t\t}\n\n\t\t//bind our vertex data\n\t\tif (!ignoreBind)\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\n\t\t//update our vertex data\n\t\tif (this.verticesDirty) {\n\t\t\tif (subDataLength) {\n\t\t\t\t// TODO: When decoupling VBO/IBO be sure to give better subData support..\n\t\t\t\tvar view = this.vertices.subarray(0, subDataLength);\n\t\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n\t\t\t} else {\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, this.vertices, this.vertexUsage);\t\n\t\t\t}\n\n\t\t\t\n\t\t\tthis.verticesDirty = false;\n\t\t}\n\t},\n\n\tdraw: function(primitiveType, count, offset, subDataLength) {\n\t\tif (count === 0)\n\t\t\treturn;\n\n\t\tvar gl = this.gl;\n\t\t\n\t\toffset = offset || 0;\n\n\t\t//binds and updates our buffers. pass ignoreBind as true\n\t\t//to avoid binding unnecessarily\n\t\tthis._updateBuffers(true, subDataLength);\n\n\t\tif (this.numIndices > 0) { \n\t\t\tgl.drawElements(primitiveType, count, \n\t\t\t\t\t\tgl.UNSIGNED_SHORT, offset * 2); //* Uint16Array.BYTES_PER_ELEMENT\n\t\t} else\n\t\t\tgl.drawArrays(primitiveType, offset, count);\n\t},\n\n\t//binds this mesh's vertex attributes for the given shader\n\tbind: function(shader) {\n\t\tvar gl = this.gl;\n\n\t\tvar offset = 0;\n\t\tvar stride = this.vertexStride;\n\n\t\t//bind and update our vertex data before binding attributes\n\t\tthis._updateBuffers();\n\n\t\t//for each attribtue\n\t\tfor (var i=0; i<this._vertexAttribs.length; i++) {\n\t\t\tvar a = this._vertexAttribs[i];\n\n\t\t\t//location of the attribute\n\t\t\tvar loc = a.location === null \n\t\t\t\t\t? shader.getAttributeLocation(a.name)\n\t\t\t\t\t: a.location;\n\n\t\t\t//TODO: We may want to skip unfound attribs\n\t\t\t// if (loc!==0 && !loc)\n\t\t\t// \tconsole.warn(\"WARN:\", a.name, \"is not enabled\");\n\n\t\t\t//first, enable the vertex array\n\t\t\tgl.enableVertexAttribArray(loc);\n\n\t\t\t//then specify our vertex format\n\t\t\tgl.vertexAttribPointer(loc, a.numComponents, a.type || gl.FLOAT, \n\t\t\t\t\t\t\t\t   a.normalize, stride, offset);\n\n\t\t\t//and increase the offset...\n\t\t\toffset += a.offsetCount * 4; //in bytes\n\t\t}\n\t},\n\n\tunbind: function(shader) {\n\t\tvar gl = this.gl;\n\n\t\t//for each attribtue\n\t\tfor (var i=0; i<this._vertexAttribs.length; i++) {\n\t\t\tvar a = this._vertexAttribs[i];\n\n\t\t\t//location of the attribute\n\t\t\tvar loc = a.location === null \n\t\t\t\t\t? shader.getAttributeLocation(a.name)\n\t\t\t\t\t: a.location;\n\n\t\t\t//first, enable the vertex array\n\t\t\tgl.disableVertexAttribArray(loc);\n\t\t}\n\t}\n});\n\nMesh.Attrib = new Class({\n\n\tname: null,\n\tnumComponents: null,\n\tlocation: null,\n\ttype: null,\n\n\t/**\n\t * Mesh vertex attribute holder.\n\t * \n\t * Location is optional and for advanced users that\n\t * want vertex arrays to match across shaders. Any non-numerical\n\t * value will be converted to null, and ignored. If a numerical\n\t * value is given, it will override the position of this attribute\n\t * when given to a mesh.\n\t *\n\t * @class  Mesh.Attrib\n\t * @constructor\n\t * @param {String} name the name of the attribute\n\t * @param {Number} numComponents the number of components, e.g. 2 for vec2\n\t * @param {Number} location optional attribute index location\n\t * @param {Number} type defaults to GL_FLOAT \n\t * @param {Number} normalize whether to normalize to 0-1, default false\n\t */\n\tinitialize: function(name, numComponents, location, type, normalize, offsetCount) {\n\t\tthis.name = name;\n\t\tthis.numComponents = numComponents;\n\t\tthis.location = typeof location === \"number\" ? location : null;\n\t\tthis.type = type;\n\t\tthis.normalize = Boolean(normalize);\n\t\tthis.offsetCount = typeof offsetCount === \"number\" ? offsetCount : this.numComponents;\n\t}\n});\n\n\nmodule.exports = Mesh;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EmitterSubscription\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventSubscription = require('./EventSubscription');\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\n\nvar EmitterSubscription = (function (_EventSubscription) {\n  _inherits(EmitterSubscription, _EventSubscription);\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  function EmitterSubscription(subscriber, listener, context) {\n    _classCallCheck(this, EmitterSubscription);\n\n    _EventSubscription.call(this, subscriber);\n    this.listener = listener;\n    this.context = context;\n  }\n\n  return EmitterSubscription;\n})(EventSubscription);\n\nmodule.exports = EmitterSubscription;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","/**\n * A fast and efficient 2D sprite batcher.\n * \n * @module kami-batch\n */\n\n// Requires....\nvar Class = require('klasse');\n\nvar Mesh = require('kami-mesh-buffer');\nvar ShaderProgram = require('kami-shader');\nvar BaseBatch = require('kami-base-batch');\nvar mat4 = require('gl-matrix').mat4;\n\n/**\n * A basic implementation of a batcher which draws 2D sprites.\n * This uses two triangles (quads) with indexed and interleaved\n * vertex data. Each vertex holds 5 floats (Position.xy, Color, TexCoord0.xy).\n *\n * The color is packed into a single float to reduce vertex bandwidth, and\n * the data is interleaved for best performance. We use a static index buffer,\n * and a dynamic vertex buffer that is updated with bufferSubData. \n * \n * @example\n *      //create a new batcher\n *      var batch = require('kami-batch')(context);\n *\n *      function render() {\n *          batch.begin();\n *          \n *          //draw some sprites in between begin and end...\n *          batch.draw( texture, 0, 0, 25, 32 );\n *          batch.draw( texture1, 0, 25, 42, 23 );\n * \n *          batch.end();\n *      }\n * \n * @class  SpriteBatch\n * @uses BaseBatch\n * @constructor\n * @param {WebGLContext} context the context for this batch\n * @param {Object} options the options\n * @param {Number} options.size the optional size of this batch, i.e. max number of quads\n */\nvar SpriteBatch = new Class({\n\t//inherit some stuff onto this prototype\n\tMixins: BaseBatch,\n\n\t//Constructor\n\tinitialize: function SpriteBatch(context, options) {\n\t\tif (!(this instanceof SpriteBatch))\n\t\t\treturn new SpriteBatch(context, options);\n\t\tBaseBatch.call(this, context, options);\n\n\t\t/**\n\t\t * The projection Float32Array vec2 which is\n\t\t * used to avoid some matrix calculations.\n\t\t *\n\t\t * @property projection\n\t\t * @type {Float32Array}\n\t\t */\n\t\t// this.projection = new Float32Array(2);\n\n\t\t// var ctxCanvas = this.context.gl.canvas;\n\t\t//Sets up a default projection vector so that the batch works without setProjection\n\t\t// this.projection[0] = ctxCanvas.width/2;\n\t\t// this.projection[1] = ctxCanvas.height/2;\n\t\tthis.projection = mat4.create();\n\n\t\t/**\n\t\t * The currently bound texture. Do not modify.\n\t\t * \n\t\t * @property {Texture} texture\n\t\t * @readOnly\n\t\t */\n\t\tthis.texture = null;\n\t},\n\n\t/**\n\t * This is a convenience function to set the batch's projection\n\t * matrix to an orthographic 2D projection, based on the given screen\n\t * size. This allows users to render in 2D without any need for a camera.\n\t * \n\t * @param  {[type]} width  [description]\n\t * @param  {[type]} height [description]\n\t * @return {[type]}        [description]\n\t */\n\tresize: function(width, height) {\n\t\tthis.setProjection(width / 2, height / 2);\n\t},\n\n\t/**\n\t * The number of floats per vertex for this batcher \n\t * (Position.xy + Color + TexCoord0.xy).\n\t *\n\t * @method  getVertexSize\n\t * @return {Number} the number of floats per vertex\n\t */\n\tgetVertexSize: function() {\n\t\treturn SpriteBatch.VERTEX_SIZE;\n\t},\n\n\t/**\n\t * Used internally to return the Position, Color, and TexCoord0 attributes.\n\t *\n\t * @method  _createVertexAttribuets\n\t * @protected\n\t * @return {[type]} [description]\n\t */\n\t_createVertexAttributes: function() {\n\t\tvar gl = this.context.gl;\n\n\t\treturn [\n\t\t\tnew Mesh.Attrib(ShaderProgram.POSITION_ATTRIBUTE, 2),\n\t\t\t//pack the color for smaller CPU -> GPU bandwidth\n\t\t\tnew Mesh.Attrib(\n\t\t\t\tShaderProgram.COLOR_ATTRIBUTE,\n\t\t\t\t4,\n\t\t\t\tnull,\n\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\ttrue,\n\t\t\t\t1\n\t\t\t),\n\t\t\tnew Mesh.Attrib(ShaderProgram.TEXCOORD_ATTRIBUTE + '0', 2)\n\t\t];\n\t},\n\n\t/**\n\t * Sets the projection vector, an x and y\n\t * defining the middle points of your stage.\n\t *\n\t * @method setProjection\n\t * @param {Number} x the x projection value\n\t * @param {Number} y the y projection value\n\t */\n\tsetProjection: function(mat4) {\n\t\tthis.projection = mat4;\n\t\tif (this.drawing && (x != oldX || y != oldY)) {\n\t\t\tthis.flush();\n\t\t\tthis.updateMatrices();\n\t\t}\n\t},\n\n\t/**\n\t * Creates a default shader for this batch.\n\t *\n\t * @method  _createShader\n\t * @protected\n\t * @return {ShaderProgram} a new instance of ShaderProgram\n\t */\n\t_createShader: function() {\n\t\tvar shader = new ShaderProgram(\n\t\t\tthis.context,\n\t\t\tSpriteBatch.DEFAULT_VERT_SHADER,\n\t\t\tSpriteBatch.DEFAULT_FRAG_SHADER\n\t\t);\n\t\tif (shader.log) console.warn('Shader Log:\\n' + shader.log);\n\t\treturn shader;\n\t},\n\n\t/**\n\t * This is called during rendering to update projection/transform\n\t * matrices and upload the new values to the shader. For example,\n\t * if the user calls setProjection mid-draw, the batch will flush\n\t * and this will be called before continuing to add items to the batch.\n\t *\n\t * You generally should not need to call this directly.\n\t * \n\t * @method  updateMatrices\n\t * @protected\n\t */\n\tupdateMatrices: function() {\n\t\tthis.shader.setUniformMatrix4('u_projection', this.projection);\n\t},\n\n\t/**\n\t * Called before rendering, and binds the current texture.\n\t * \n\t * @method _preRender\n\t * @protected\n\t */\n\t_preRender: function() {\n\t\tif (this.texture) this.texture.bind();\n\t},\n\n\t/**\n\t * Binds the shader, disables depth writing, \n\t * enables blending, activates texture unit 0, and sends\n\t * default matrices and sampler2D uniforms to the shader.\n\t *\n\t * @method  begin\n\t */\n\tbegin: function() {\n\t\t//sprite batch doesn't hold a reference to GL since it is volatile\n\t\tvar gl = this.context.gl;\n\n\t\t//This binds the shader and mesh!\n\t\tBaseBatch.prototype.begin.call(this);\n\n\t\tthis.updateMatrices(); //send projection/transform to shader\n\n\t\t//upload the sampler uniform. not necessary every flush so we just\n\t\t//do it here.\n\t\tthis.shader.setUniformi('u_texture0', 0);\n\n\t\t//disable depth mask\n\t\tgl.depthMask(false);\n\t},\n\n\t/**\n\t * Ends the sprite batcher and flushes any remaining data to the GPU.\n\t * \n\t * @method end\n\t */\n\tend: function() {\n\t\t//sprite batch doesn't hold a reference to GL since it is volatile\n\t\tvar gl = this.context.gl;\n\n\t\t//just do direct parent call for speed here\n\t\t//This binds the shader and mesh!\n\t\tBaseBatch.prototype.end.call(this);\n\n\t\tgl.depthMask(true);\n\t},\n\n\t/**\n\t * Flushes the batch to the GPU. This should be called when\n\t * state changes, such as blend functions, depth or stencil states,\n\t * shaders, and so forth.\n\t * \n\t * @method flush\n\t */\n\tflush: function() {\n\t\t//ignore flush if texture is null or our batch is empty\n\t\tif (!this.texture) return;\n\t\tif (this.idx === 0) return;\n\t\tBaseBatch.prototype.flush.call(this);\n\t\tSpriteBatch.totalRenderCalls++;\n\t},\n\n\tdrawRegion: function(region, x, y, width, height) {\n\t\tthis.draw(\n\t\t\tregion.texture,\n\t\t\tx,\n\t\t\ty,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tregion.u,\n\t\t\tregion.v,\n\t\t\tregion.u2,\n\t\t\tregion.v2\n\t\t);\n\t},\n\n\t/**\n\t * Adds a sprite to this batch. The sprite is drawn in \n\t * screen-space with the origin at the upper-left corner (y-down).\n\t * \n\t * @method draw\n\t * @param  {Texture} texture the Texture\n\t * @param  {Number} x       the x position in pixels, defaults to zero\n\t * @param  {Number} y       the y position in pixels, defaults to zero\n\t * @param  {Number} width   the width in pixels, defaults to the texture width\n\t * @param  {Number} height  the height in pixels, defaults to the texture height\n\t * @param  {Number} u1      the first U coordinate, default zero\n\t * @param  {Number} v1      the first V coordinate, default zero\n\t * @param  {Number} u2      the second U coordinate, default one\n\t * @param  {Number} v2      the second V coordinate, default one\n\t */\n\tdraw: function(\n\t\ttexture,\n\t\tx,\n\t\ty,\n\t\twidth,\n\t\theight,\n\t\toriginX = 0,\n\t\toriginY = 0,\n\t\trotation = 0,\n\t\tscaleX = 1,\n\t\tscaleY = 1,\n\t\tu1 = 0,\n\t\tv1 = 0,\n\t\tu2 = 1,\n\t\tv2 = 1\n\t) {\n\t\tif (!this.drawing)\n\t\t\tthrow 'Illegal State: trying to draw a batch before begin()';\n\n\t\t//don't draw anything if GL tex doesn't exist..\n\t\tif (!texture) return;\n\n\t\tif (this.texture === null || this.texture.id !== texture.id) {\n\t\t\t//new texture.. flush previous data\n\t\t\tthis.flush();\n\t\t\tthis.texture = texture;\n\t\t} else if (this.idx == this.vertices.length) {\n\t\t\tthis.flush(); //we've reached our max, flush before pushing more data\n\t\t}\n\n\t\twidth = width === 0 ? width : width || texture.width;\n\t\theight = height === 0 ? height : height || texture.height;\n\t\tx = x || 0;\n\t\ty = y || 0;\n\n\t\tvar x1 = -originX;\n\t\tvar x2 = width - originX;\n\t\tvar x3 = width - originX;\n\t\tvar x4 = -originX;\n\n\t\tvar y1 = -originY;\n\t\tvar y2 = -originY;\n\t\tvar y3 = height - originY;\n\t\tvar y4 = height - originY;\n\n\t\tvar c = this.color;\n\n\t\tif (scaleX !== 1) {\n\t\t\tx1 = x1 * scaleX;\n\t\t\tx2 = x2 * scaleX;\n\t\t\tx3 = x3 * scaleX;\n\t\t\tx4 = x4 * scaleX;\n\t\t}\n\n\t\tif (scaleY !== 1) {\n\t\t\ty1 = y1 * scaleY;\n\t\t\ty2 = y2 * scaleY;\n\t\t\ty3 = y3 * scaleY;\n\t\t\ty4 = y4 * scaleY;\n\t\t}\n\n\t\tif (rotation !== 0) {\n\t\t\tvar cos = Math.cos(rotation);\n\t\t\tvar sin = Math.sin(rotation);\n\n\t\t\tvar rotatedX1 = cos * x1 - sin * y1;\n\t\t\tvar rotatedY1 = sin * x1 + cos * y1;\n\n\t\t\tvar rotatedX2 = cos * x2 - sin * y2;\n\t\t\tvar rotatedY2 = sin * x2 + cos * y2;\n\n\t\t\tvar rotatedX3 = cos * x3 - sin * y3;\n\t\t\tvar rotatedY3 = sin * x3 + cos * y3;\n\n\t\t\tvar rotatedX4 = cos * x4 - sin * y4;\n\t\t\tvar rotatedY4 = sin * x4 + cos * y4;\n\n\t\t\tx1 = rotatedX1;\n\t\t\tx2 = rotatedX2;\n\t\t\tx3 = rotatedX3;\n\t\t\tx4 = rotatedX4;\n\n\t\t\ty1 = rotatedY1;\n\t\t\ty2 = rotatedY2;\n\t\t\ty3 = rotatedY3;\n\t\t\ty4 = rotatedY4;\n\t\t}\n\n\t\tx1 += x + originX;\n\t\tx2 += x + originX;\n\t\tx3 += x + originX;\n\t\tx4 += x + originX;\n\n\t\ty1 += y + originY;\n\t\ty2 += y + originY;\n\t\ty3 += y + originY;\n\t\ty4 += y + originY;\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = x1;\n\t\tthis.vertices[this.idx++] = y1;\n\t\t//color\n\t\tthis.vertices[this.idx++] = c;\n\t\t//uv\n\t\tthis.vertices[this.idx++] = u1;\n\t\tthis.vertices[this.idx++] = v1;\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = x2;\n\t\tthis.vertices[this.idx++] = y2;\n\t\t//color\n\t\tthis.vertices[this.idx++] = c;\n\t\t//uv\n\t\tthis.vertices[this.idx++] = u2;\n\t\tthis.vertices[this.idx++] = v1;\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = x3;\n\t\tthis.vertices[this.idx++] = y3;\n\t\t//color\n\t\tthis.vertices[this.idx++] = c;\n\t\t//uv\n\t\tthis.vertices[this.idx++] = u2;\n\t\tthis.vertices[this.idx++] = v2;\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = x4;\n\t\tthis.vertices[this.idx++] = y4;\n\t\t//color\n\t\tthis.vertices[this.idx++] = c;\n\t\t//uv\n\t\tthis.vertices[this.idx++] = u1;\n\t\tthis.vertices[this.idx++] = v2;\n\t},\n\n\t/**\n\t * Adds a single quad mesh to this sprite batch from the given\n\t * array of vertices. The sprite is drawn in \n\t * screen-space with the origin at the upper-left corner (y-down).\n\t *\n\t * This reads 20 interleaved floats from the given offset index, in the format\n\t *\n\t *  { x, y, color, u, v,\n\t *      ...  }\n\t *\n\t * @method  drawVertices\n\t * @param {Texture} texture the Texture object\n\t * @param {Float32Array} verts an array of vertices\n\t * @param {Number} off the offset into the vertices array to read from\n\t */\n\tdrawVertices: function(texture, verts, off) {\n\t\tif (!this.drawing)\n\t\t\tthrow 'Illegal State: trying to draw a batch before begin()';\n\n\t\t//don't draw anything if GL tex doesn't exist..\n\t\tif (!texture) return;\n\n\t\tif (this.texture != texture) {\n\t\t\t//new texture.. flush previous data\n\t\t\tthis.flush();\n\t\t\tthis.texture = texture;\n\t\t} else if (this.idx == this.vertices.length) {\n\t\t\tthis.flush(); //we've reached our max, flush before pushing more data\n\t\t}\n\n\t\toff = off || 0;\n\t\t//TODO: use a loop here?\n\t\t//xy\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//color\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//uv\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//color\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//uv\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//color\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//uv\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\n\t\t//xy\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//color\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\t//uv\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t\tthis.vertices[this.idx++] = verts[off++];\n\t}\n});\n\n/**\n * The default vertex size, i.e. number of floats per vertex.\n * @attribute  VERTEX_SIZE\n * @static\n * @final\n * @type {Number}\n * @default  5\n */\nSpriteBatch.VERTEX_SIZE = 5;\n\n/**\n * Incremented after each draw call, can be used for debugging.\n *\n *     SpriteBatch.totalRenderCalls = 0;\n *\n *     ... draw your scene ...\n *\n *     console.log(\"Draw calls per frame:\", SpriteBatch.totalRenderCalls);\n *\n * \n * @attribute  totalRenderCalls\n * @static\n * @type {Number}\n * @default  0\n */\nSpriteBatch.totalRenderCalls = 0;\n\nSpriteBatch.DEFAULT_FRAG_SHADER = [\n\t'precision mediump float;',\n\t'varying vec2 vTexCoord0;',\n\t'varying vec4 vColor;',\n\t'uniform sampler2D u_texture0;',\n\n\t'void main(void) {',\n\t'   gl_FragColor = texture2D(u_texture0, vTexCoord0) * vColor;',\n\t'}'\n].join('\\n');\n\nSpriteBatch.DEFAULT_VERT_SHADER = [\n\t'attribute vec4 ' + ShaderProgram.POSITION_ATTRIBUTE + ';',\n\t'attribute vec4 ' + ShaderProgram.COLOR_ATTRIBUTE + ';',\n\t'attribute vec2 ' + ShaderProgram.TEXCOORD_ATTRIBUTE + '0;',\n\n\t'uniform mat4 u_projection;',\n\t'varying vec2 vTexCoord0;',\n\t'varying vec4 vColor;',\n\n\t'void main(void) {', ///TODO: use a projection and transform matrix\n\t'   gl_Position =  u_projection * ' + ShaderProgram.POSITION_ATTRIBUTE + ';',\n\t'   vTexCoord0 = ' + ShaderProgram.TEXCOORD_ATTRIBUTE + '0;',\n\t'   vColor = ' + ShaderProgram.COLOR_ATTRIBUTE + ';',\n\t'   vColor.a = vColor.a * (256.0/255.0);', //this is so the alpha sits at 0.0 or 1.0\n\t'}'\n].join('\\n');\n\nmodule.exports = SpriteBatch;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar fbemitter = {\n  EventEmitter: require('./lib/BaseEventEmitter'),\n  EmitterSubscription : require('./lib/EmitterSubscription')\n};\n\nmodule.exports = fbemitter;\n","var create = require('gl-texture2d')\nvar ndarray = require('ndarray')\n\nmodule.exports = function(gl) {\n    //fill an array with 0xff\n    var data = Array.apply(null, new Array(16))\n            .map(Number.prototype.valueOf, 0xFF);\n    //create a 2D ndarray\n    var array = ndarray(new Uint8Array(data), [2, 2, 4])\n    return create(gl, array)\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var Class = require('klasse');\n\nvar GLContextWrapper = new Class({\n    \n    initialize: function GLContextWrapper(gl) {\n        this.gl = gl;\n    },\n\n    addManagedObject: function(e) { },\n    removeManagedObject: function(e) { },\n\n    width: {\n        get: function() {\n            return this.gl.canvas.width;\n        },\n        set: function(width) {\n            this.gl.canvas.width = width;\n        }\n    },\n\n    height: {\n        get: function() {\n            return this.gl.canvas.height;\n        },\n        set: function(height) {\n            this.gl.canvas.height = height;\n        }\n    }\n});\n\nmodule.exports = GLContextWrapper;","/**\n * Shader utilities for kami.\n * \n * @module kami-shader\n */\n\nvar Class = require('klasse');\nvar compileShader = require('webgl-compile-shader');\nvar wrapContext = require('kami-util').wrapContext;\n\nvar ShaderProgram = new Class({\n\t\n\t/**\n\t * Creates a new ShaderProgram from the given source, and an optional map of attribute\n\t * locations as <name, index> pairs.\n\t *\n\t * _Note:_ Chrome version 31 was giving me issues with attribute locations -- you may\n\t * want to omit this to let the browser pick the locations for you.\t\n\t *\n\t * @class  ShaderProgram\n\t * @constructor\n\t * @param  {WebGLRenderingContext|WebGLContext} context      the context to manage this object\n\t * @param  {String} vertSource         the vertex shader source\n\t * @param  {String} fragSource         the fragment shader source\n\t * @param  {Object} attributeLocations the attribute locations\n\t */\n\tinitialize: function ShaderProgram(context, vertSource, fragSource, attributeLocations) {\n\t\tif (!vertSource || !fragSource)\n\t\t\tthrow \"vertex and fragment shaders must be defined\";\n\t\tif (!context || typeof context !== \"object\")\n\t\t\tthrow \"valid GL context not specified to ShaderProgram\";\n\n\t\tthis.context = wrapContext(context);\n\n\t\tthis.vertShader = null;\n\t\tthis.fragShader = null;\n\t\tthis.program = null;\n\t\tthis.log = \"\";\n\n\t\tthis.uniformCache = null;\n\t\tthis.attributeCache = null;\n\n\t\tthis.attributeLocations = attributeLocations;\n\n\t\t//We trim so that the GLSL line numbers are\n\t\t//accurate on shader log\n\t\tthis.vertSource = vertSource.trim();\n\t\tthis.fragSource = fragSource.trim();\n\n\t\t//Adds this shader to the context, to be managed\n\t\t//This has no effect if the passed context is not a kami-context type\n\t\tthis.context.addManagedObject(this);\n\t\tthis.create();\n\t},\n\n\t/** \n\t * This is called during the ShaderProgram constructor,\n\t * and may need to be called again after context loss and restore.\n\t * \n\t * @method  create\n\t */\n\tcreate: function() {\n\t\tthis.gl = this.context.gl;\n\t\tthis._compileShaders();\n\t},\n\n\t//Compiles the shaders, throwing an error if the program was invalid.\n\t_compileShaders: function() {\n\t\tvar gl = this.gl; \n\t\t\n\t\tvar info = compileShader({\n\t\t\tgl: gl,\n\t\t\tvertex: this.vertSource,\n\t\t\tfragment: this.fragSource,\n\t\t\tverbose: ShaderProgram.VERBOSE_COMPILE,\n\t\t\tattributeLocations: this.attributeLocations\n\t\t});\n\n\t\tthis.log = info.log;\n\t\tthis.program = info.program;\n\t\tthis.vertShader = info.vertex;\n\t\tthis.fragShader = info.fragment;\n\t\t\n\t\tif (ShaderProgram.VERBOSE_COMPILE && this.log)\n\t\t\tconsole.warn(this.log);\n\n\t\tthis._fetchUniforms();\n\t\tthis._fetchAttributes();\n\t},\n\n\t_fetchUniforms: function() {\n\t\tvar gl = this.gl;\n\n\t\tthis.uniformCache = {};\n\n\t\tvar len = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n\t\tif (!len) //null or zero\n\t\t\treturn;\n\n\t\tfor (var i=0; i<len; i++) {\n\t\t\tvar info = gl.getActiveUniform(this.program, i);\n\t\t\tif (info === null) \n\t\t\t\tcontinue;\n\t\t\tvar name = info.name;\n\t\t\tvar location = gl.getUniformLocation(this.program, name);\n\t\t\t\n\t\t\tthis.uniformCache[name] = {\n\t\t\t\tsize: info.size,\n\t\t\t\ttype: info.type,\n\t\t\t\tlocation: location\n\t\t\t};\n\t\t}\n\t},\n\n\t_fetchAttributes: function() { \n\t\tvar gl = this.gl; \n\n\t\tthis.attributeCache = {};\n\n\t\tvar len = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n\t\tif (!len) //null or zero\n\t\t\treturn;\t\n\n\t\tfor (var i=0; i<len; i++) {\n\t\t\tvar info = gl.getActiveAttrib(this.program, i);\n\t\t\tif (info === null) \n\t\t\t\tcontinue;\n\t\t\tvar name = info.name;\n\n\t\t\t//the attrib location is a simple index\n\t\t\tvar location = gl.getAttribLocation(this.program, name);\n\t\t\t\n\t\t\tthis.attributeCache[name] = {\n\t\t\t\tsize: info.size,\n\t\t\t\ttype: info.type,\n\t\t\t\tlocation: location\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Called to bind this shader. Note that there is no \"unbind\" since\n\t * technically such a thing is not possible in the programmable pipeline.\n\t *\n\t * You must bind a shader before settings its uniforms.\n\t * \n\t * @method bind\n\t */\n\tbind: function() {\n\t\tthis.gl.useProgram(this.program);\n\t},\n\n\n\t/**\n\t * Destroys this shader and its resources. You should not try to use this\n\t * after destroying it.\n\t * @method  destroy\n\t */\n\tdestroy: function() {\n\t\tif (this.context)\n\t\t\tthis.context.removeManagedObject(this);\n\n\t\tif (this.gl && this.program) {\n\t\t\tvar gl = this.gl;\n\n\t\t    gl.detachShader(this.program, this.vertShader);\n\t\t    gl.detachShader(this.program, this.fragShader);\n\t\t    gl.deleteShader(this.vertShader);\n\t\t    gl.deleteShader(this.fragShader);\n\n\t\t\tgl.deleteProgram(this.program);\n\t\t}\n\t\tthis.attributeCache = null;\n\t\tthis.uniformCache = null;\n\t\tthis.vertShader = null;\n\t\tthis.fragShader = null;\n\t\tthis.program = null;\n\t\tthis.gl = null;\n\t\tthis.context = null;\n\t},\n\n\t/**\n\t * Returns the cached uniform info (size, type, location).\n\t * If the uniform is not found in the cache, it is assumed\n\t * to not exist, and this method returns null.\n\t *\n\t * This may return null even if the uniform is defined in GLSL:\n\t * if it is _inactive_ (i.e. not used in the program) then it may\n\t * be optimized out.\n\t *\n\t * @method  getUniformInfo\n\t * @param  {String} name the uniform name as defined in GLSL\n\t * @return {Object} an object containing location, size, and type\n\t */\n\tgetUniformInfo: function(name) {\n\t\treturn this.uniformCache[name] || null; \n\t},\n\n\t/**\n\t * Returns the cached attribute info (size, type, location).\n\t * If the attribute is not found in the cache, it is assumed\n\t * to not exist, and this method returns null.\n\t *\n\t * This may return null even if the attribute is defined in GLSL:\n\t * if it is _inactive_ (i.e. not used in the program or disabled) \n\t * then it may be optimized out.\n\t *\n\t * @method  getAttributeInfo\n\t * @param  {String} name the attribute name as defined in GLSL\n\t * @return {object} an object containing location, size and type\n\t */\n\tgetAttributeInfo: function(name) {\n\t\treturn this.attributeCache[name] || null; \n\t},\n\n\n\t/**\n\t * Returns the cached uniform location object.\n\t * If the uniform is not found, this method returns null.\n\t *\n\t * @method  getAttributeLocation\n\t * @param  {String} name the uniform name as defined in GLSL\n\t * @return {GLint} the location object\n\t */\n\tgetAttributeLocation: function(name) { //TODO: make faster, don't cache\n\t\tvar info = this.getAttributeInfo(name);\n\t\treturn info ? info.location : null;\n\t},\n\n\t/**\n\t * Returns the cached uniform location object, assuming it exists\n\t * and is active. Note that uniforms may be inactive if \n\t * the GLSL compiler deemed them unused.\n\t *\n\t * @method  getUniformLocation\n\t * @param  {String} name the uniform name as defined in GLSL\n\t * @return {WebGLUniformLocation} the location object\n\t */\n\tgetUniformLocation: function(name) {\n\t\tvar info = this.getUniformInfo(name);\n\t\treturn info ? info.location : null;\n\t},\n\n\t/**\n\t * Returns true if the uniform is active and found in this\n\t * compiled program. Note that uniforms may be inactive if \n\t * the GLSL compiler deemed them unused.\n\t *\n\t * @method  hasUniform\n\t * @param  {String}  name the uniform name\n\t * @return {Boolean} true if the uniform is found and active\n\t */\n\thasUniform: function(name) {\n\t\treturn this.getUniformInfo(name) !== null;\n\t},\n\n\t/**\n\t * Returns true if the attribute is active and found in this\n\t * compiled program.\n\t *\n\t * @method  hasAttribute\n\t * @param  {String}  name the attribute name\n\t * @return {Boolean} true if the attribute is found and active\n\t */\n\thasAttribute: function(name) {\n\t\treturn this.getAttributeInfo(name) !== null;\n\t},\n\n\t/**\n\t * Returns the uniform value by name.\n\t *\n\t * @method  getUniform\n\t * @param  {String} name the uniform name as defined in GLSL\n\t * @return {any} The value of the WebGL uniform\n\t */\n\tgetUniform: function(name) {\n\t\treturn this.gl.getUniform(this.program, this.getUniformLocation(name));\n\t},\n\n\t/**\n\t * Returns the uniform value at the specified WebGLUniformLocation.\n\t *\n\t * @method  getUniformAt\n\t * @param  {WebGLUniformLocation} location the location object\n\t * @return {any} The value of the WebGL uniform\n\t */\n\tgetUniformAt: function(location) {\n\t\treturn this.gl.getUniform(this.program, location);\n\t},\n\n\t/**\n\t * A convenience method to set uniformi from the given arguments.\n\t * We determine which GL call to make based on the number of arguments\n\t * passed. For example, `setUniformi(\"var\", 0, 1)` maps to `gl.uniform2i`.\n\t * \n\t * @method  setUniformi\n\t * @param {String} name        \t\tthe name of the uniform\n\t * @param {GLint} x  the x component for ints\n\t * @param {GLint} y  the y component for ivec2\n\t * @param {GLint} z  the z component for ivec3\n\t * @param {GLint} w  the w component for ivec4\n\t */\n\tsetUniformi: function(name, x, y, z, w) {\n\t\t'use strict';\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tswitch (arguments.length) {\n\t\t\tcase 2: gl.uniform1i(loc, x); return true;\n\t\t\tcase 3: gl.uniform2i(loc, x, y); return true;\n\t\t\tcase 4: gl.uniform3i(loc, x, y, z); return true;\n\t\t\tcase 5: gl.uniform4i(loc, x, y, z, w); return true;\n\t\t\tdefault:\n\t\t\t\tthrow \"invalid arguments to setUniformi\"; \n\t\t}\n\t},\n\n\t/**\n\t * A convenience method to set uniformf from the given arguments.\n\t * We determine which GL call to make based on the number of arguments\n\t * passed. For example, `setUniformf(\"var\", 0, 1)` maps to `gl.uniform2f`.\n\t * \n\t * @method  setUniformf\n\t * @param {String} name        \t\tthe name of the uniform\n\t * @param {GLfloat} x  the x component for floats\n\t * @param {GLfloat} y  the y component for vec2\n\t * @param {GLfloat} z  the z component for vec3\n\t * @param {GLfloat} w  the w component for vec4\n\t */\n\tsetUniformf: function(name, x, y, z, w) {\n\t\t'use strict';\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tswitch (arguments.length) {\n\t\t\tcase 2: gl.uniform1f(loc, x); return true;\n\t\t\tcase 3: gl.uniform2f(loc, x, y); return true;\n\t\t\tcase 4: gl.uniform3f(loc, x, y, z); return true;\n\t\t\tcase 5: gl.uniform4f(loc, x, y, z, w); return true;\n\t\t\tdefault:\n\t\t\t\tthrow \"invalid arguments to setUniformf\"; \n\t\t}\n\t},\n\n\t//I guess we won't support sequence<GLfloat> .. whatever that is ??\n\t\n\n\t///// \n\t\n\t/**\n\t * A convenience method to set uniformNfv from the given ArrayBuffer.\n\t * We determine which GL call to make based on the length of the array \n\t * buffer (for 1-4 component vectors stored in a Float32Array). To use\n\t * this method to upload data to uniform arrays, you need to specify the\n\t * 'count' parameter; i.e. the data type you are using for that array. If\n\t * specified, this will dictate whether to call uniform1fv, uniform2fv, etc.\n\t *\n\t * @method  setUniformfv\n\t * @param {String} name        \t\tthe name of the uniform\n\t * @param {ArrayBuffer} arrayBuffer the array buffer\n\t * @param {Number} count            optional, the explicit data type count, e.g. 2 for vec2\n\t */\n\tsetUniformfv: function(name, arrayBuffer, count) {\n\t\t'use strict';\n\t\tcount = count || arrayBuffer.length;\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tswitch (count) {\n\t\t\tcase 1: gl.uniform1fv(loc, arrayBuffer); return true;\n\t\t\tcase 2: gl.uniform2fv(loc, arrayBuffer); return true;\n\t\t\tcase 3: gl.uniform3fv(loc, arrayBuffer); return true;\n\t\t\tcase 4: gl.uniform4fv(loc, arrayBuffer); return true;\n\t\t\tdefault:\n\t\t\t\tthrow \"invalid arguments to setUniformf\"; \n\t\t}\n\t},\n\n\t/**\n\t * A convenience method to set uniformNiv from the given ArrayBuffer.\n\t * We determine which GL call to make based on the length of the array \n\t * buffer (for 1-4 component vectors stored in a int array). To use\n\t * this method to upload data to uniform arrays, you need to specify the\n\t * 'count' parameter; i.e. the data type you are using for that array. If\n\t * specified, this will dictate whether to call uniform1fv, uniform2fv, etc.\n\t *\n\t * @method  setUniformiv\n\t * @param {String} name        \t\tthe name of the uniform\n\t * @param {ArrayBuffer} arrayBuffer the array buffer\n\t * @param {Number} count            optional, the explicit data type count, e.g. 2 for ivec2\n\t */\n\tsetUniformiv: function(name, arrayBuffer, count) {\n\t\t'use strict';\n\t\tcount = count || arrayBuffer.length;\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tswitch (count) {\n\t\t\tcase 1: gl.uniform1iv(loc, arrayBuffer); return true;\n\t\t\tcase 2: gl.uniform2iv(loc, arrayBuffer); return true;\n\t\t\tcase 3: gl.uniform3iv(loc, arrayBuffer); return true;\n\t\t\tcase 4: gl.uniform4iv(loc, arrayBuffer); return true;\n\t\t\tdefault:\n\t\t\t\tthrow \"invalid arguments to setUniformf\"; \n\t\t}\n\t},\n\n\t/**\n\t * This is a convenience function to pass a Matrix3 (from vecmath,\n\t * kami's preferred math library) or a Float32Array (e.g. gl-matrix)\n\t * to a shader. If mat is an object with \"val\", it is considered to be\n\t * a Matrix3, otherwise assumed to be a typed array being passed directly\n\t * to the shader.\n\t * \n\t * @param {String} name the uniform name\n\t * @param {Matrix3|Float32Array} mat a Matrix3 or Float32Array\n\t * @param {Boolean} transpose whether to transpose the matrix, default false\n\t */\n\tsetUniformMatrix3: function(name, mat, transpose) {\n\t\t'use strict';\n\t\tvar arr = typeof mat === \"object\" && mat.val ? mat.val : mat;\n\t\ttranspose = !!transpose; //to boolean\n\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tgl.uniformMatrix3fv(loc, transpose, arr)\n\t},\n\n\t/**\n\t * This is a convenience function to pass a Matrix4 (from vecmath,\n\t * kami's preferred math library) or a Float32Array (e.g. gl-matrix)\n\t * to a shader. If mat is an object with \"val\", it is considered to be\n\t * a Matrix4, otherwise assumed to be a typed array being passed directly\n\t * to the shader.\n\t * \n\t * @param {String} name the uniform name\n\t * @param {Matrix4|Float32Array} mat a Matrix4 or Float32Array\n\t * @param {Boolean} transpose whether to transpose the matrix, default false\n\t */\n\tsetUniformMatrix4: function(name, mat, transpose) {\n\t\t'use strict';\n\t\tvar arr = typeof mat === \"object\" && mat.val ? mat.val : mat;\n\t\ttranspose = !!transpose; //to boolean\n\n\t\tvar gl = this.gl;\n\t\tvar loc = this.getUniformLocation(name);\n\t\tif (loc === null)\n\t\t\treturn false;\n\t\tgl.uniformMatrix4fv(loc, transpose, arr)\n\t} \n \n});\n\n//Some default attribute names that parts of kami will use\n//when creating a standard shader.\nShaderProgram.POSITION_ATTRIBUTE = \"Position\";\nShaderProgram.NORMAL_ATTRIBUTE = \"Normal\";\nShaderProgram.COLOR_ATTRIBUTE = \"Color\";\nShaderProgram.TEXCOORD_ATTRIBUTE = \"TexCoord\";\n\n/**\n * Whether to include verbose warnings during shader compilation.\n * This includes:\n *\n *   - Printing full shaders (with line numbers) when there is an error\n *   - Printing warnings even if the shader compiled successfully \n *   \n * @property {Boolean} VERBOSE_COMPILE\n */\nShaderProgram.VERBOSE_COMPILE = true;\n\nmodule.exports = ShaderProgram;","var getGL = require('webgl-context');\n\nmodule.exports = function(opts) {\n    if (!opts || (!opts.vertex || !opts.fragment))\n        throw \"must specify 'vertex' and 'fragment' source\";\n    var vertSource = (opts.vertex).trim();\n    var fragSource = (opts.fragment).trim();\n\n\n    var gl = opts.gl;\n    if (!gl) {\n        gl = getGL();\n        if (!gl)\n            throw new Error(\"WebGL not supported -- try another browser\");\n    }\n    return compile(gl, vertSource, fragSource, opts.attributeLocations, opts.verbose);\n};\n\n//Compiles the shaders, throwing an error if the program was invalid.\nfunction compile(gl, vertSource, fragSource, attribs, verbose) {\n    var log = \"\";\n\n    var vert = loadShader(gl, gl.VERTEX_SHADER, vertSource, verbose);\n    var frag = loadShader(gl, gl.FRAGMENT_SHADER, fragSource, verbose);\n\n    var vertShader = vert.shader;\n    var fragShader = frag.shader;\n\n    log += vert.log + \"\\n\" + frag.log;\n\n    var program = gl.createProgram();\n\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n\n    //TODO: Chrome seems a bit buggy with attribute bindings...\n    if (attribs) {\n        for (var key in attribs) {\n            if (attribs.hasOwnProperty(key)) {\n                gl.bindAttribLocation(program, Math.floor(attribs[key]), key);\n            }\n        }\n    }\n\n    gl.linkProgram(program); \n\n    log += gl.getProgramInfoLog(program) || \"\";\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        if (verbose) {\n            console.error(\"Shader error:\\n\"+log);\n            console.error(\"Problematic shaders:\\nVERTEX_SHADER:\\n\"+addLineNumbers(vertSource)\n                    +\"\\n\\nFRAGMENT_SHADER:\\n\"+addLineNumbers(fragSource));\n        }\n        //delete before throwing error    \n        gl.detachShader(program, vertShader);\n        gl.detachShader(program, fragShader);\n        gl.deleteShader(vertShader);\n        gl.deleteShader(fragShader);\n        \n        throw new Error(\"Error linking the shader program:\\n\" + log);\n\n    }\n    return {\n        program: program,\n        vertex: vertShader,\n        fragment: fragShader,\n        log: log.trim()\n    };\n}\n\nfunction loadShader(gl, type, source, verbose) {\n    var shader = gl.createShader(type);\n    if (!shader) //should not occur...\n        return -1;\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    //we do this so the user knows which shader has the error\n    var typeStr = (type === gl.VERTEX_SHADER) ? \"vertex\" : \"fragment\";\n\n    var logResult = gl.getShaderInfoLog(shader) || \"\";\n    \n\n    //Chrome will just print \"Uncaught error object\" if the Error.message \n    //is longer than 250 chars... WTF!\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS) ) {\n        if (verbose) {\n            console.error(\"Shader error:\\n\"+logResult);\n            console.error( \"Problematic \"+typeStr+\" shader:\\n\" + addLineNumbers(source) );\n        }\n        throw new Error(\"Could not compile \"+typeStr+\" shader:\\n\"+logResult);\n    }\n    if (!shader)\n        throw new Error(\"gl.createShader returned 0 for \"+typeStr+\" shader.\\n\"+logResult);\n    return {\n        shader: shader,\n        log: logResult\n    };\n}\n\nfunction addLineNumbers( string ) {\n    var lines = string.split( '\\n' );\n    for ( var i = 0; i < lines.length; i ++ ) {\n        lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n    }\n    return lines.join( '\\n' );\n}","module.exports = function(opts) {\n    opts = opts||{};\n    var canvas = opts.canvas || document.createElement(\"canvas\");\n    if (typeof opts.width === \"number\")\n        canvas.width = opts.width;\n    if (typeof opts.height === \"number\")\n        canvas.height = opts.height;\n    \n    var attribs = (opts.attributes || opts.attribs || {});\n    try {\n        gl = (canvas.getContext('webgl', attribs) || canvas.getContext('experimental-webgl', attribs));\n    } catch (e) {\n        gl = null;\n    }\n    return gl;\n};","/**\n * An abstract batcher for dynamic geometry. This handles\n * the basics, like setting blend functions, color, and so forth.\n * \n * @module kami-base-batch\n */\n\nvar Class = require('klasse');\nvar Mesh = require('kami-mesh-buffer');\nvar BaseObject = require('kami-util').BaseObject;\n\nvar colorToFloat = require('number-util').colorToFloat;\n\nvar BaseMixins = require('./mixins');\n\n/** \n * A batcher, typically used for quads (2 tris, indexed), but may\n * also be used for other dynamic types of geometry. This is generally\n * not static; the vertex buffers are using DYNAMIC_DRAW for performance.\n * \n * This is used internally; users should look at \n * {{#crossLink \"SpriteBatch\"}}{{/crossLink}} instead, which inherits from this\n * class. \n * \n * The batcher itself is not managed by WebGLContext; however, it makes\n * use of Mesh and Texture which will be managed. For this reason, the batcher\n * does not hold a direct reference to the GL state.\n *\n * Subclasses must implement the following:  \n * {{#crossLink \"BaseBatch/_createShader:method\"}}{{/crossLink}}  \n * {{#crossLink \"BaseBatch/_createVertexAttributes:method\"}}{{/crossLink}}  \n * {{#crossLink \"BaseBatch/getVertexSize:method\"}}{{/crossLink}}  \n * \n * @class BaseBatch\n * @protected\n * @abstract\n * \n * @constructor\n * @param {WebGLContext} context the context this batcher belongs to\n * @param {Object} options the options\n * @param {Number} options.size the optional size of this batch, i.e. max number of quads\n * @default  500\n */\nvar BaseBatch = new Class({\n\n\tMixins: BaseMixins,\n\n\t//Constructor\n\tinitialize: function BaseBatch(context, options) {\n\t\tBaseObject.call(this, context);\n\t\toptions = options||{};\n\n\t\tvar shader = this._createShader();\n\t\t\n\t\tthis.idx = 0;\n\n\t\tthis.mesh = this._createMesh(options.size);\n\n\t\t//set up the properties for our base batch...\n\t\tBaseMixins.call(this, this.context.gl, shader);\n\t},\n\n\t/**\n\t * Called from the constructor to create a new Mesh \n\t * based on the expected batch size. Should set up\n\t * verts & indices properly.\n\t *\n\t * Users should not call this directly; instead, it\n\t * should only be implemented by subclasses.\n\t * \n\t * @method _createMesh\n\t * @param {Number} size the size passed through the constructor\n\t */\n\t_createMesh: function(size) {\n\t\tsize = size||500;\n\t\t// 65535 is max index, so 65535 / 6 = 10922.\n\t\tif (size > 10922)\n\t\t\tthrow \"Can't have more than 10922 sprites per batch: \" + size;\n\t\t\n\t\t//the total number of floats in our batch\n\t\tvar numVerts = size * 4 * this.getVertexSize();\n\t\t//the total number of indices in our batch\n\t\tvar numIndices = size * 6;\n\t\tvar gl = this.context.gl;\n\n\t\t//vertex data\n\t\tthis.vertices = new Float32Array(numVerts);\n\t\t//index data\n\t\tthis.indices = new Uint16Array(numIndices); \n\t\t\n\t\tfor (var i=0, j=0; i < numIndices; i += 6, j += 4) \n\t\t{\n\t\t\tthis.indices[i + 0] = j + 0; \n\t\t\tthis.indices[i + 1] = j + 1;\n\t\t\tthis.indices[i + 2] = j + 2;\n\t\t\tthis.indices[i + 3] = j + 0;\n\t\t\tthis.indices[i + 4] = j + 2;\n\t\t\tthis.indices[i + 5] = j + 3;\n\t\t}\n\n\t\tvar mesh = new Mesh(this.context, false, \n\t\t\t\t\t\tnumVerts, numIndices, this._createVertexAttributes());\n\t\tmesh.vertices = this.vertices;\n\t\tmesh.indices = this.indices;\n\t\tmesh.vertexUsage = gl.DYNAMIC_DRAW;\n\t\tmesh.indexUsage = gl.STATIC_DRAW;\n\t\tmesh.dirty = true;\n\t\treturn mesh;\n\t},\n\n\t/**\n\t * Returns a shader for this batch. If you plan to support\n\t * multiple instances of your batch, it may or may not be wise\n\t * to use a shared shader to save resources.\n\t * \n\t * This method initially throws an error; so it must be overridden by\n\t * subclasses of BaseBatch.\n\t *\n\t * @method  _createShader\n\t * @return {Number} the size of a vertex, in # of floats\n\t */\n\t_createShader: function() {\n\t\tthrow \"_createShader not implemented\"\n\t},\t\n\n\t/**\n\t * Returns an array of vertex attributes for this mesh; \n\t * subclasses should implement this with the attributes \n\t * expected for their batch.\n\t *\n\t * This method initially throws an error; so it must be overridden by\n\t * subclasses of BaseBatch.\n\t *\n\t * @method _createVertexAttributes\n\t * @return {Array} an array of Mesh.VertexAttrib objects\n\t */\n\t_createVertexAttributes: function() {\n\t\tthrow \"_createVertexAttributes not implemented\";\n\t},\n\n\n\t/**\n\t * Returns the number of floats per vertex for this batcher.\n\t * \n\t * This method initially throws an error; so it must be overridden by\n\t * subclasses of BaseBatch.\n\t *\n\t * @method  getVertexSize\n\t * @return {Number} the size of a vertex, in # of floats\n\t */\n\tgetVertexSize: function() {\n\t\tthrow \"getVertexSize not implemented\";\n\t},\n\n\t\n\t/** \n\t * Begins the sprite batch. This will bind the shader\n\t * and mesh. Subclasses may want to disable depth or \n\t * set up blending.\n\t *\n\t * @method  begin\n\t */\n\tbegin: function()  {\n\t\tif (this.drawing) \n\t\t\tthrow \"batch.end() must be called before begin\";\n\t\tthis.drawing = true;\n\n\t\tthis.shader.bind();\n\n\t\t//bind the attributes now to avoid redundant calls\n\t\tthis.mesh.bind(this.shader);\n\n\t\tif (this._blendingEnabled) {\n\t\t\tvar gl = this.context.gl;\n\t\t\tgl.enable(gl.BLEND);\n\t\t}\n\t},\n\n\t/** \n\t * Ends the sprite batch. This will flush any remaining \n\t * data and set GL state back to normal.\n\t * \n\t * @method  end\n\t */\n\tend: function()  {\n\t\tif (!this.drawing)\n\t\t\tthrow \"batch.begin() must be called before end\";\n\t\tif (this.idx > 0)\n\t\t\tthis.flush();\n\t\tthis.drawing = false;\n\n\t\tthis.mesh.unbind(this.shader);\n\n\t\tif (this._blendingEnabled) {\n\t\t\tvar gl = this.context.gl;\n\t\t\tgl.disable(gl.BLEND);\n\t\t}\n\t},\n\n\t/** \n\t * Called before rendering to bind new textures.\n\t * This method does nothing by default.\n\t *\n\t * @method  _preRender\n\t */\n\t_preRender: function()  {\n\t},\n\n\t/**\n\t * Flushes the batch by pushing the current data\n\t * to GL.\n\t * \n\t * @method flush\n\t */\n\tflush: function()  {\n\t\tif (this.idx===0)\n\t\t\treturn;\n\n\t\tvar gl = this.context.gl;\n\n\t\t//premultiplied alpha\n\t\tif (this._blendingEnabled) {\n\t\t\t//set either to null if you want to call your own \n\t\t\t//blendFunc or blendFuncSeparate\n\t\t\tif (this._blendSrc && this._blendDst)\n\t\t\t\tgl.blendFunc(this._blendSrc, this._blendDst); \n\t\t}\n\n\t\tthis._preRender();\n\n\t\t//number of sprites in batch\n\t\tvar numComponents = this.getVertexSize();\n\t\tvar spriteCount = (this.idx / (numComponents * 4));\n\t\t\n\t\t//draw the sprites\n\t\tthis.mesh.verticesDirty = true;\n\t\tthis.mesh.draw(gl.TRIANGLES, spriteCount * 6, 0, this.idx);\n\n\t\tthis.idx = 0;\n\t},\n\n\t/**\n\t * Destroys the batch, deleting its buffers and removing it from the\n\t * WebGLContext management. Trying to use this\n\t * batch after destroying it can lead to unpredictable behaviour.\n\t *\n\t * If `ownsShader` is true, this will also delete the `defaultShader` object.\n\t * \n\t * @method destroy\n\t */\n\tdestroy: function() {\n\t\tthis.vertices = null;\n\t\tthis.indices = null;\n\t\tthis.maxVertices = 0;\n\n\t\tif (this.ownsShader && this.defaultShader)\n\t\t\tthis.defaultShader.destroy();\n\t\tthis.defaultShader = null;\n\t\tthis._shader = null; // remove reference to whatever shader is currently being used\n\n\t\tif (this.mesh) \n\t\t\tthis.mesh.destroy();\n\t\tthis.mesh = null;\n\t}\n});\n\nmodule.exports = BaseBatch;\n","var colorToFloat = require('number-util').colorToFloat;\nvar Class = require('klasse');\n\nmodule.exports = new Class({\n\n\tinitialize: \n\tfunction BaseBatchMixins(gl, shader) {\n\t\tthis._blendSrc = gl.ONE;\n\t\tthis._blendDst = gl.ONE_MINUS_SRC_ALPHA;\n\t\tthis._blendingEnabled = true;\n\t\tthis._shader = shader;\n\n\t\t/**\n\t\t * This shader will be used whenever \"null\" is passed\n\t\t * as the batch's shader. \n\t\t *\n\t\t * @property {ShaderProgram} shader\n\t\t */\n\t\tthis.defaultShader = this._shader;\n\n\t\t/**\n\t\t * By default, a SpriteBatch is created with its own ShaderProgram,\n\t\t * stored in `defaultShader`. If this flag is true, on deleting the SpriteBatch, its\n\t\t * `defaultShader` will also be deleted. If this flag is false, no shaders\n\t\t * will be deleted on destroy.\n\t\t *\n\t\t * Note that if you re-assign `defaultShader`, you will need to dispose the previous\n\t\t * default shader yoursel. \n\t\t *\n\t\t * @property ownsShader\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.ownsShader = true;\n\n\t\t/**\n\t\t * Whether we are currently drawing to the batch. Do not modify.\n\t\t * \n\t\t * @property {Boolean} drawing\n\t\t */\n\t\tthis.drawing = false;\n\n\t\t/**\n\t\t * The ABGR packed color, as a single float. The default\n\t\t * value is the color white (255, 255, 255, 255).\n\t\t *\n\t\t * @property {Number} color\n\t\t * @readOnly \n\t\t */\n\t\tthis.color = colorToFloat(255, 255, 255, 255);\n\t\t\n\t\t/**\n\t\t * Whether to premultiply alpha on calls to setColor. \n\t\t * This is true by default, so that we can conveniently write:\n\t\t *\n\t\t *     batch.setColor(1, 0, 0, 0.25); //tints red with 25% opacity\n\t\t *\n\t\t * If false, you must premultiply the colors yourself to achieve\n\t\t * the same tint, like so:\n\t\t *\n\t\t *     batch.setColor(0.25, 0, 0, 0.25);\n\t\t * \n\t\t * @property premultiplied\n\t\t * @type {Boolean}\n\t\t * @default  true\n\t\t */\n\t\tthis.premultiplied = true;\n\t},\n\n\t/**\n\t * A property to enable or disable blending for this sprite batch. If\n\t * we are currently drawing, this will first flush the batch, and then\n\t * update GL_BLEND state (enabled or disabled) with our new value.\n\t * \n\t * @property {Boolean} blendingEnabled\n\t */\n\tblendingEnabled: {\n\t\tset: function(val) {\n\t\t\tvar old = this._blendingEnabled;\n\t\t\tif (this.drawing)\n\t\t\t\tthis.flush();\n\n\t\t\tthis._blendingEnabled = val;\n\n\t\t\t//if we have a new value, update it.\n\t\t\t//this is because blend is done in begin() / end() \n\t\t\tif (this.drawing && old != val) {\n\t\t\t\tvar gl = this.context.gl;\n\t\t\t\tif (val)\n\t\t\t\t\tgl.enable(gl.BLEND);\n\t\t\t\telse\n\t\t\t\t\tgl.disable(gl.BLEND);\n\t\t\t}\n\n\t\t},\n\n\t\tget: function() {\n\t\t\treturn this._blendingEnabled;\n\t\t}\n\t},\n\n\t/**\n\t * Sets the blend source parameters. \n\t * If we are currently drawing, this will flush the batch.\n\t *\n\t * Setting either src or dst to `null` or a falsy value tells the SpriteBatch\n\t * to ignore gl.blendFunc. This is useful if you wish to use your\n\t * own blendFunc or blendFuncSeparate. \n\t * \n\t * @property {GLenum} blendDst \n\t */\n\tblendSrc: {\n\t\tset: function(val) {\n\t\t\tif (this.drawing)\n\t\t\t\tthis.flush();\n\t\t\tthis._blendSrc = val;\n\t\t},\n\n\t\tget: function() {\n\t\t\treturn this._blendSrc;\n\t\t}\n\t},\n\n\t/**\n\t * Sets the blend destination parameters. \n\t * If we are currently drawing, this will flush the batch.\n\t *\n\t * Setting either src or dst to `null` or a falsy value tells the SpriteBatch\n\t * to ignore gl.blendFunc. This is useful if you wish to use your\n\t * own blendFunc or blendFuncSeparate. \n\t *\n\t * @property {GLenum} blendSrc \n\t */\n\tblendDst: {\n\t\tset: function(val) {\n\t\t\tif (this.drawing)\n\t\t\t\tthis.flush();\n\t\t\tthis._blendDst = val;\n\t\t},\n\n\t\tget: function() {\n\t\t\treturn this._blendDst;\n\t\t}\n\t},\n\n\t/**\n\t * Sets the blend source and destination parameters. This is \n\t * a convenience function for the blendSrc and blendDst setters.\n\t * If we are currently drawing, this will flush the batch.\n\t *\n\t * Setting either to `null` or a falsy value tells the SpriteBatch\n\t * to ignore gl.blendFunc. This is useful if you wish to use your\n\t * own blendFunc or blendFuncSeparate. \n\t *\n\t * @method  setBlendFunction\n\t * @param {GLenum} blendSrc the source blend parameter\n\t * @param {GLenum} blendDst the destination blend parameter\n\t */\n\tsetBlendFunction: function(blendSrc, blendDst) {\n\t\tthis.blendSrc = blendSrc;\n\t\tthis.blendDst = blendDst;\n\t},\n\n\t/**\n\t * This is a setter/getter for this batch's current ShaderProgram.\n\t * If this is set when the batch is drawing, the state will be flushed\n\t * to the GPU and the new shader will then be bound.\n\t *\n\t * If `null` or a falsy value is specified, the batch's `defaultShader` will be used. \n\t *\n\t * Note that shaders are bound on batch.begin().\n\t *\n\t * @property shader\n\t * @type {ShaderProgram}\n\t */\n\tshader: {\n\t\tset: function(val) {\n\t\t\tvar wasDrawing = this.drawing;\n\n\t\t\tif (wasDrawing) {\n\t\t\t\tthis.end(); //unbinds the shader from the mesh\n\t\t\t}\n\n\t\t\tthis._shader = val ? val : this.defaultShader;\n\n\t\t\tif (wasDrawing) {\n\t\t\t\tthis.begin();\n\t\t\t}\n\t\t},\n\n\t\tget: function() {\n\t\t\treturn this._shader;\n\t\t}\n\t},\n\n\t/**\n\t * Sets the color of this sprite batcher, which is used in subsequent draw\n\t * calls. This does not flush the batch.\n\t *\n\t * If r, g, b, are all numbers, this method assumes that RGB \n\t * or RGBA float values (0.0 to 1.0) are being passed. Alpha defaults to one\n\t * if undefined.\n\t * \n\t * If one or more of the (r, g, b) arguments are non-numbers, we only consider the first argument\n\t * and assign it to all four components -- this is useful for setting transparency \n\t * in a premultiplied alpha stage.\n\t * \n\t * If the first argument is invalid or not a number,\n\t * the color defaults to (1, 1, 1, 1).\n\t *\n\t * @method  setColor\n\t * @param {Number} r the red component, normalized\n\t * @param {Number} g the green component, normalized\n\t * @param {Number} b the blue component, normalized\n\t * @param {Number} a the alpha component, normalized\n\t */\n\tsetColor: function(r, g, b, a) {\n\t\tvar rnum = typeof r === \"number\";\n\t\tif (rnum\n\t\t\t\t&& typeof g === \"number\"\n\t\t\t\t&& typeof b === \"number\") {\n\t\t\t//default alpha to one \n\t\t\ta = typeof a === \"number\" ? a : 1.0;\n\t\t} else {\n\t\t\tr = g = b = a = rnum ? r : 1.0;\n\t\t}\n\t\t\n\t\tif (this.premultiplied) {\n\t\t\tr *= a;\n\t\t\tg *= a;\n\t\t\tb *= a;\n\t\t}\n\t\t\n\t\tthis.color = colorToFloat(\n\t\t\t~~(r * 255),\n\t\t\t~~(g * 255),\n\t\t\t~~(b * 255),\n\t\t\t~~(a * 255)\n\t\t);\n\t},\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BaseEventEmitter\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EmitterSubscription = require('./EmitterSubscription');\nvar EventSubscriptionVendor = require('./EventSubscriptionVendor');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @class BaseEventEmitter\n * @description\n * An EventEmitter is responsible for managing a set of listeners and publishing\n * events to them when it is told that such events happened. In addition to the\n * data for the given event it also sends a event control object which allows\n * the listeners/handlers to prevent the default behavior of the given event.\n *\n * The emitter is designed to be generic enough to support all the different\n * contexts in which one might want to emit events. It is a simple multicast\n * mechanism on top of which extra functionality can be composed. For example, a\n * more advanced emitter may use an EventHolder and EventFactory.\n */\n\nvar BaseEventEmitter = (function () {\n  /**\n   * @constructor\n   */\n\n  function BaseEventEmitter() {\n    _classCallCheck(this, BaseEventEmitter);\n\n    this._subscriber = new EventSubscriptionVendor();\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a listener to be invoked when events of the specified type are\n   * emitted. An optional calling context may be provided. The data arguments\n   * emitted will be passed to the listener function.\n   *\n   * TODO: Annotate the listener arg's type. This is tricky because listeners\n   *       can be invoked with varargs.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {\n    return this._subscriber.addSubscription(eventType, new EmitterSubscription(this._subscriber, listener, context));\n  };\n\n  /**\n   * Similar to addListener, except that the listener is removed after it is\n   * invoked once.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke only once when the\n   *   specified event is emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.once = function once(eventType, listener, context) {\n    var emitter = this;\n    return this.addListener(eventType, function () {\n      emitter.removeCurrentListener();\n      listener.apply(context, arguments);\n    });\n  };\n\n  /**\n   * Removes all of the registered listeners, including those registered as\n   * listener maps.\n   *\n   * @param {?string} eventType - Optional name of the event whose registered\n   *   listeners to remove\n   */\n\n  BaseEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {\n    this._subscriber.removeAllSubscriptions(eventType);\n  };\n\n  /**\n   * Provides an API that can be called during an eventing cycle to remove the\n   * last listener that was invoked. This allows a developer to provide an event\n   * object that can remove the listener (or listener map) during the\n   * invocation.\n   *\n   * If it is called when not inside of an emitting cycle it will throw.\n   *\n   * @throws {Error} When called not during an eventing cycle\n   *\n   * @example\n   *   var subscription = emitter.addListenerMap({\n   *     someEvent: function(data, event) {\n   *       console.log(data);\n   *       emitter.removeCurrentListener();\n   *     }\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   *   emitter.emit('someEvent', 'def'); // does not log anything\n   */\n\n  BaseEventEmitter.prototype.removeCurrentListener = function removeCurrentListener() {\n    !!!this._currentSubscription ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Not in an emitting cycle; there is no current subscription') : invariant(false) : undefined;\n    this._subscriber.removeSubscription(this._currentSubscription);\n  };\n\n  /**\n   * Returns an array of listeners that are currently registered for the given\n   * event.\n   *\n   * @param {string} eventType - Name of the event to query\n   * @return {array}\n   */\n\n  BaseEventEmitter.prototype.listeners = function listeners(eventType) /* TODO: Array<EventSubscription> */{\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {\n      return subscription.listener;\n    }) : [];\n  };\n\n  /**\n   * Emits an event of the given type with the given data. All handlers of that\n   * particular type will be notified.\n   *\n   * @param {string} eventType - Name of the event to emit\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   *\n   * @example\n   *   emitter.addListener('someEvent', function(message) {\n   *     console.log(message);\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   */\n\n  BaseEventEmitter.prototype.emit = function emit(eventType) {\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    if (subscriptions) {\n      var keys = Object.keys(subscriptions);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        var subscription = subscriptions[key];\n        // The subscription may have been removed during this event loop.\n        if (subscription) {\n          this._currentSubscription = subscription;\n          this.__emitToSubscription.apply(this, [subscription].concat(Array.prototype.slice.call(arguments)));\n        }\n      }\n      this._currentSubscription = null;\n    }\n  };\n\n  /**\n   * Provides a hook to override how the emitter emits an event to a specific\n   * subscription. This allows you to set up logging and error boundaries\n   * specific to your environment.\n   *\n   * @param {EmitterSubscription} subscription\n   * @param {string} eventType\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   */\n\n  BaseEventEmitter.prototype.__emitToSubscription = function __emitToSubscription(subscription, eventType) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    subscription.listener.apply(subscription.context, args);\n  };\n\n  return BaseEventEmitter;\n})();\n\nmodule.exports = BaseEventEmitter;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventSubscription\n * @typechecks\n */\n\n'use strict';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventSubscription = (function () {\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n  EventSubscription.prototype.remove = function remove() {\n    if (this.subscriber) {\n      this.subscriber.removeSubscription(this);\n      this.subscriber = null;\n    }\n  };\n\n  return EventSubscription;\n})();\n\nmodule.exports = EventSubscription;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EventSubscriptionVendor\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * EventSubscriptionVendor stores a set of EventSubscriptions that are\n * subscribed to a particular event type.\n */\n\nvar EventSubscriptionVendor = (function () {\n  function EventSubscriptionVendor() {\n    _classCallCheck(this, EventSubscriptionVendor);\n\n    this._subscriptionsForType = {};\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a subscription keyed by an event type.\n   *\n   * @param {string} eventType\n   * @param {EventSubscription} subscription\n   */\n\n  EventSubscriptionVendor.prototype.addSubscription = function addSubscription(eventType, subscription) {\n    !(subscription.subscriber === this) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The subscriber of the subscription is incorrectly set.') : invariant(false) : undefined;\n    if (!this._subscriptionsForType[eventType]) {\n      this._subscriptionsForType[eventType] = [];\n    }\n    var key = this._subscriptionsForType[eventType].length;\n    this._subscriptionsForType[eventType].push(subscription);\n    subscription.eventType = eventType;\n    subscription.key = key;\n    return subscription;\n  };\n\n  /**\n   * Removes a bulk set of the subscriptions.\n   *\n   * @param {?string} eventType - Optional name of the event type whose\n   *   registered supscriptions to remove, if null remove all subscriptions.\n   */\n\n  EventSubscriptionVendor.prototype.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n    if (eventType === undefined) {\n      this._subscriptionsForType = {};\n    } else {\n      delete this._subscriptionsForType[eventType];\n    }\n  };\n\n  /**\n   * Removes a specific subscription. Instead of calling this function, call\n   * `subscription.remove()` directly.\n   *\n   * @param {object} subscription\n   */\n\n  EventSubscriptionVendor.prototype.removeSubscription = function removeSubscription(subscription) {\n    var eventType = subscription.eventType;\n    var key = subscription.key;\n\n    var subscriptionsForType = this._subscriptionsForType[eventType];\n    if (subscriptionsForType) {\n      delete subscriptionsForType[key];\n    }\n  };\n\n  /**\n   * Returns the array of subscriptions that are currently registered for the\n   * given event type.\n   *\n   * Note: This array can be potentially sparse as subscriptions are deleted\n   * from it when they are removed.\n   *\n   * TODO: This returns a nullable array. wat?\n   *\n   * @param {string} eventType\n   * @return {?array}\n   */\n\n  EventSubscriptionVendor.prototype.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n    return this._subscriptionsForType[eventType];\n  };\n\n  return EventSubscriptionVendor;\n})();\n\nmodule.exports = EventSubscriptionVendor;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","'use strict'\n\nvar ndarray = require('ndarray')\nvar ops     = require('ndarray-ops')\nvar pool    = require('typedarray-pool')\n\nmodule.exports = createTexture2D\n\nvar linearTypes = null\nvar filterTypes = null\nvar wrapTypes   = null\n\nfunction lazyInitLinearTypes(gl) {\n  linearTypes = [\n    gl.LINEAR,\n    gl.NEAREST_MIPMAP_LINEAR,\n    gl.LINEAR_MIPMAP_NEAREST,\n    gl.LINEAR_MIPMAP_NEAREST\n  ]\n  filterTypes = [\n    gl.NEAREST,\n    gl.LINEAR,\n    gl.NEAREST_MIPMAP_NEAREST,\n    gl.NEAREST_MIPMAP_LINEAR,\n    gl.LINEAR_MIPMAP_NEAREST,\n    gl.LINEAR_MIPMAP_LINEAR\n  ]\n  wrapTypes = [\n    gl.REPEAT,\n    gl.CLAMP_TO_EDGE,\n    gl.MIRRORED_REPEAT\n  ]\n}\n\nfunction acceptTextureDOM (obj) {\n  return (\n    ('undefined' != typeof HTMLCanvasElement && obj instanceof HTMLCanvasElement) ||\n    ('undefined' != typeof HTMLImageElement && obj instanceof HTMLImageElement) ||\n    ('undefined' != typeof HTMLVideoElement && obj instanceof HTMLVideoElement) ||\n    ('undefined' != typeof ImageData && obj instanceof ImageData))\n}\n\nvar convertFloatToUint8 = function(out, inp) {\n  ops.muls(out, inp, 255.0)\n}\n\nfunction reshapeTexture(tex, w, h) {\n  var gl = tex.gl\n  var maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n  if(w < 0 || w > maxSize || h < 0 || h > maxSize) {\n    throw new Error('gl-texture2d: Invalid texture size')\n  }\n  tex._shape = [w, h]\n  tex.bind()\n  gl.texImage2D(gl.TEXTURE_2D, 0, tex.format, w, h, 0, tex.format, tex.type, null)\n  tex._mipLevels = [0]\n  return tex\n}\n\nfunction Texture2D(gl, handle, width, height, format, type) {\n  this.gl = gl\n  this.handle = handle\n  this.format = format\n  this.type = type\n  this._shape = [width, height]\n  this._mipLevels = [0]\n  this._magFilter = gl.NEAREST\n  this._minFilter = gl.NEAREST\n  this._wrapS = gl.CLAMP_TO_EDGE\n  this._wrapT = gl.CLAMP_TO_EDGE\n  this._anisoSamples = 1\n\n  var parent = this\n  var wrapVector = [this._wrapS, this._wrapT]\n  Object.defineProperties(wrapVector, [\n    {\n      get: function() {\n        return parent._wrapS\n      },\n      set: function(v) {\n        return parent.wrapS = v\n      }\n    },\n    {\n      get: function() {\n        return parent._wrapT\n      },\n      set: function(v) {\n        return parent.wrapT = v\n      }\n    }\n  ])\n  this._wrapVector = wrapVector\n\n  var shapeVector = [this._shape[0], this._shape[1]]\n  Object.defineProperties(shapeVector, [\n    {\n      get: function() {\n        return parent._shape[0]\n      },\n      set: function(v) {\n        return parent.width = v\n      }\n    },\n    {\n      get: function() {\n        return parent._shape[1]\n      },\n      set: function(v) {\n        return parent.height = v\n      }\n    }\n  ])\n  this._shapeVector = shapeVector\n}\n\nvar proto = Texture2D.prototype\n\nObject.defineProperties(proto, {\n  minFilter: {\n    get: function() {\n      return this._minFilter\n    },\n    set: function(v) {\n      this.bind()\n      var gl = this.gl\n      if(this.type === gl.FLOAT && linearTypes.indexOf(v) >= 0) {\n        if(!gl.getExtension('OES_texture_float_linear')) {\n          v = gl.NEAREST\n        }\n      }\n      if(filterTypes.indexOf(v) < 0) {\n        throw new Error('gl-texture2d: Unknown filter mode ' + v)\n      }\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, v)\n      return this._minFilter = v\n    }\n  },\n  magFilter: {\n    get: function() {\n      return this._magFilter\n    },\n    set: function(v) {\n      this.bind()\n      var gl = this.gl\n      if(this.type === gl.FLOAT && linearTypes.indexOf(v) >= 0) {\n        if(!gl.getExtension('OES_texture_float_linear')) {\n          v = gl.NEAREST\n        }\n      }\n      if(filterTypes.indexOf(v) < 0) {\n        throw new Error('gl-texture2d: Unknown filter mode ' + v)\n      }\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, v)\n      return this._magFilter = v\n    }\n  },\n  mipSamples: {\n    get: function() {\n      return this._anisoSamples\n    },\n    set: function(i) {\n      var psamples = this._anisoSamples\n      this._anisoSamples = Math.max(i, 1)|0\n      if(psamples !== this._anisoSamples) {\n        var ext = this.gl.getExtension('EXT_texture_filter_anisotropic')\n        if(ext) {\n          this.gl.texParameterf(this.gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, this._anisoSamples)\n        }\n      }\n      return this._anisoSamples\n    }\n  },\n  wrapS: {\n    get: function() {\n      return this._wrapS\n    },\n    set: function(v) {\n      this.bind()\n      if(wrapTypes.indexOf(v) < 0) {\n        throw new Error('gl-texture2d: Unknown wrap mode ' + v)\n      }\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, v)\n      return this._wrapS = v\n    }\n  },\n  wrapT: {\n    get: function() {\n      return this._wrapT\n    },\n    set: function(v) {\n      this.bind()\n      if(wrapTypes.indexOf(v) < 0) {\n        throw new Error('gl-texture2d: Unknown wrap mode ' + v)\n      }\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, v)\n      return this._wrapT = v\n    }\n  },\n  wrap: {\n    get: function() {\n      return this._wrapVector\n    },\n    set: function(v) {\n      if(!Array.isArray(v)) {\n        v = [v,v]\n      }\n      if(v.length !== 2) {\n        throw new Error('gl-texture2d: Must specify wrap mode for rows and columns')\n      }\n      for(var i=0; i<2; ++i) {\n        if(wrapTypes.indexOf(v[i]) < 0) {\n          throw new Error('gl-texture2d: Unknown wrap mode ' + v)\n        }\n      }\n      this._wrapS = v[0]\n      this._wrapT = v[1]\n\n      var gl = this.gl\n      this.bind()\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this._wrapS)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this._wrapT)\n\n      return v\n    }\n  },\n  shape: {\n    get: function() {\n      return this._shapeVector\n    },\n    set: function(x) {\n      if(!Array.isArray(x)) {\n        x = [x|0,x|0]\n      } else {\n        if(x.length !== 2) {\n          throw new Error('gl-texture2d: Invalid texture shape')\n        }\n      }\n      reshapeTexture(this, x[0]|0, x[1]|0)\n      return [x[0]|0, x[1]|0]\n    }\n  },\n  width: {\n    get: function() {\n      return this._shape[0]\n    },\n    set: function(w) {\n      w = w|0\n      reshapeTexture(this, w, this._shape[1])\n      return w\n    }\n  },\n  height: {\n    get: function() {\n      return this._shape[1]\n    },\n    set: function(h) {\n      h = h|0\n      reshapeTexture(this, this._shape[0], h)\n      return h\n    }\n  }\n})\n\nproto.bind = function(unit) {\n  var gl = this.gl\n  if(unit !== undefined) {\n    gl.activeTexture(gl.TEXTURE0 + (unit|0))\n  }\n  gl.bindTexture(gl.TEXTURE_2D, this.handle)\n  if(unit !== undefined) {\n    return (unit|0)\n  }\n  return gl.getParameter(gl.ACTIVE_TEXTURE) - gl.TEXTURE0\n}\n\nproto.dispose = function() {\n  this.gl.deleteTexture(this.handle)\n}\n\nproto.generateMipmap = function() {\n  this.bind()\n  this.gl.generateMipmap(this.gl.TEXTURE_2D)\n\n  //Update mip levels\n  var l = Math.min(this._shape[0], this._shape[1])\n  for(var i=0; l>0; ++i, l>>>=1) {\n    if(this._mipLevels.indexOf(i) < 0) {\n      this._mipLevels.push(i)\n    }\n  }\n}\n\nproto.setPixels = function(data, x_off, y_off, mip_level) {\n  var gl = this.gl\n  this.bind()\n  if(Array.isArray(x_off)) {\n    mip_level = y_off\n    y_off = x_off[1]|0\n    x_off = x_off[0]|0\n  } else {\n    x_off = x_off || 0\n    y_off = y_off || 0\n  }\n  mip_level = mip_level || 0\n  var directData = acceptTextureDOM(data) ? data : data.raw\n  if(directData) {\n    var needsMip = this._mipLevels.indexOf(mip_level) < 0\n    if(needsMip) {\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.format, this.format, this.type, directData)\n      this._mipLevels.push(mip_level)\n    } else {\n      gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, this.format, this.type, directData)\n    }\n  } else if(data.shape && data.stride && data.data) {\n    if(data.shape.length < 2 ||\n       x_off + data.shape[1] > this._shape[1]>>>mip_level ||\n       y_off + data.shape[0] > this._shape[0]>>>mip_level ||\n       x_off < 0 ||\n       y_off < 0) {\n      throw new Error('gl-texture2d: Texture dimensions are out of bounds')\n    }\n    texSubImageArray(gl, x_off, y_off, mip_level, this.format, this.type, this._mipLevels, data)\n  } else {\n    throw new Error('gl-texture2d: Unsupported data type')\n  }\n}\n\n\nfunction isPacked(shape, stride) {\n  if(shape.length === 3) {\n    return  (stride[2] === 1) &&\n            (stride[1] === shape[0]*shape[2]) &&\n            (stride[0] === shape[2])\n  }\n  return  (stride[0] === 1) &&\n          (stride[1] === shape[0])\n}\n\nfunction texSubImageArray(gl, x_off, y_off, mip_level, cformat, ctype, mipLevels, array) {\n  var dtype = array.dtype\n  var shape = array.shape.slice()\n  if(shape.length < 2 || shape.length > 3) {\n    throw new Error('gl-texture2d: Invalid ndarray, must be 2d or 3d')\n  }\n  var type = 0, format = 0\n  var packed = isPacked(shape, array.stride.slice())\n  if(dtype === 'float32') {\n    type = gl.FLOAT\n  } else if(dtype === 'float64') {\n    type = gl.FLOAT\n    packed = false\n    dtype = 'float32'\n  } else if(dtype === 'uint8') {\n    type = gl.UNSIGNED_BYTE\n  } else {\n    type = gl.UNSIGNED_BYTE\n    packed = false\n    dtype = 'uint8'\n  }\n  var channels = 1\n  if(shape.length === 2) {\n    format = gl.LUMINANCE\n    shape = [shape[0], shape[1], 1]\n    array = ndarray(array.data, shape, [array.stride[0], array.stride[1], 1], array.offset)\n  } else if(shape.length === 3) {\n    if(shape[2] === 1) {\n      format = gl.ALPHA\n    } else if(shape[2] === 2) {\n      format = gl.LUMINANCE_ALPHA\n    } else if(shape[2] === 3) {\n      format = gl.RGB\n    } else if(shape[2] === 4) {\n      format = gl.RGBA\n    } else {\n      throw new Error('gl-texture2d: Invalid shape for pixel coords')\n    }\n    channels = shape[2]\n  } else {\n    throw new Error('gl-texture2d: Invalid shape for texture')\n  }\n  //For 1-channel textures allow conversion between formats\n  if((format  === gl.LUMINANCE || format  === gl.ALPHA) &&\n     (cformat === gl.LUMINANCE || cformat === gl.ALPHA)) {\n    format = cformat\n  }\n  if(format !== cformat) {\n    throw new Error('gl-texture2d: Incompatible texture format for setPixels')\n  }\n  var size = array.size\n  var needsMip = mipLevels.indexOf(mip_level) < 0\n  if(needsMip) {\n    mipLevels.push(mip_level)\n  }\n  if(type === ctype && packed) {\n    //Array data types are compatible, can directly copy into texture\n    if(array.offset === 0 && array.data.length === size) {\n      if(needsMip) {\n        gl.texImage2D(gl.TEXTURE_2D, mip_level, cformat, shape[0], shape[1], 0, cformat, ctype, array.data)\n      } else {\n        gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, shape[0], shape[1], cformat, ctype, array.data)\n      }\n    } else {\n      if(needsMip) {\n        gl.texImage2D(gl.TEXTURE_2D, mip_level, cformat, shape[0], shape[1], 0, cformat, ctype, array.data.subarray(array.offset, array.offset+size))\n      } else {\n        gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, shape[0], shape[1], cformat, ctype, array.data.subarray(array.offset, array.offset+size))\n      }\n    }\n  } else {\n    //Need to do type conversion to pack data into buffer\n    var pack_buffer\n    if(ctype === gl.FLOAT) {\n      pack_buffer = pool.mallocFloat32(size)\n    } else {\n      pack_buffer = pool.mallocUint8(size)\n    }\n    var pack_view = ndarray(pack_buffer, shape, [shape[2], shape[2]*shape[0], 1])\n    if(type === gl.FLOAT && ctype === gl.UNSIGNED_BYTE) {\n      convertFloatToUint8(pack_view, array)\n    } else {\n      ops.assign(pack_view, array)\n    }\n    if(needsMip) {\n      gl.texImage2D(gl.TEXTURE_2D, mip_level, cformat, shape[0], shape[1], 0, cformat, ctype, pack_buffer.subarray(0, size))\n    } else {\n      gl.texSubImage2D(gl.TEXTURE_2D, mip_level, x_off, y_off, shape[0], shape[1], cformat, ctype, pack_buffer.subarray(0, size))\n    }\n    if(ctype === gl.FLOAT) {\n      pool.freeFloat32(pack_buffer)\n    } else {\n      pool.freeUint8(pack_buffer)\n    }\n  }\n}\n\nfunction initTexture(gl) {\n  var tex = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, tex)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n  return tex\n}\n\nfunction createTextureShape(gl, width, height, format, type) {\n  var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n  if(width < 0 || width > maxTextureSize || height < 0 || height  > maxTextureSize) {\n    throw new Error('gl-texture2d: Invalid texture shape')\n  }\n  if(type === gl.FLOAT && !gl.getExtension('OES_texture_float')) {\n    throw new Error('gl-texture2d: Floating point textures not supported on this platform')\n  }\n  var tex = initTexture(gl)\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, 0, format, type, null)\n  return new Texture2D(gl, tex, width, height, format, type)\n}\n\nfunction createTextureDOM(gl, directData, width, height, format, type) {\n  var tex = initTexture(gl)\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, format, type, directData)\n  return new Texture2D(gl, tex, width, height, format, type)\n}\n\n//Creates a texture from an ndarray\nfunction createTextureArray(gl, array) {\n  var dtype = array.dtype\n  var shape = array.shape.slice()\n  var maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n  if(shape[0] < 0 || shape[0] > maxSize || shape[1] < 0 || shape[1] > maxSize) {\n    throw new Error('gl-texture2d: Invalid texture size')\n  }\n  var packed = isPacked(shape, array.stride.slice())\n  var type = 0\n  if(dtype === 'float32') {\n    type = gl.FLOAT\n  } else if(dtype === 'float64') {\n    type = gl.FLOAT\n    packed = false\n    dtype = 'float32'\n  } else if(dtype === 'uint8') {\n    type = gl.UNSIGNED_BYTE\n  } else {\n    type = gl.UNSIGNED_BYTE\n    packed = false\n    dtype = 'uint8'\n  }\n  var format = 0\n  if(shape.length === 2) {\n    format = gl.LUMINANCE\n    shape = [shape[0], shape[1], 1]\n    array = ndarray(array.data, shape, [array.stride[0], array.stride[1], 1], array.offset)\n  } else if(shape.length === 3) {\n    if(shape[2] === 1) {\n      format = gl.ALPHA\n    } else if(shape[2] === 2) {\n      format = gl.LUMINANCE_ALPHA\n    } else if(shape[2] === 3) {\n      format = gl.RGB\n    } else if(shape[2] === 4) {\n      format = gl.RGBA\n    } else {\n      throw new Error('gl-texture2d: Invalid shape for pixel coords')\n    }\n  } else {\n    throw new Error('gl-texture2d: Invalid shape for texture')\n  }\n  if(type === gl.FLOAT && !gl.getExtension('OES_texture_float')) {\n    type = gl.UNSIGNED_BYTE\n    packed = false\n  }\n  var buffer, buf_store\n  var size = array.size\n  if(!packed) {\n    var stride = [shape[2], shape[2]*shape[0], 1]\n    buf_store = pool.malloc(size, dtype)\n    var buf_array = ndarray(buf_store, shape, stride, 0)\n    if((dtype === 'float32' || dtype === 'float64') && type === gl.UNSIGNED_BYTE) {\n      convertFloatToUint8(buf_array, array)\n    } else {\n      ops.assign(buf_array, array)\n    }\n    buffer = buf_store.subarray(0, size)\n  } else if (array.offset === 0 && array.data.length === size) {\n    buffer = array.data\n  } else {\n    buffer = array.data.subarray(array.offset, array.offset + size)\n  }\n  var tex = initTexture(gl)\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, shape[0], shape[1], 0, format, type, buffer)\n  if(!packed) {\n    pool.free(buf_store)\n  }\n  return new Texture2D(gl, tex, shape[0], shape[1], format, type)\n}\n\nfunction createTexture2D(gl) {\n  if(arguments.length <= 1) {\n    throw new Error('gl-texture2d: Missing arguments for texture2d constructor')\n  }\n  if(!linearTypes) {\n    lazyInitLinearTypes(gl)\n  }\n  if(typeof arguments[1] === 'number') {\n    return createTextureShape(gl, arguments[1], arguments[2], arguments[3]||gl.RGBA, arguments[4]||gl.UNSIGNED_BYTE)\n  }\n  if(Array.isArray(arguments[1])) {\n    return createTextureShape(gl, arguments[1][0]|0, arguments[1][1]|0, arguments[2]||gl.RGBA, arguments[3]||gl.UNSIGNED_BYTE)\n  }\n  if(typeof arguments[1] === 'object') {\n    var obj = arguments[1]\n    var directData = acceptTextureDOM(obj) ? obj : obj.raw\n    if (directData) {\n      return createTextureDOM(gl, directData, obj.width|0, obj.height|0, arguments[2]||gl.RGBA, arguments[3]||gl.UNSIGNED_BYTE)\n    } else if(obj.shape && obj.data && obj.stride) {\n      return createTextureArray(gl, obj)\n    }\n  }\n  throw new Error('gl-texture2d: Invalid arguments for texture2d constructor')\n}\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","\"use strict\"\n\nvar compile = require(\"cwise-compiler\")\n\nvar EmptyProc = {\n  body: \"\",\n  args: [],\n  thisVars: [],\n  localVars: []\n}\n\nfunction fixup(x) {\n  if(!x) {\n    return EmptyProc\n  }\n  for(var i=0; i<x.args.length; ++i) {\n    var a = x.args[i]\n    if(i === 0) {\n      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n    } else {\n      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n    }\n  }\n  if(!x.thisVars) {\n    x.thisVars = []\n  }\n  if(!x.localVars) {\n    x.localVars = []\n  }\n  return x\n}\n\nfunction pcompile(user_args) {\n  return compile({\n    args:     user_args.args,\n    pre:      fixup(user_args.pre),\n    body:     fixup(user_args.body),\n    post:     fixup(user_args.proc),\n    funcName: user_args.funcName\n  })\n}\n\nfunction makeOp(user_args) {\n  var args = []\n  for(var i=0; i<user_args.args.length; ++i) {\n    args.push(\"a\"+i)\n  }\n  var wrapper = new Function(\"P\", [\n    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n  ].join(\"\"))\n  return wrapper(pcompile(user_args))\n}\n\nvar assign_ops = {\n  add:  \"+\",\n  sub:  \"-\",\n  mul:  \"*\",\n  div:  \"/\",\n  mod:  \"%\",\n  band: \"&\",\n  bor:  \"|\",\n  bxor: \"^\",\n  lshift: \"<<\",\n  rshift: \">>\",\n  rrshift: \">>>\"\n}\n;(function(){\n  for(var id in assign_ops) {\n    var op = assign_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\",\"b\",\"c\"],\n             body: \"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\",\"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a\"+op+\"=b\"},\n      rvalue: true,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\", \"array\", \"scalar\"],\n      body: {args:[\"a\",\"b\",\"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\",\"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a\"+op+\"=s\"},\n      rvalue: true,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar unary_ops = {\n  not: \"!\",\n  bnot: \"~\",\n  neg: \"-\",\n  recip: \"1.0/\"\n}\n;(function(){\n  for(var id in unary_ops) {\n    var op = unary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a=\"+op+\"b\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\"],\n      body: {args:[\"a\"],\n             body:\"a=\"+op+\"a\"},\n      rvalue: true,\n      count: 2,\n      funcName: id+\"eq\"\n    })\n  }\n})();\n\nvar binary_ops = {\n  and: \"&&\",\n  or: \"||\",\n  eq: \"===\",\n  neq: \"!==\",\n  lt: \"<\",\n  gt: \">\",\n  leq: \"<=\",\n  geq: \">=\"\n}\n;(function() {\n  for(var id in binary_ops) {\n    var op = binary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\", \"b\", \"c\"],\n             body:\"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\",\"array\",\"scalar\"],\n      body: {args:[\"a\", \"b\", \"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\", \"b\"],\n             body:\"a=a\"+op+\"b\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\", \"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a=a\"+op+\"s\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar math_unary = [\n  \"abs\",\n  \"acos\",\n  \"asin\",\n  \"atan\",\n  \"ceil\",\n  \"cos\",\n  \"exp\",\n  \"floor\",\n  \"log\",\n  \"round\",\n  \"sin\",\n  \"sqrt\",\n  \"tan\"\n]\n;(function() {\n  for(var i=0; i<math_unary.length; ++i) {\n    var f = math_unary[i]\n    exports[f] = makeOp({\n                    args: [\"array\", \"array\"],\n                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n                    funcName: f\n                  })\n    exports[f+\"eq\"] = makeOp({\n                      args: [\"array\"],\n                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n                      rvalue: true,\n                      count: 2,\n                      funcName: f+\"eq\"\n                    })\n  }\n})();\n\nvar math_comm = [\n  \"max\",\n  \"min\",\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_comm.length; ++i) {\n    var f= math_comm[i]\n    exports[f] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f\n                })\n    exports[f+\"s\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"s\"\n                  })\n    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"eq\"\n                  })\n    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"seq\"\n                  })\n  }\n})();\n\nvar math_noncomm = [\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_noncomm.length; ++i) {\n    var f= math_noncomm[i]\n    exports[f+\"op\"] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"op\"\n                })\n    exports[f+\"ops\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"ops\"\n                  })\n    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"opeq\"\n                  })\n    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"opseq\"\n                  })\n  }\n})();\n\nexports.any = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n  funcName: \"any\"\n})\n\nexports.all = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"all\"\n})\n\nexports.sum = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"sum\"\n})\n\nexports.prod = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"prod\"\n})\n\nexports.norm2squared = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm2squared\"\n})\n  \nexports.norm2 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n  funcName: \"norm2\"\n})\n  \n\nexports.norminf = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norminf\"\n})\n\nexports.norm1 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm1\"\n})\n\nexports.sup = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=-Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.inf = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.argmin = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})\n\nexports.argmax = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})  \n\nexports.random = makeOp({\n  args: [\"array\"],\n  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n  funcName: \"random\"\n})\n\nexports.assign = makeOp({\n  args:[\"array\", \"array\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assign\" })\n\nexports.assigns = makeOp({\n  args:[\"array\", \"scalar\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assigns\" })\n\n\nexports.equals = compile({\n  args:[\"array\", \"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n        body: \"if(x!==y){return false}\", \n        localVars: [], \n        thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"equals\"\n})\n\n\n","\"use strict\"\n\nvar createThunk = require(\"./lib/thunk.js\")\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n","\"use strict\"\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = require(\"./compile.js\")\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n","\"use strict\"\n\nvar uniq = require(\"uniq\")\n\n// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\nfunction innerFill(order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , has_index = proc.indexArgs.length>0\n    , code = []\n    , vars = []\n    , idx=0, pidx=0, i, j\n  for(i=0; i<dimension; ++i) { // Iteration variables\n    vars.push([\"i\",i,\"=0\"].join(\"\"))\n  }\n  //Compute scan deltas\n  for(j=0; j<nargs; ++j) {\n    for(i=0; i<dimension; ++i) {\n      pidx = idx\n      idx = order[i]\n      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\n        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\n      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\n        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\n      }\n    }\n  }\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }  \n  //Scan loop\n  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\n    idx = order[i]\n    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\n  }\n  //Push body of inner loop\n  code.push(body)\n  //Advance scan pointers\n  for(i=0; i<dimension; ++i) {\n    pidx = idx\n    idx = order[i]\n    for(j=0; j<nargs; ++j) {\n      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\n    }\n    if(has_index) {\n      if(i > 0) {\n        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\n      }\n      code.push([\"++index[\",idx,\"]\"].join(\"\"))\n    }\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\nfunction outerFill(matched, order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , blockSize = proc.blockSize\n    , has_index = proc.indexArgs.length > 0\n    , code = []\n  for(var i=0; i<nargs; ++i) {\n    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\n  }\n  //Generate loops for unmatched dimensions\n  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\n  for(var i=matched; i<dimension; ++i) {\n    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\n    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\n    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\n    code.push([\"j\",i,\"=0\"].join(\"\"))\n    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\n    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\n    if(has_index) {\n      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\n    }\n  }\n  for(var i=0; i<nargs; ++i) {\n    var indexStr = [\"offset\"+i]\n    for(var j=matched; j<dimension; ++j) {\n      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\n    }\n    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\n  }\n  code.push(innerFill(order, proc, body))\n  for(var i=matched; i<dimension; ++i) {\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n//Count the number of compatible inner orders\n// This is the length of the longest common prefix of the arrays in orders.\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\nfunction countMatches(orders) {\n  var matched = 0, dimension = orders[0].length\n  while(matched < dimension) {\n    for(var j=1; j<orders.length; ++j) {\n      if(orders[j][matched] !== orders[0][matched]) {\n        return matched\n      }\n    }\n    ++matched\n  }\n  return matched\n}\n\n//Processes a block according to the given data types\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\nfunction processBlock(block, proc, dtypes) {\n  var code = block.body\n  var pre = []\n  var post = []\n  for(var i=0; i<block.args.length; ++i) {\n    var carg = block.args[i]\n    if(carg.count <= 0) {\n      continue\n    }\n    var re = new RegExp(carg.name, \"g\")\n    var ptrStr = \"\"\n    var arrNum = proc.arrayArgs.indexOf(i)\n    switch(proc.argTypes[i]) {\n      case \"offset\":\n        var offArgIndex = proc.offsetArgIndex.indexOf(i)\n        var offArg = proc.offsetArgs[offArgIndex]\n        arrNum = offArg.array\n        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\n      case \"array\":\n        ptrStr = \"p\" + arrNum + ptrStr\n        var localStr = \"l\" + i\n        var arrStr = \"a\" + arrNum\n        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\n          if(carg.count === 1) { // Argument/array used only once(?)\n            if(dtypes[arrNum] === \"generic\") {\n              if(carg.lvalue) {\n                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n                code = code.replace(re, localStr)\n                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n              } else {\n                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n              }\n            } else {\n              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n            }\n          } else if(dtypes[arrNum] === \"generic\") {\n            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            }\n          } else {\n            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\n            }\n          }\n        } else { // Argument to body is a \"block\"\n          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\n          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\n            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\n            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\n          }\n          re = new RegExp(reStrArr.join(\"\"), \"g\")\n          ptrStr = ptrStrArr.join(\"+\")\n          if(dtypes[arrNum] === \"generic\") {\n            /*if(carg.lvalue) {\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n              code = code.replace(re, localStr)\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            } else {\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n            }*/\n            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\n          } else {\n            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\n            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n          }\n        }\n      break\n      case \"scalar\":\n        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\n      break\n      case \"index\":\n        code = code.replace(re, \"index\")\n      break\n      case \"shape\":\n        code = code.replace(re, \"shape\")\n      break\n    }\n  }\n  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\n}\n\nfunction typeSummary(dtypes) {\n  var summary = new Array(dtypes.length)\n  var allEqual = true\n  for(var i=0; i<dtypes.length; ++i) {\n    var t = dtypes[i]\n    var digits = t.match(/\\d+/)\n    if(!digits) {\n      digits = \"\"\n    } else {\n      digits = digits[0]\n    }\n    if(t.charAt(0) === 0) {\n      summary[i] = \"u\" + t.charAt(1) + digits\n    } else {\n      summary[i] = t.charAt(0) + digits\n    }\n    if(i > 0) {\n      allEqual = allEqual && summary[i] === summary[i-1]\n    }\n  }\n  if(allEqual) {\n    return summary[0]\n  }\n  return summary.join(\"\")\n}\n\n//Generates a cwise operator\nfunction generateCWiseOp(proc, typesig) {\n\n  //Compute dimension\n  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\n  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\n  var orders = new Array(proc.arrayArgs.length)\n  var dtypes = new Array(proc.arrayArgs.length)\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    dtypes[i] = typesig[2*i]\n    orders[i] = typesig[2*i+1]\n  }\n  \n  //Determine where block and loop indices start and end\n  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\n  var loopBegin = [], loopEnd = [] // These indices are iterated over\n  var loopOrders = [] // orders restricted to the loop indices\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    if (proc.arrayBlockIndices[i]<0) {\n      loopBegin.push(0)\n      loopEnd.push(dimension)\n      blockBegin.push(dimension)\n      blockEnd.push(dimension+proc.arrayBlockIndices[i])\n    } else {\n      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\n      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\n      blockBegin.push(0)\n      blockEnd.push(proc.arrayBlockIndices[i])\n    }\n    var newOrder = []\n    for(var j=0; j<orders[i].length; j++) {\n      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\n        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n      }\n    }\n    loopOrders.push(newOrder)\n  }\n\n  //First create arguments for procedure\n  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\n  var code = [\"'use strict'\"]\n  var vars = []\n  \n  for(var j=0; j<dimension; ++j) {\n    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    arglist.push(\"a\"+i) // Actual data array\n    arglist.push(\"t\"+i) // Strides\n    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\n    \n    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\n      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\n    }\n    \n    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\n      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\n    }\n  }\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    arglist.push(\"Y\" + i)\n  }\n  if(proc.shapeArgs.length > 0) {\n    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n  }\n  if(proc.indexArgs.length > 0) {\n    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\n    var zeros = new Array(dimension)\n    for(var i=0; i<dimension; ++i) {\n      zeros[i] = \"0\"\n    }\n    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\n  }\n  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\n    var off_arg = proc.offsetArgs[i]\n    var init_string = []\n    for(var j=0; j<off_arg.offset.length; ++j) {\n      if(off_arg.offset[j] === 0) {\n        continue\n      } else if(off_arg.offset[j] === 1) {\n        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \n      } else {\n        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\n      }\n    }\n    if(init_string.length === 0) {\n      vars.push(\"q\" + i + \"=0\")\n    } else {\n      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\n    }\n  }\n\n  //Prepare this variables\n  var thisVars = uniq([].concat(proc.pre.thisVars)\n                      .concat(proc.body.thisVars)\n                      .concat(proc.post.thisVars))\n  vars = vars.concat(thisVars)\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    code.push(\"p\"+i+\"|=0\")\n  }\n  \n  //Inline prelude\n  if(proc.pre.body.length > 3) {\n    code.push(processBlock(proc.pre, proc, dtypes))\n  }\n\n  //Process body\n  var body = processBlock(proc.body, proc, dtypes)\n  var matched = countMatches(loopOrders)\n  if(matched < dimension) {\n    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n  } else {\n    code.push(innerFill(loopOrders[0], proc, body))\n  }\n\n  //Inline epilog\n  if(proc.post.body.length > 3) {\n    code.push(processBlock(proc.post, proc, dtypes))\n  }\n  \n  if(proc.debug) {\n    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\n  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\n  return f()\n}\nmodule.exports = generateCWiseOp\n","\"use strict\"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n","'use strict'\n\nvar bits = require('bit-twiddle')\nvar dup = require('dup')\nvar Buffer = require('buffer').Buffer\n\n//Legacy pool support\nif(!global.__TYPEDARRAY_POOL) {\n  global.__TYPEDARRAY_POOL = {\n      UINT8     : dup([32, 0])\n    , UINT16    : dup([32, 0])\n    , UINT32    : dup([32, 0])\n    , BIGUINT64 : dup([32, 0])\n    , INT8      : dup([32, 0])\n    , INT16     : dup([32, 0])\n    , INT32     : dup([32, 0])\n    , BIGINT64  : dup([32, 0])\n    , FLOAT     : dup([32, 0])\n    , DOUBLE    : dup([32, 0])\n    , DATA      : dup([32, 0])\n    , UINT8C    : dup([32, 0])\n    , BUFFER    : dup([32, 0])\n  }\n}\n\nvar hasUint8C = (typeof Uint8ClampedArray) !== 'undefined'\nvar hasBigUint64 = (typeof BigUint64Array) !== 'undefined'\nvar hasBigInt64 = (typeof BigInt64Array) !== 'undefined'\nvar POOL = global.__TYPEDARRAY_POOL\n\n//Upgrade pool\nif(!POOL.UINT8C) {\n  POOL.UINT8C = dup([32, 0])\n}\nif(!POOL.BIGUINT64) {\n  POOL.BIGUINT64 = dup([32, 0])\n}\nif(!POOL.BIGINT64) {\n  POOL.BIGINT64 = dup([32, 0])\n}\nif(!POOL.BUFFER) {\n  POOL.BUFFER = dup([32, 0])\n}\n\n//New technique: Only allocate from ArrayBufferView and Buffer\nvar DATA    = POOL.DATA\n  , BUFFER  = POOL.BUFFER\n\nexports.free = function free(array) {\n  if(Buffer.isBuffer(array)) {\n    BUFFER[bits.log2(array.length)].push(array)\n  } else {\n    if(Object.prototype.toString.call(array) !== '[object ArrayBuffer]') {\n      array = array.buffer\n    }\n    if(!array) {\n      return\n    }\n    var n = array.length || array.byteLength\n    var log_n = bits.log2(n)|0\n    DATA[log_n].push(array)\n  }\n}\n\nfunction freeArrayBuffer(buffer) {\n  if(!buffer) {\n    return\n  }\n  var n = buffer.length || buffer.byteLength\n  var log_n = bits.log2(n)\n  DATA[log_n].push(buffer)\n}\n\nfunction freeTypedArray(array) {\n  freeArrayBuffer(array.buffer)\n}\n\nexports.freeUint8 =\nexports.freeUint16 =\nexports.freeUint32 =\nexports.freeBigUint64 =\nexports.freeInt8 =\nexports.freeInt16 =\nexports.freeInt32 =\nexports.freeBigInt64 =\nexports.freeFloat32 = \nexports.freeFloat =\nexports.freeFloat64 = \nexports.freeDouble = \nexports.freeUint8Clamped = \nexports.freeDataView = freeTypedArray\n\nexports.freeArrayBuffer = freeArrayBuffer\n\nexports.freeBuffer = function freeBuffer(array) {\n  BUFFER[bits.log2(array.length)].push(array)\n}\n\nexports.malloc = function malloc(n, dtype) {\n  if(dtype === undefined || dtype === 'arraybuffer') {\n    return mallocArrayBuffer(n)\n  } else {\n    switch(dtype) {\n      case 'uint8':\n        return mallocUint8(n)\n      case 'uint16':\n        return mallocUint16(n)\n      case 'uint32':\n        return mallocUint32(n)\n      case 'int8':\n        return mallocInt8(n)\n      case 'int16':\n        return mallocInt16(n)\n      case 'int32':\n        return mallocInt32(n)\n      case 'float':\n      case 'float32':\n        return mallocFloat(n)\n      case 'double':\n      case 'float64':\n        return mallocDouble(n)\n      case 'uint8_clamped':\n        return mallocUint8Clamped(n)\n      case 'bigint64':\n        return mallocBigInt64(n)\n      case 'biguint64':\n        return mallocBigUint64(n)\n      case 'buffer':\n        return mallocBuffer(n)\n      case 'data':\n      case 'dataview':\n        return mallocDataView(n)\n\n      default:\n        return null\n    }\n  }\n  return null\n}\n\nfunction mallocArrayBuffer(n) {\n  var n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var d = DATA[log_n]\n  if(d.length > 0) {\n    return d.pop()\n  }\n  return new ArrayBuffer(n)\n}\nexports.mallocArrayBuffer = mallocArrayBuffer\n\nfunction mallocUint8(n) {\n  return new Uint8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocUint8 = mallocUint8\n\nfunction mallocUint16(n) {\n  return new Uint16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocUint16 = mallocUint16\n\nfunction mallocUint32(n) {\n  return new Uint32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocUint32 = mallocUint32\n\nfunction mallocInt8(n) {\n  return new Int8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocInt8 = mallocInt8\n\nfunction mallocInt16(n) {\n  return new Int16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocInt16 = mallocInt16\n\nfunction mallocInt32(n) {\n  return new Int32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocInt32 = mallocInt32\n\nfunction mallocFloat(n) {\n  return new Float32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocFloat32 = exports.mallocFloat = mallocFloat\n\nfunction mallocDouble(n) {\n  return new Float64Array(mallocArrayBuffer(8*n), 0, n)\n}\nexports.mallocFloat64 = exports.mallocDouble = mallocDouble\n\nfunction mallocUint8Clamped(n) {\n  if(hasUint8C) {\n    return new Uint8ClampedArray(mallocArrayBuffer(n), 0, n)\n  } else {\n    return mallocUint8(n)\n  }\n}\nexports.mallocUint8Clamped = mallocUint8Clamped\n\nfunction mallocBigUint64(n) {\n  if(hasBigUint64) {\n    return new BigUint64Array(mallocArrayBuffer(8*n), 0, n)\n  } else {\n    return null;\n  }\n}\nexports.mallocBigUint64 = mallocBigUint64\n\nfunction mallocBigInt64(n) {\n  if (hasBigInt64) {\n    return new BigInt64Array(mallocArrayBuffer(8*n), 0, n)\n  } else {\n    return null;\n  }\n}\nexports.mallocBigInt64 = mallocBigInt64\n\nfunction mallocDataView(n) {\n  return new DataView(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocDataView = mallocDataView\n\nfunction mallocBuffer(n) {\n  n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var cache = BUFFER[log_n]\n  if(cache.length > 0) {\n    return cache.pop()\n  }\n  return new Buffer(n)\n}\nexports.mallocBuffer = mallocBuffer\n\nexports.clearCache = function clearCache() {\n  for(var i=0; i<32; ++i) {\n    POOL.UINT8[i].length = 0\n    POOL.UINT16[i].length = 0\n    POOL.UINT32[i].length = 0\n    POOL.INT8[i].length = 0\n    POOL.INT16[i].length = 0\n    POOL.INT32[i].length = 0\n    POOL.FLOAT[i].length = 0\n    POOL.DOUBLE[i].length = 0\n    POOL.BIGUINT64[i].length = 0\n    POOL.BIGINT64[i].length = 0\n    POOL.UINT8C[i].length = 0\n    DATA[i].length = 0\n    BUFFER[i].length = 0\n  }\n}\n","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n","\"use strict\"\n\nfunction dupe_array(count, value, i) {\n  var c = count[i]|0\n  if(c <= 0) {\n    return []\n  }\n  var result = new Array(c), j\n  if(i === count.length-1) {\n    for(j=0; j<c; ++j) {\n      result[j] = value\n    }\n  } else {\n    for(j=0; j<c; ++j) {\n      result[j] = dupe_array(count, value, i+1)\n    }\n  }\n  return result\n}\n\nfunction dupe_number(count, value) {\n  var result, i\n  result = new Array(count)\n  for(i=0; i<count; ++i) {\n    result[i] = value\n  }\n  return result\n}\n\nfunction dupe(count, value) {\n  if(typeof value === \"undefined\") {\n    value = 0\n  }\n  switch(typeof count) {\n    case \"number\":\n      if(count > 0) {\n        return dupe_number(count|0, value)\n      }\n    break\n    case \"object\":\n      if(typeof (count.length) === \"number\") {\n        return dupe_array(count, value, 0)\n      }\n    break\n  }\n  return []\n}\n\nmodule.exports = dupe","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };"],"sourceRoot":""}